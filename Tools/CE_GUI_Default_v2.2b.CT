<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="31">
  <Files>
    <FearlessRev_Footer.png Encoding="Ascii85">#gye(6pquyX:#-1Mx.9;q.[efk+:kryGvMVcacR)N:jH#;0FRl8tIaj=ne6eJ/mV!d_up^c^6j+nR6}X6B:5:du/;QJ{o^P8XA$Bs/Iv$8hX*xy*-W7f68r$y8W,UIVxx:prO=aNMI-K^WsJ2s,joddpP)8+m#4]6zn}0LCk7yHjW?Ykd1wi+C0sdzb%pPH4Rj+9-pv7oAn^)2-M8M=Y(=_AC4XTMf[k!;j-+uJAU%G[mAI??vF+)3(NBM-.Q/cl$^r!XM[@#Yjz+p].KwUz#mG-xIDh#LC3Hok:WtC7Vn-g@g{UIhR9P#xZo%Z:*{@[F/J7ce@J{upB,#{Ej[FkFQ%6QzKG+jg$JLffXvXwx8NlV@:.l0!Ny/2[3LDH4qQLsC-h,@q2@8:w?(YfVZ#sir-ZRX=6AI!k-zBhMT+2eou8^1([8sLVJdhVW)+QP8mWkw#diBf=OXVD/?Vuf1t,qX?JrW:q!ES}1V.2PLfAsb]Wazjd*ve@Va)L4+e/z;EwPY1.:{;QjB)PKQH:O.jM*C!i)]z.jg7,-jLdPOgmKca1]Jpyapo#6w4Wum10!w]^G%5mvJVT}MG^=(pEgMoH{dc76f35V6k3lP-l]m3z?9Kk3jWVqJziD.,vlHan:1=JH^HiK+s.Ah.69vBJ(O6m+wNk3_HsehY3P3si{cmg*[=y01x+rL!x0UQK2J=q!60z*Fek{uaensn6X3@y#mhI+uf9}@#xgU%f2aK28oeaa1V1gwuaIK#.+L1[]{19sKPh;cQPo)]j=C%?ol,3z$D?wA?DPjWTwD3?hi=)_8qYk;?3I}hp3y@pFyX;4UA8.Vby7:cxU]=GX)j?9hps:_s_Jk?hTR0@I6cc#tgvmdyfx!Y]By2p7d_cuc,N}8BM*p3AQ=Eoqp@JM9t@u9v4}JT]FZhhd=)Owe84%RbUhbW)]im,I;aRZga,[wlUXUaUuFXhgh=W_H/u%{R5.F[9?j)i,*_$u=A{9M7X?loJA.eccQ$7^hGr]w5=wnM7w.aIUA?lD?9)#xre]Di;awU-m.rS%lUadb^}c{YIr{@?I$FhNe@IxdJ4,@UEJVZLw#.[3s53CQj5;t1/mS7_s#rozo+)8p1:w=y@KXXC-i),R/k=i8CK}U]d]adE!FIp:NB37/bI}4@IvY=K.GxcBwxK4$yq=T0Yc6k,n_*.2$ygU22rk]jox=l_X-YRn,ES{oS#Yj,SUg*LrQeFZ#:J(Z3$^mLQ1d(zNJT9^Z/5:is*,#n9gI1U%11@{l7^]zain4B@WEL}/G/Nvy2Z0ClY^+H=S$j.=).:hmfhtQ*34nO.lMR.deC:W4[RNkjX.QHzF.%5aVd_b;N?YjZ]E6%cXyQnNO;]GY7vC@Jnq7D#-2Xlu/7.H4j@K?q@JS8;bd?OwuK@G,i)ob^h2w6eWc%Xo:+u)r%4@G9}v.os8K(;JnKr4s8D$-677e84:S{O0$g^*(L,}GTE@zR)===@DqPGQFSLyNI)?36K(R(];P]Yc8aMQ!RCG:W0v$-cK()W[Wz]_#@96wMa[q]MQ#G}!KxS:A:%c,T]Gd*5*1!U)s^V3A4ro0v[V}41.*k!6S{WLtwk-:c!$ExLVs3*8z.rV{M7{cR[kNm%$O%kw/L}]0,SJhZ,[j$;KT5SMZPU}9S:akOsF$VEwmeQLhu=V70iPKG9,4B338^vLlh.9H[_vbswcgk$r)4)CgV*9G2yIu*t#i@f(,)heF+P8%n)WkdDZj3(N.4J:zh[OM/!O1kSX*],6TAV6PrUHA?ZYa6H0o#o11O7MwnzgY^_0lb2MshAU1QDs1eZlU3ZcTuo^tj3)UQ@,O?h(]6BhQ$C3/J6]BdAHhQ:M3j^0VqSxRgM?1z,FbjKYVFr=g4?=D^2l-2K2[34?35i1dl3IZz0y{kl8mdiQFJ-,]79fz4]ee3oWkJAs3#,!v)ne(x?.{*86cJ!kZGBr3NH%#)0HEr7ehUU^9QE[.[m^Dv]/LE1l%a}@#eF?w::ZMWZ1HU;(S34eII0:jPLAK*$zVQ.1Xlsh^o@nn3^YQDd4kM]i4:AV6uGR3!d^nDOFwsTM!xfDt?xvkb6_X@z;V7%g1Lhd#lFJ^.tvL2IN=Iu)fYQO)Q=vo@hbLt122]eACe2r2wD4uYuqYVoZHwU!UsQLZGpL#BXbrnv,{=LSLPAoeWz;)p:+dH^*i88CctEx4zhvc1UCYriAIvmdkP^fO=ZMa6Yy=x3Q}/Q}wV;rI:=$#U7fS/OsCWBT-VlTRjr{trYD%gASgA,F6tU}yOcEYOJ5k}$ad(QeIFT7e(wzs,4WcEt;=K;8t-k;Sx!n3.],jkikL/rc*VU[@G%XQtVT_/-]=;,Tve.5UY=64GknHFe!qlP0Rzi^=%FoU-#6E$J$r*6*kSR@J?]o86(6Zy?5=O#3YaH_7+d#E+FkVjdV8fP+0WC,j$52g-cn)guVrLkTl__c-)=8NmU)^z0x4{v{DG*Aqpeg9^m:4G*svkK#$h3H;eb$34QCb@NJNEvYKRVVK)8qmT^Awfm#ZWGhyB)JXkz_fKDHN$NHCNvIG$;w:SHdF;g8;bb1{0v/*-1]QWq8M205z_IUHduZ8CuIEea^B$M3M05ApFN@xC#,jSP/7}Cu#D:c%u9SZtEC;cb]C*snQ{f2}y-s:f5k,J8gTVZc*ST,IPw6ah06ZT-Ve$h)wDo7:_vX(g!wzkTZhdKu[6E#ChSGey.+Y^0*:zUwbwM]:SZ7eafe/iY}wdiJ@[9OBhmZjj$F:o8V!SO/8.sGgvkQaLWxl;5i5-fhTnKN5p4%4a_1V2Q9P72^@k3SpQ_E-17(K7FwB#Tsh5$P}9$f2m#M$T#(+3v:((Mf_iOToznKAh0=/hQqT:Z0-ie;#MN_?y%,atg:dM($^-mj[@Z8}0#_NYD^}x3t5Sx*m-!y?G!m}ik,d6H$twDH-zhtuf[h1KUp].:]588$b(^K7UF:^keaYG%_C^2;%W!5$i{DlknSUhlIhxDH%#WJvt=n_)vG[sD3Kc.Ef%2?=U!BW#SO(7Fcmyy;@CK:jH6Wnu6As/OxDRojno}?Qh$O1*x1hItQp!CZ/o)I0U}5njAOBa,u}.@U0UHEhuzr0.M1_aU[-0Gf.z3/-j?h4QQ!i5wv],CzDm)Rp7)7@zrS[qyJ6b,Xto,@:l/$8tSl4b(4.5j;^-s3fKp80,w-KI5$btv/(VZ-bVa31*i;oAu8=arik60x9Tc+c@HaJ[vgUuVt9M0#2Q+qi^W^$d0bj^dtN(s$)awDG8y9H2dTQ:T57Xz)KsR[/[(A=aIE^q4h:?VmThq!D^*4UmuoHKE1x[!LQdWx2(IqV.3g??kK0PNy)bW{u1RqY[_Cti?XW*3%TMvu6l]+$2KI^MiF]bm^aV2FVP#0Y4)z9JgkI{Q7Z=n28vN3?#EjGBM=Tx02w4dZG:_6A1H@=m6gnI:*cuIz381}r8*(o?)+nvPV6rhLV!u:.uRi5hF=uQGX5ygfCP%@RPQrzkrr]KE?JMp$uG!:)XRPSU.PkBZ-{W-Re.o?wk=]_Vh8h+KZ:!LhF4v=EhR*}]#{2w$^8V)J#hd16];9;wGeLvDl5u$hV{I?jez1$30Ra^hIz^#5=[Q*Gj)E,Wsgz}ioU#-;[-xg;np$/rf_W;h%(RV?;JQqkQn7OAM,GYEjW1xWoE8mV4{6JV$bilZu5[IBB%06W^o721k0mNh0.?(FB}l09)x(d}dv5CcNBXYgG!4Ca::KcByO.JZCISLdppd)d4SkMD6$nNS6eAbB(Xlip6;w*L3-Iuo-vg{h)%_J^8zp7ZW95M4Fdg:xw1lJd8pBJ7Yv]hh:us)kq$HieyPuzB:zrETtaTK%o(wX$X=aWjIATl]F,^rt1zdaPl=Ku7iwVuGru)LN+WMy2]tJR(1(!KAdp/mfL5^EE!CKYomR-#A:P:eX;,3RuJ,1WzhZqXunOi9o^XQtrJh^+[cY2[slAg:,q0e1bufEoHS^Uz-[SQYOh!WzCNEwx:$3@=x@/#wkY]Ot=+v_6zd/!]rbc-EE-EmJJNq]0oBGUlTv#XE_pD:}6Ga^zx)]=$P^4%WrI-t?WM2UbA$)gtfBzPK]m+:g$#g[yjqdYVys.DJe!EA:{PL.#z6PQjh9KJLE}?+=5!7V@q4MMxjRpb+IwNT7@5EfZRn7L7*=)U9]QqpS[?W,**P}!*$!U5B9,S!rna=K)LY2GV%pAHqQ=p[Tu6720[WTUq?*;x/!rWJKa7BSjt7FT(O_zvl1k_pO8z9UeVe0A.1XS1*^QVOy0zqLw+U(LfSTrQ^wc51zlphe4k-%oBSfQF0ciTSC4X*$KaPL7,rS_S(:y=)NZ)gLEulIRSn-anO1@7@WG3S5p]k-u?;j*V(SQRE$q)SB/$bT#Wh%B[S+rVc{ZLoKy+mRzo#v,cN:Hp8B-(8N-3h3%sD(jkwLzJF3su9$k{u1=6G*m?4;3(BQys/d:3UK6XVIjoN{kY4;Y1bWkkXX5lzI/3H,eii)9b,TS-_46Wl8BtOl(Ae^fg1k,?Fs=tp}BLHwxe?go4@SJAS%eLHR8xgrFd*BaLtR_)7@x,%K(j81XcGl;kbA7NhOzzNe{lIfK$[!M4-+GZa:ycb4i!a3c?9VceMSd+@Yd24z{A$0ewIBsQ4L(!Vw0aSQ/.W,(6,nH)mz*4Mw6-RxJX?7M6T9=yA],cn9kINlOj}C+FvU[bWPU.h4]i;gdrDe92iRSFC]..Ump5wchn+B,%+Cg3V:faMRUbt/.Z49^6:68TQAcMROJy!kJjFfH0ASZ32]Xr2,=2+e^n*%$Mx7sx5O:ju%7a+2D;*#00$WFt$(-tlkoZ.?n6^*=mplA5Kc8o%h)?)4yX[{^kK8S^#9Ky]{A[e-$Qc{#AKW.RHq-(gLn[x[g7pMb%=9S.:6Y8.Vq^wLJGExP8u_/*:u/kyH[vpS/F49o:PFmGSBA;Bn6(Mb$=DTQuJzi?I=m+U1wbSKvCE35!B4_?H.r$@ppEgA[ho2BI[p2u^Uq/Q-$%8GRcJAGENS(+G=9;[.DV+}^[[s_lp3B$Ypv}$z=Be)OUK,TWZ2E^E%K^!MCt:#P;6qXQuUe-yGIP:^j!UbT._^[UQQycbr%CoHO7mS6G5]7tCz{i@s{@qXg=TC8Equa6-vdqUbKC^7PLA6zdAi:yDs-qxTW}-lnT1h$1:iDKy/b}w$*]y}tQ[$D@z!kLKA;@oXu@V5U$FQ*;o)o.l(?FQRwLX(5]6Y0mUEw9Jr-Ow/g;F^#i01}$SQHwe_-NILpl8USnu(Ow}F=qb]8)LgI-NYQQG6/oihvkCOujqlTNz=wTDCHa}#uCuHZ-!E{N]tF,VM%e[i,0noCJpLs;MZMYI)Li[z-rG;}R,5]CI%X!6_*xLXdFD3HR%VPSH?qRjxai{]U%HdzX0@IR*qxgK00:d8SE#k6hu[PsMi)@?4aN0Rimub-kOvY4@Qq{h!.R]..E)s%)*0Hv4SSqzcE9o34i/FKJcif1FsL!tH=.1R[qAlHvi2RC)!3W#G$xV:dJ,yR}z;O,)Cbx}T$RwRD_+XN;8Qg-{NQ*z*oK0^+SuG];R+EhEvE6m;BveYu3foh4(wZR*d:u=1$)J7U$Z1j#JmGH8w$zlMQK?qE}RB(3yQ#6;)?.YmFr{T3Go@A19J1-ke5X,StZ@T!tN(MJqr=$Q5I[4)e(C!p8u)lD*sNKP=cg;w1P:_x[!_,)onZYu}=$.)p].eNDj[A,}X7){258Io!ViY[z4X1lkoE9E$@9}xyZGt2Z$5YwSRk6AW;5VfwSk,ay-9ixWb5[Q$#Kl9AD}bn6z3ZOhUwK,ZKU56#03BJ3*1}XlY!p^WhPN.hhD}qU#Qa$o),Ni4WGTQ]=tYaq=e.5:nEetm1s1QK93^C@K@NikKGS*FqN213=:qq4A.!SqgI?+XEt;;uChz9jB%jrF9_aXeCua9kzJ}y=I:uU_4Y:JtsPJ:MZWf#)p0EJb[tbbNDRJArT*{x2H=y.=PKdgC$]t!pD,svew%v/_lq-jHrUzA[I]_DyS:A=u[2Jl6Y]/z$xu8ViA/H9XH6v+P*$Yg[f}2Gxz_+=biT7olR{WH7[g9vVNHH[c49Fnv]QRAjHoC-K7[G-+TV[x]C8aW*f0ofr%qI1h=7m}]hFk=tc)hEeG@yr?]/w[*j9qs!,{5[m+Cva84YD,#eCug%l]-eflE*vM7c,8FK7f!^Y0cxX[%qF:Jl_sDm_AAU2e]-(dM-HZ^Vac?pSJ(Vte#H5/cM?+i48^fsCt^0C)TPUWk!:ALb[UFX.#6xrF}sHVrC^n8dJHEoZmnE.u#B_l]=ke[-UM}lA:e)A24T@(80)364*w5KX-*E%9C9N@RxH*G437rg{Pt#3d)mjR%Kt:G(?ysOmg-5Mxs.#%eTD4PDj$(b=@70-4_(ZgXe022hu-b+L+3KeeLc:O^WWaQ(A(,X[6y)E-gJXm;J.#Y)OwJz7UQGm**%[Z_p;CQeq5oUwrzD9@XVoe[BGBL_pVZndZ%3LKY)_-xWG3-6aMHep{f$Y=W1tsni/*^{Q{#t5c1$+)edO=deP8A*K=x)_QA,?CoH$N[#b=RpL%r/h7=*Qa!!iN[2J]3oOnEcCc{rOxkti.*T1(rly$d!+NgSM1vlYQXli5YRMczI5g8G)xJj$%/fcET-,N*DnI8?;dq_RMDh-=gToa:0fU{DQKqL]hkvMzDB@c^;}N/DX2V83+)oIb7@/Gr^6TE}tU%z^RPl)^h6zc0(le9V,smp0yQ#nr/Ef-S$(CniLW32pev;{Qq^.XBl$dVSmp/fa,c;mjQqB#6,7YFtSI#mjcsHkT?]!]$-#pnc:7xys1BO2DKxE@CE})$%RH;WuI}osQ54bn#(A3SEoCH5TOK8/;cj.rHfpkr.!-byf,kK}Iys+k+vi:9Lh^5t,nX@loFzv1mHe-)k!,xdJRUC2F6p9g,*Jc!-SD[}e2)za-,UsjL1o=_+4B%o:9}#R=4_.Uu)t})VLXgQCad1l:Bvh?A$a$=wh]Yq?ddnQ*Rct2VKIKE(L8A^xM6Prqy/Fr=yOetg84Jz++_-MXUcP#vLd^XK)yx[ZSvkccL7wGeN]+hn)YsA(PBZF8T@kO{B?gZi=,2Uc!9kthi%uvphNhOzP3QUhs*qv0DDPIYA^w{4u;4,_]h8)tf#-d)^Wx;tV7mYNmj1T#,g?#*pwEiSxC9qbs7qXlNh_a;s@a$6Qpzr!(fkwKgVfBEJRV-OZ$+IRDIMvSqp:tJX.B;MW?UBzluH@hN${(ng[@,237+5A7Ebcis#xD^M]6-+[OGiT)RO6b?Ya?:M-r;ze9Cu+;)SD[:1tM_b6v+k8yP4]W@JzFq.W_Z^K.CD%)y(w+^bwU^rMMG:M.VNvXdLRR=vFG71SXf$@4+uP+6}sL_WS?R;,wVk]-@;UXb4{1d$]ytX(N?LF+_dJ[Ga6!dgetTut:n60Yv2jh0?hrKTGh2{UUWfO1^/#,#B?d!8kai!b4YrH3WA,Jj^e-+A(m+(bNY(9VX0%h9u5(%hd=z:fCoL5rU!ndHVrMRCv;[I{%l0!krz59JCmVz9=n1+%%oBXB-@gTUb0=Vb8KOYQcd,cdpz8H=.6O7TYLJ:$W0ORZb_zpB,/T7qzb^NaK9gA$%uumrufjkEg7]4u4#wGH9)7F%I#UJbFRIS1FHk$_!7A4^1VzU-(@!(TxpY_6RBVFVM/.FE{qO0S_XMz#l+S=n$pcRPN3^S$q@0xH5Rc7}WXJ(XPwns0j@I)_e=UVmv?$A[BJCi/WSI8JP)53F^c71#=sV;^J0Y%gFzG-Z.88t)-WSEjjq6)setu8@s?^WIOp?2*kEi8vhM;@=4:bNNDUHvhYth8U?!oM!f7va35T?:Kw%Sj=3sRjDc61u5:VRgL2eM;YK4w,V,*CHMt}73SEAHoVhLALcT8ym;dHfunSdn3K4#-Dfvfr?A?u1(3h5?OHGKdXt./N}0@Pjiz{DU0HduS3HtiynOeY2JJf,oqfe1%uVSIrrO5Urc#oOu$ILan)BsPQJ;jjR5T8dPSY:W4{2Ys.brV+rMO(j4AsZR!wBV+zX:Q6Pq;z$JgK]3K@)_._ER[k7wB/[8X?ITe,W?f@J2HO4IkJL1_QLmXG?P4/aWz)%Kw#x9DHEtetoLk6.J0Dw4/onN.P2]l]bB[#Nc1VB*v)q9IWKPF@mYspQ1aQ;:KVn[#0fb;eQ:bZ%0JdWPNi7Fw_M#xP@9Lq^#^?s/*TxGX0Q{LasDMT!l?{]6A+.?4uC/.nF?0mHbU/TpxtQ^Dr*EzMx@=?.;nB%,v7OsM@x0Dl=H#ikCMXoNxWT4z0Oo[55*W#L-ce5Sd,dA$/WMzeuBW0^s9=Ak@cp*Aa+o@vd,Pf_dT[lYK}Hmk}+hB}0f=[HcNb)go!8#8Yo.(_TP0[+,-o/dBTSs=2vgv=@_0.UvsO-Kc{bJ!:ehocEsE]_0JoeS%pUZ{]Di^s(*7zToFNnwh,+)xF3oY#eMi[$4bK,r79i:v,^*07y.7qXUUQOE._6)3,gW(WFhMS1PIxCkoe[cX}KUENp5WN@?$iS%}QSR5x$damvTH9D[k]*g]{06v$2DHSMlMAFGtPTi:1W=}pw2#4ReA:K($!q;+,!Hg:_*:38_R+y}?woJ7*UafUa74jPZE3LcDZSTxjRnULnA2cbx!v(m;{mr,sQLNG4R1vxdiR5YzcB(9/}t(%k1aTxLiJUyM1%5z_lsk+LP5QJGh9/.zXT_)dcJ*8l5M01)trvnLHhe5-vV4Nqd+^?.@mOBV*n/DrVki3ALP84cmmG-^Z+Y.yuLB?bfqF-]Nz$@E7+[HC+.tbJ6KI}}e(8F]/;reUvLrj$lyCXl{#hY_F1;f=frB$uXw^G_p=Th_%VtA9@SJFx^JAzToE-,hAWA)iI3^GNKf2f,dLpK)Wq@!(e.bv3,cMiEEV$J23tbD$)FsgXsA,1oM,c}=wx!ewFR@ZL+ff0PtbdU?%N$_i_[pdh*DZMbts(pkbE26=DvVn/rci%{A;Qd#ZiQ;o[I@*vL;.[}gt@RZPqPDT%Djv:,LU^/!w6q$Ff!.5.AOQvxcMhhn;xMto0z%Yv-N.b(KNrPOM-!.d$uARS3r%-*-WkfT6I#rn]fAOFV+sdg#T3iE]?ei(;3;!4$HXVSfrclaK@1!@6M+42Y!b26fY,;_MxAXHG!?x!x3377k/2u%$vfdgv5!@!xyE%y^ZW/vHf_9F^f^%AOZ07-RvyX{==wO8CXRPigT%tb2x}5XTPsib075z#*1SZ3OSRA;ufBeL/$ie-kOWv*Q_Z3We3XdY+hHR%dG{N1vkN**l.s##X2{fcS6HxRnLo31YFTEyqfKdspeiJ(ZKv7yjoOk?*$$Gvp)rtyo4$qO/)jd=P2!*4GCnDQYlCx%LH)Nxlb=X2Y]x#Dj,V}i?0I[m9jtI/5h}!*07UOdi/Sl*ES^^=[W*pHaOLY7d1K,NlIR8n*$qCS:9,udjr^t;wMAjMGLjcTa};8CMXjF)r;B.Vl{2SoOGcZ:J!zG.2,x$6L?*r}ur^A*Td5vrBXkk-M::(p54ZV@t2:TZER51X7DOLXYcW$:(k*zCPY(m}La1.nAd]j$5vz{tWjh.4uEJeb*LD:x$;HFt?/CqHrGXnHn9b(iV(,,%EdtJ,.YIaUc,rezdt?SEvs^G9/%m:/XiBN?KMu+4KyjBQ,9mjE*pF]REsUwHX4OK1RLF(0?sh0@M,M+GQK{]szZ%o#NP;TK#N2IaceTC5IDiQB+JDU9VkICz=[{/d+/iub[OulGY?;*+@{){h#?gwQNULUhfsB@$:lRIYOt!=Exruu153tPqH$vJY0:z.OUl$%OkCxhMIzQ(i4:$2EG*})ZC8p)fASYfXxni+0@*rohG7x!RS:_DMlGi(:9/2b,PJm}fNOUyIcG?Y2ai(MK_4;uWR/2gGj^YA</FearlessRev_Footer.png>
  </Files>
  <CheatEntries>
    <CheatEntry>
      <ID>14893</ID>
      <Description>"&lt;FR Forum Descriptive&gt;"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>000080</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1418</ID>
          <Description>"(FastTravel &amp; Cutscenes cause values to 'reload'... !)"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0080</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>1424</ID>
          <Description>"(it can take a few seconds to collect the values...)"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1993</ID>
      <Description>"Enable cheats... (after save has fully loaded)"</Description>
      <Options moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <Color>808000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : &lt;game&gt;.exe
  Version:
  Date   : 2020-05-04
  Author : &lt;author&gt;


}

[ENABLE]


[DISABLE]


</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1419</ID>
      <Description>"Errors &amp; Settings..."</Description>
      <Options moDeactivateChildrenAsWell="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>008080</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>14852</ID>
          <Description>"Error Statistics..."</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1420</ID>
              <Description>"&gt; Player Status"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>nCrash1</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>1421</ID>
              <Description>"&gt; Ship Status"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>nCrash2</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>1441</ID>
              <Description>"&gt; Map Waypoint"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>nCrash3</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>1449</ID>
              <Description>"&gt; Map Waypoint Teleport"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>nCrash4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>1481</ID>
              <Description>"&gt; Teleport &amp; Coordinates"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>nCrash5</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>14780</ID>
          <Description>"Cheat table settings..."</Description>
          <Options moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   :
  Version:
  Date   : 2020-10-22
  Author :

  Manage game-specific settings...
  (one must save the table manually to keep any changes permanently)
  Important note: one should NOT touch the 'Developer tools' section !
  (use at own risk and voids further support...)
}

[ENABLE]

globalalloc(bShowHideLua,1,$process)

bShowHideLua:
db 1


[DISABLE]

bShowHideLua:
db 1

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>14828</ID>
              <Description>"(fill in your choices in the 'Description' field)"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>14825</ID>
              <Description>"(launches this browser w/ search_string from 'Info' button)"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14875</ID>
                  <Description>"(fill in browser, without extension ~ do not change search string)"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14830</ID>
                  <Description>"iexplore"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14858</ID>
                  <Description>"fearless CE GUI Framework"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14826</ID>
              <Description>"(sets 'Compact View Mode' at startup: Compact (default) = 1 ~ Full View = 0)"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14831</ID>
                  <Description>"1"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14832</ID>
              <Description>"(sets background color - default =F6EEED)"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14833</ID>
                  <Description>"F6EEED"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14873</ID>
              <Description>"(fill in Game's EXE name, including extension &amp; full pathname)"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14867</ID>
                  <Description>"&lt;game&gt;.exe"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14881</ID>
                  <Description>""</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14422</ID>
                  <Description>"(fill in full path for Report export location)"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14423</ID>
                      <Description>"(or use: &lt;table&gt; ~ &lt;game&gt; variables)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14424</ID>
                      <Description>"&lt;game&gt;"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14862</ID>
              <Description>"(apply above changes to cheat table)"</Description>
              <LastState/>
              <Color>FF00FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   :
  Version: 
  Date   : 2020-11-05
  Author :

  Has primarily visual effect on color change...
  color picker: google "HTML Color Picker W3Schools"
}

[ENABLE]
{$lua}
local mForm = getMainForm().frmAutoInject

mForm.Button1.doClick()
mForm.Button1.doClick()

local al = getAddressList()
sBrowser = al.getMemoryRecordByID(sBrowserID).Description .. '.exe'
sBrowserString = al.getMemoryRecordByID(sBrowserStringID).Description
sSearch = " ? " .. sBrowserString .. [[ &gt;nul 2&gt;nul]]


{$asm}
// disables script automatically by CE...
test al,al


[DISABLE]

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>14829</ID>
              <Description>"(you must save/reload the table to apply these settings permanently !)"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>14857</ID>
              <Description>"Developer tools... (do not use, unless at your own risk)"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>26032</ID>
                  <Description>"(to keep/apply changes permanently, you must Save/Reload your table)"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF00FF</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14849</ID>
                  <Description>"(game verification...)"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14868</ID>
                      <Description>"(Check regularly (default) = 1 - AutoAttach once = 0)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14874</ID>
                          <Description>"(Check also for similar game_name = 2 - No AutoAttach = 9)"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>FF0000</Color>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14836</ID>
                          <Description>"1"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14869</ID>
                      <Description>"(fill in Timer's Interval)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14866</ID>
                          <Description>"3000"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14859</ID>
                      <Description>"(verify AOB string &amp; memory_limit_range (= hexvalue) &amp; protectionflags)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14860</ID>
                          <Description>"xx xx xx xx xx"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14861</ID>
                          <Description>"2000"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14897</ID>
                          <Description>"+X-C-W"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14882</ID>
                      <Description>"(fill in Game's EXE name, incl ext &amp; full pathname: see above)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14853</ID>
                  <Description>"(prompt to save any table design changes: No (default) = 0 ~ Yes = 1)"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14854</ID>
                      <Description>"0"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14855</ID>
                  <Description>"(hide most elements in Lua Engine window: Yes (default) = 1 ~ No = 0)"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14856</ID>
                      <Description>"1"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14883</ID>
                  <Description>"(Free Roam keyboard keys: F10-F12 ~ 2-4-6-8-7-9 ~ (unused))"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14884</ID>
                      <Description>"0x79"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14892</ID>
                      <Description>"0x7B"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14891</ID>
                      <Description>"0x62"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14890</ID>
                      <Description>"0x64"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14889</ID>
                      <Description>"0x66"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14888</ID>
                      <Description>"0x68"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14887</ID>
                      <Description>"0x67"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14886</ID>
                      <Description>"0x69"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14885</ID>
                      <Description>"0x78"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14899</ID>
                  <Description>"(show Design submenu: No (default) = 0 ~ Yes = 1)"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14900</ID>
                      <Description>"1"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>26031</ID>
                      <Description>"(fill in full path for Dissect Code location ~ ignore process: No (default) = 0)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>26066</ID>
                          <Description>"(or use: &lt;table&gt; ~ &lt;game&gt; variables)"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>FF0000</Color>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14033</ID>
                          <Description>"&lt;table&gt;"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14034</ID>
                          <Description>"0"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>26065</ID>
                  <Description>"(Dissect Structure: engine  (Anvil = 0/Disabled = 99) ~ offset values, seperated by '~')"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14066</ID>
                      <Description>"99~0xXX~0xXX"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14901</ID>
                  <Description>"(show WindowMode menu option: No (default) = 0 ~ Yes = 1)"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14902</ID>
                      <Description>"0"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14898</ID>
              <Description>"Maintenance scripts"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="1" RealAddress="00000000"/>
              <Color>808000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14903</ID>
                  <Description>"Reset Lua Engine GUI"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   :
  Version: 
  Date   : 2020-11-02
  Author :

  Dis/enables menu in Lua Engine window (+ bottom part)
  Note: 'luaMenu' needs to be global in order to "keep/exchange" its pointer !
}

[ENABLE]
{$lua}

SwitchLuaGui()

{$asm}
test al,al

[DISABLE]
{$lua}


</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>14896</ID>
                  <Description>"Disable all cheats (using hotkey)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   :
  Version: 
  Date   : 2020-11-02
  Author :

  Disables all scripts and locked values...
}

[ENABLE]
{$lua}

  local bAll = true
  if (isKeyPressed(VK_F11)) then bAll = false end

  DisableMainScript(bAll)

{$asm}
// disables script automatically by CE...
test al,al


[DISABLE]

</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Activate</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>123</Key>
                      </Keys>
                      <Description>Disable all cheat entries...</Description>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Activate</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>122</Key>
                      </Keys>
                      <Description>Disable only locked values...</Description>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>26071</ID>
                  <Description>"Run All Form Scripts"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   :
  Version: 
  Date   : 2020-11-02
  Author :

  Runs any script, "linked" in Form(s)...
}

[ENABLE]
{$lua}
function runFormScripts(sender)
  if syntaxcheck then return end
  --print(sender.Name)
  --if (sender.Name == 'ListBox') then onSelectIcon(sender) end

end

{$asm}
// disables script automatically by CE...
test al,al


[DISABLE]

</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1</ID>
                  <Description>"Scripts to run per Timer interval"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   :
  Version: 
  Date   : 2020-11-02
  Author :

  Add any scripts/functions/routines here that need to be run on a regular interval
  (current interval uses 'Timer's Interval')
}

[ENABLE]
{$lua}
  -- pcall ensures that no errors are reported prior to loading/enabling scripts in addresslist...
  --if not pcall(function() myFunction() end) then return end

{$asm}
test al,al

[DISABLE]


</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pBhvAssassin</Name>
      <Address>052B0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pEntity</Name>
      <Address>052B0010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHealth</Name>
      <Address>052B0020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pInventory</Name>
      <Address>052B0030</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSharedData</Name>
      <Address>052B0040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pNotoriety</Name>
      <Address>052B0050</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bGodmode</Name>
      <Address>052B0060</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInvisible</Name>
      <Address>052B0070</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFullBreath</Name>
      <Address>052B0080</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nCrash1</Name>
      <Address>052B0090</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nCrash2</Name>
      <Address>052B00A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nCrash3</Name>
      <Address>052B00B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nCrash4</Name>
      <Address>052B00C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nCrash5</Name>
      <Address>052B00D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pStructCrdBase</Name>
      <Address>052B00E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pStructCrdOffset</Name>
      <Address>052B00F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCheckTools</Name>
      <Address>052B0100</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCheckIcons</Name>
      <Address>052B0110</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCheckViewP</Name>
      <Address>052B0120</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAccomplishm</Name>
      <Address>052B0130</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAccomplVFT</Name>
      <Address>052B0140</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pNavalShipPlayer</Name>
      <Address>203C0150</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInvisibleShip</Name>
      <Address>203C0160</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bShowHideLua</Name>
      <Address>05280150</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFreeRoam</Name>
      <Address>052B0150</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>AddrListID</Name>
      <Address>052B0160</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>OrigCoord</Name>
      <Address>052B0170</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>XYstepVal</Name>
      <Address>052B0180</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ZstepVal</Name>
      <Address>052B0190</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ZstepdropHeight</Name>
      <Address>052B01A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Xval</Name>
      <Address>052B01B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Yval</Name>
      <Address>052B01C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Zval</Name>
      <Address>052B01D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInit</Name>
      <Address>052B01E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInit2</Name>
      <Address>052B01F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFreeRoam</Name>
      <Address>052B0200</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>FOVCam</Name>
      <Address>052B0210</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMapWayp</Name>
      <Address>052B0220</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nDropHeight</Name>
      <Address>052B0230</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nChoice</Name>
      <Address>05280160</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pDayTimeMgr</Name>
      <Address>05290150</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pDTime</Name>
      <Address>05290160</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMissionTimer2</Name>
      <Address>052801B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>IntTimerDiffer2</Name>
      <Address>052801C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMissionTimer2</Name>
      <Address>052801D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMissionTimer</Name>
      <Address>052801E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>IntTimerDiffer</Name>
      <Address>052801F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMissionTimer</Name>
      <Address>05280200</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAddrPerk</Name>
      <Address>1EFD0240</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPerkBChoice</Name>
      <Address>1EFD0250</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <LuaScript>-- You must accept to execute
-- the script !
-- If not, the CE table
-- will return errors...


-- will auto-attach the game; even when table is loaded first...
-- place this at start/common part of lua script
-- will run ONLY once when CE table is loaded
-- when changing process, you must reload table or function !
--local myGame = "&lt;game&gt;.exe"
--local aalist=getAutoAttachList()
--stringlist_add(aalist,myGame)


-- *** still ToDo: ***
-- 'modal window' kicks in after X secs: stop checkTimer and report "game not found"


-- to update other CE tables, copy everything from here upto &amp; excluding 'function Hover()'
-- general settings:
local al = getAddressList()
local mForm = getMainForm()

-- will auto-attach the game; even when table is loaded first...
local getMrByID = al.getMemoryRecordByID
myGameID = 14867
myGame = al.getMemoryRecordByID(myGameID).Description
local myPathID = 14881
myPath = al.getMemoryRecordByID(myPathID).Description
-- ID main script ~ disabled upon re-attaching...
local mrMainScript = getMrByID(1993)

-- add 'Window Mode' to the [Tools] menu... ACBF only (for now)...
local bWindowMode = tonumber(al.getMemoryRecordByID(14902).Description)
local bSysMenu = tonumber(al.getMemoryRecordByID(14900).Description)
-- verify regularly if correct process has been opened... - see WinTitle...
local bCorrectProc = al.getMemoryRecordByID(14836).Description
local sCheckProc = al.getMemoryRecordByID(14860).Description
local nCheckMemRange = al.getMemoryRecordByID(14861).Description
nCheckMemRange = tonumber(nCheckMemRange,16)
local sProtFlags = al.getMemoryRecordByID(14897).Description
local nChkTimer = tonumber(al.getMemoryRecordByID(14866).Description)
-- set to '0' if you want default CE GUI...
local bDefaultCompactGui = tonumber(al.getMemoryRecordByID(14831).Description)
if (bDefaultCompactGui ~= 0 and bDefaultCompactGui ~= 1) then bDefaultCompactGui = 1 end
-- set minimum size CE form...
mForm.Constraints.MinWidth = 510
mForm.Constraints.MinHeight = 300
-- add some color... ~ +compatible v6.7...  ~ default background color ~ 0xF6EEED
-- .List &amp; .Header not supported in prev.7x...
-- also converting color 'endianness'...
local hColor = al.getMemoryRecordByID(14833).Description
local sTmp = ""
for i = #hColor, 2, -2 do sTmp = sTmp .. string.sub(hColor,i-1,i) end
hColor = '0x' .. sTmp
local function setListColor(sColor)
    al.Control[0].BackgroundColor = sColor
    al.Control[0].Color = sColor
    al.Control[1].BackgroundColor = sColor
    al.Control[1].Color = sColor
end
setListColor(hColor)
-- define your default browser...
--local mr = al.getMemoryRecordByID(14654)
sBrowserID = 14830
sBrowser = al.getMemoryRecordByID(sBrowserID).Description .. '.exe'
sBrowserStringID = 14858
sBrowserString = al.getMemoryRecordByID(sBrowserStringID).Description
sSearch = " ? " .. sBrowserString .. [[ &gt;nul 2&gt;nul]]
-- Show/Hide Error &amp; Settings sections ~ see cycleConfig()...
local mrConfig = al.getMemoryRecordByID(1419)
-- prompt to save any changes in table, or simply ignore and quit instantly...
-- 'Ship Battle' script unintentionally changes table, causing a 'save'-prompt upon quiting...
-- google "memrec.DontSave still triggers Save changes"
local bPromptToSave = al.getMemoryRecordByID(14854).Description
-- sets 'editedsincelastsave' property accordingly...
-- note: setting to 'false' will stop CE from closing ?!
local function NoSaveChanges(bSaveOff)
  getMainForm().OnCloseQuery=function()
      --messageDialog('Throw away all your unsaved changes?', mtConfirmation,  mbYes, mbYesToAll)
      return bSaveOff end
end
if bPromptToSave == "0" then NoSaveChanges(true) end
-- hide most lua window elements...
-- keep menu copy ~ see settings DevTools...
if (luaMenu == nil) then luaMenu = getLuaEngine().Menu end
bHideLua = al.getMemoryRecordByID(14856).Description
if bHideLua == "1" then
   local luaForm = getLuaEngine()
   luaForm.Panel1.Visible = false
   luaForm.Splitter1.Visible = false
   luaForm.Menu = nil
end
-- Scripts to run per Timer interval
local mrScriptToRun = al.getMemoryRecordByID(1)
-- Pathname save location (eg: Dissect Code)
local pathSaveFiles = al.getMemoryRecordByID(14033).Description
local bDissectProc = al.getMemoryRecordByID(14034).Description
-- Dissect Structure: Game_engine, followed by respective offsets in chain path...
local structParams = al.getMemoryRecordByID(14066).Description
local nNameLookupID = 0
-- Pathname report export location...
sPathExport = getAddressList().getMemoryRecordByID(14424).Description


-- redirect all prints for export to file...
-- makes use of global 'fContent' variable...!
default_print = print
function redirectPrint(bRedirect)
     if ( bRedirect == 1) then
        print = function(str)
              fContent = fContent .. str .. '\n'
        end
     else
        print = default_print
     end
end

-- functions for [Tools] submnenu...
-- **********************************
-- adds a Compact GUI...
-- google: "cheat engine CE compact mode" &amp; "Add menuItem for Main CE Form (hide/show some control)"
local sCompactMark = ' ✓'
local sWindowMark = ''
local sGetnameMark = ''
local sConfigMark = ''
local sMenuItem1 = 'Compact View'
local sMenuItem2 = 'Window Mode'
local sMenuItem3 = 'Errors &amp;&amp; Settings...'
local sMenuItem4 = 'Select &amp;&amp; Launch Your Game...'
local sMenuItem5 = 'Show Table Name...'
local sMenuItem6 = 'Disable All Cheats [Ctrl+F11/F12]'

local sMenuItem21 = 'Open Memory View'
local sMenuItem22 = 'Open Dissect Structure'
local sMenuItem23 = 'Open Lua Engine'
local sMenuItem24 = 'Show CE Debug Info'
local sMenuItem25 = 'Dissect Code...'
local sMenuItem26 = 'Load Dissect Code'
local sMenuItem27 = 'Save Dissect Code'
local sMenuItem28 = 'Build Dissect Code'
local sMenuItem29 = 'Clear Dissect Code'
local sMenuItem30 = 'Getname(Anvil)'
local sMenuItem31 = 'Switch Lua Engine GUI'

local sMenuItem41 = "Delete All 'Unnamed' Structures..."
local sMenuItem42 = "Delete Structures Selectively..."
local sMenuItem43 = "Add Address By Reference"
local sMenuItem44 = "CLean Up Structures..."
local sMenuItem45 = "Switch Lua Engine Gui"

local function cycleFullCompact()
   local state = not(compactmenuitem.Caption == sMenuItem1)
   compactmenuitem.Caption = state and sMenuItem1 or (sMenuItem1 .. sCompactMark)

   mForm.Splitter1.Visible = state
   --getMainForm().Panel1.Visible    = state
   --mForm.Panel2.Visible    = state
   --getMainForm().Panel3.Visible    = state
   mForm.Panel4.Visible    = state
   mForm.Panel5.Visible    = state
   --getMainForm().Panel6.Visible    = state
   --getMainForm().Panel7.Visible    = state           -- seems to cause "incorrect gui"
   --local MPanel90 = createPanel(getMainForm().Panel7)
   --MPanel90.Anchors = '[akTop]'
   --getMainForm().Panel8.Visible    = state
   --getMainForm().Panel9.Visible    = state
   --getMainForm().Panel10.Visible   = state
   --getMainForm().Panel14.Visible   = state

   -- incorrect color gives black background...!
   if state then setListColor('0xFFFFFF') else setListColor(hColor) end
end

-- check current window mode status
local addrD3D = 0
local function CheckWindowMode()
    -- check if a process is attached...?
    if (getOpenedProcessID() == 0) then return end
    if addrD3D == nil or addrD3D == 0 then
       local bytes = "F7 DE 1B F6 33 C0"
       local memScanner = createMemScan(false)
       memScanner.setOnlyOneResult(true)
       memScanner.firstScan(
	           soExactValue,vtByteArray,rtRounded,bytes,nil,
	           0,0xFFFFFFFF,"+X-C-W",fsmNotAligned,"",true,false,false,false)
       memScanner.waitTillDone()
       addrD3D = memScanner.getOnlyResult()
       -- to avoid erros when incorrect process has been selected...
       if addrD3D == nil or addrD3D == 0 then process = nil; return end
       addrD3D = addrD3D-0x7+0x3
       memScanner.destroy()
    end
    local bStatus = readBytes(readInteger(addrD3D),1)
    if (bWindowMode == 1) then
       if (bStatus == 0) then sWindowMark = ' ✓' else sWindowMark = '' end
       WinModemenuitem.Caption = sMenuItem2 .. sWindowMark
    end
end

local function cycleWinMode()
    if (getOpenedProcessID() == 0) then return end
    -- 0 = windowed ~ 1 = fullscreen
    local bStatus = readBytes(readInteger(addrD3D),1)
    --print(string.format('%X + %d',readInteger(addrD3D),bStatus))
    if (bStatus == 0) then bStatus = 1; sWindowMark = '' else bStatus = 0; sWindowMark = ' ✓' end
    WinModemenuitem.Caption = sMenuItem2 .. sWindowMark
    writeBytes(readInteger(addrD3D),bStatus)
end

local bConfig = 1
local function cycleConfig()
    -- show/hide Errors &amp; Settings subsections...
    local ceVersion = tonumber(string.match(getCEVersion(), '^.-.'))
    if (bConfig == 1) then
        bConfig = 0
        sConfigMark = ''
        if (ceVersion &lt; 7) then
            mrConfig.Options = '[moHideChildren,moDeactivateChildrenAsWell]'
        else
            mrConfig.Options = '[moAlwaysHideChildren,moDeactivateChildrenAsWell]'
        end
        mrConfig.Active = false
    else
        bConfig = 1
        sConfigMark = ' ✓'
        mrConfig.Options = '[moDeactivateChildrenAsWell]'
        mrConfig.Active = true
    end
    Configmenuitem.Caption = sMenuItem3 .. sConfigMark
end

local function OpenFileDialog(sender)
    local fdialog = createOpenDialog(self)
    fdialog.Filename = myPath:match("(.*[/\\])")
    --fdialog.File = myGame:match("\\([^\\]+)$")
    fdialog.Filter = 'Executable files|*.exe'
    --fdialog.InitalDir = os.getenv('USERPROFILE')
    fdialog.Execute()
    local sEXE = fdialog.FileName:match("\\([^\\]+)$")
    if (sEXE ~= "" and sEXE ~= nil) then
       myGame = sEXE
       local sPath = fdialog.FileName:match("(.*[/\\])")
       local cmd = "start \"\" /d \"" .. sPath .. "\" " .. sEXE
       --print(cmd)
       os.execute(cmd)
       --shellExecute(cmd)
       al.getMemoryRecordByID(myPathID).Description = sPath
       if ( bCorrectProc == '9' ) then
          local nCount = 1
          -- needed to attach process to CE...
          openProcess(myGame)
          while process ~= myGame do
              openProcess(myGame)
              sleep(1000)
              nCount = nCount + 1
              if (nCount &gt; 10) then
                  local sMessage = [[
                        CE can not seem to attach the program ?!
                        Use [File ~ Open Process] instead...]]
                  showMessage(sMessage)
                  break
              end
          end
          --print(string.format('%s ~ %s',tostring(enumModules()[1].Name),tostring(enumModules()[1].Address)))
          openProcess(myGame)
       end
    end
    --print(myGame)
end

myTablename = ''
local function ShowTableName()
    local sTablename = getTable()
    local sText = 'Table name &amp; location: \n'
    sText = sText .. '[' .. sTablename .. ']'
    local nType = mtInformation
    local nButton = mbOK
    messageDialog(sText, nType, nButton)
end

function getTable()
       local sOpen = mForm.OpenDialog1.FileName
       local sSave = mForm.SaveDialog1.FileName
       local s1 = sSave or sOpen -- or 'undefined'
       --print(s1 .. ' ~ ' .. myGame)
       -- gets processname now and then...
       if (s1:match("\\([^\\]+)$") == myGame:match("\\([^\\]+)$")) then s1 = myTablename end
       --local s2 = s1:match("(.*[/\\])") or s1 ~ pathname
       --local s1 = s1:match("\\([^\\]+)$") or s1 ~ filename
       myTablename = s1
       return myTablename
end

function DisableMainScript(bAll)
  if ( bDisableRun == 1 ) then return end
  --local bAll = bAll or true
  for i=0,al.Count-1 do
      if (bAll) then
          al[i].Active = false
      else
          if (al[i].Type &lt; 10) then al[i].Active = false end
      end
  end
end

local function OpenMemViewer()
    getMainForm().btnMemoryView.doClick()
end


function SplitStr(s, delimiter)
    result = {};
    for match in (s..delimiter):gmatch("(.-)"..delimiter) do
        table.insert(result, match);
    end
    return result;
end

-- functions for [Design] submnenu...
-- **********************************

-- add Design menu to Structure form...
local function OpenDissectStruct()
   --getMemoryViewForm().miDissectData2.doClick()
   --getMemoryViewForm().miOpenInDissectData.doClick()
   local form = createStructureForm()
   --local form = enumStructureForms()[1]
   local mmenu = form.Menu

   local mmenu_items = menu_getItems(mmenu)

   -- Design submenu...
   local mi1 = createMenuItem(mmenu)
   mi1.Caption = '[Design]'

   local DelUnnamedmenuitem = createMenuItem(mmenu)
   DelUnnamedmenuitem.Caption = sMenuItem41
   DelUnnamedmenuitem.OnClick = DissectStructRemove
   mi1.add(DelUnnamedmenuitem)

   local DissectStructRemoveSelectmenuitem = createMenuItem(mmenu)
   DissectStructRemoveSelectmenuitem.Caption = sMenuItem42
   DissectStructRemoveSelectmenuitem.OnClick = DissectStructRemoveSelect
   mi1.add(DissectStructRemoveSelectmenuitem)

   local Sepmenuitem = createMenuItem(mmenu)
   Sepmenuitem.Caption = '-'
   mi1.add(Sepmenuitem)

   local AddAddressRefmenuitem = createMenuItem(mmenu)
   AddAddressRefmenuitem.Caption = sMenuItem43
   AddAddressRefmenuitem.OnClick = AddAddressByRef
   mi1.add(AddAddressRefmenuitem)

   local CleanupStructmenuitem = createMenuItem(mmenu)
   CleanupStructmenuitem.Caption = sMenuItem44
   CleanupStructmenuitem.OnClick = CleanupStruct
   mi1.add(CleanupStructmenuitem)

   local Sep2menuitem = createMenuItem(mmenu)
   Sep2menuitem.Caption = '-'
   mi1.add(Sep2menuitem)

   local SwitchLuaGuimenuitem = createMenuItem(mmenu)
   SwitchLuaGuimenuitem.Caption = sMenuItem45
   SwitchLuaGuimenuitem.OnClick = SwitchLuaGui
   mi1.add(SwitchLuaGuimenuitem)

   mmenu_items.add(mi1)
   --form.show()
end

function DissectStructRemove()
  local nCount = getStructureCount()

  local sText = 'Do you want to delete all Unnamed structures now...? \n' ..
                'Note: [All] = Delete ALL structures !'
  local nResult = messageDialog(sText, mtInformation, mbYes, mbAll, mbCancel)
  if not (nResult == 6 or nResult == 8) then return end

  -- LIFO deletion...
  for i=nCount-1,0,-1 do
    --local sName = nil
    local oStruct = getStructure(i)
    local sName = string.match(oStruct.name, "unnamed")
    if (nResult == 8) then sName = oStruct.name end
    if (sName ~= nil) then oStruct.removeFromGlobalStructureList() end
  end
end

function CleanupStruct()
    local nResult = 0

    local nIdx = 0
    local aStructInfo = {}
    local aStructList = {}
    local aStructElem = {}
    function Split(s, sep)
        local sep = sep or '%.'
        local nPosSep = string.find(s,sep)
        local sStr1 = string.sub(s,1,nPosSep-1)
        local sStr2 = string.sub(s,nPosSep+1)
        aStructInfo[sStr1] = nIdx
        aStructInfo[sStr2] = nIdx +1
        aStructList[sStr1] = nIdx

        local nOffset = 0
        local nCount = getStructureCount()
        for i=0,nCount-1 do
            local oStruct = getStructure(i)
            if (oStruct.Name  == sStr1) then
                local nElem = oStruct.Count
                for j=0,nElem-1 do
                    local oElem = oStruct.Element[j]
                    if (oElem.Name == sStr2) then nOffset = oElem.Offset; break end
                end
            end
        end

        aStructElem[sStr1..'~'..sStr2..'~'..nOffset] = nIdx
    end

    function StructElemRemove()
        local sText = 'Do you want to remove obsolete elements from all structures now...? \n\n'..
                      'Tip: Remove "Unnamed/Obsolete" structures first !'
        nResult = messageDialog(sText, mtInformation, mbYes, mbCancel)
        if not (nResult == 6 ) then return end

        -- clears Lua Engine window
        luaForm = getLuaEngine()
        luaForm.MenuItem5.doClick()

        print('\n\n')
        print('Recreating "Structure.Elements" objects... Please, be patient... \n')

        local nCount = getStructureCount()
        -- perhaps: better to delete structs first and then add struct.elements...?!
        for i=nCount-1,0,-1 do
            local oStruct = getStructure(i)
            local sName = string.match(oStruct.name, "unnamed")
            if (sName == nil) then
                oStruct.destroy()
            end
        end

        local sPrevStruct = ''
        local oCurStruct = nil
        for k,v in ipairs(aStructElem) do
            local aString = SplitStr(v, '~')
            local sCurStruct = aString[1]

            print('=&gt; ['.. k .. ']: ' .. aString[1] .. ' + ' .. aString[2] .. ' + ' .. string.format('%X',tonumber(aString[3])))
            if (sCurStruct ~= sPrevStruct) then
                oCurStruct = createStructure(aString[1])
                oCurStruct.addToGlobalStructureList()
            end
            local oElem = oCurStruct.addElement()
            oElem.Name = aString[2]
            oElem.Offset = tonumber(aString[3])
            oElem.Vartype = 3
            sPrevStruct = aString[1]
        end
    end

    -- *********************************
    -- *** looping through memrecords...
    local al = getAddressList()
    local nCount = al.Count
    local sSep = '%.'

    for i=0,nCount-1 do
        local mr = al.getMemoryRecord(i)
        local addrVal = tostring(tonumber(mr.Address) or -99)
        if (addrVal == "-99") then addrVal = string.sub(mr.Address,1,1) end
        local sDescr = string.match(mr.Description,"pointerscan")

        if ( (mr.Type &lt; 10 and mr.OffsetCount &gt; 0 and sDescr == nil) or addrVal == "+") then
            --print(string.format('[%03d/%03d~%03d]: %s =&gt; %02d - %03d |  %s ~&gt; %s {%s}',
             --                    i, mr.ID, mr.Index, mr.Description, mr.Type, mr.OffsetCount, mr.Address, addrVal, sDescr))

            if (string.sub(mr.Address,1,1) == "+") then
                Split(string.sub(mr.Address,2),sSep)
            end
            for j=0,mr.OffsetCount-1 do
                local sOffset = tonumber(mr.OffsetText[j],16)
                if (sOffset == nil) then
                    Split(mr.OffsetText[j],sSep)
                end
            end
        end
    end

    local aTmp = {}
    for n in pairs(aStructElem) do table.insert(aTmp, n) end
    table.sort(aTmp)
    aStructElem = aTmp

--[[
    for i,n in ipairs(aStructElem) do
        print(i .. ' - ' .. n .. ' [' .. aStructElem[i] .. ']')
    end


  local nCount = getStructureCount()
  local sName = ''
  for i=0,nCount-1 do
      local oStruct = getStructure(i)
      sName = oStruct.name
      print(tostring(sName))
  end

for k,v in pairs(aStructInfo) do
    print(k)
end
print('\n')
for k,v in pairs(aStructList) do
    print(k)
end
]]--

    StructElemRemove()

    if (nResult == 6 ) then
        print('\n =&gt; Verify your structures and then [Save As] your table under new name...')
        print('\n =&gt; Just close window when no longer needed...')
    end
end

-- ***
-- source info: google "cheat engine a way to create a checkbox list?"
function DissectStructRemoveSelect()
    function createScrollBox(Parent)
        local scrbox = createComponentClass('TScrollBox', Parent)
        scrbox.Parent = Parent
        return scrbox
    end

    local function addImgButton(oPanel)
        local btn1 = createButton(oPanel)
        btn1.Width = 120
        btn1.Height = 20
        btn1.Top = oPanel.Height - btn1.Height - 10
        btn1.Left = 10
        btn1.Caption = 'Delete selected...'
        btn1.onClick = bg_Toggle
        btn1.ShowHint = true
        btn1.Hint = " Click here to initiate deletion... "
    end

    function bg_Toggle(sender)
        local sText = 'Do you want to delete these selected structures now...?'
        local nResult = messageDialog(sText, mtInformation, mbYes, mbCancel)
        if not (nResult == 6 ) then return end

        local nCount = getStructureCount()
        local i
        for i=nCount-1,0,-1 do
            --print(_G['cbx'..i].State)
            local oStruct = getStructure(i)
            if (_G['cbx'..i].State == 1) then
                oStruct.destroy()
            end
        end
        f.close()
    end

    function buildListbox()
        local nCount = getStructureCount()
        if (nCount == 0) then return end

        f = createForm()
        f.Top = 200
        f.Left = 200
        f.Width = 350
        f.Height = 350
        f.Caption = "Deleting structures..."

        local oPanel = createPanel(f)
        oPanel.width,oPanel.top,oPanel.left = 320,10,10
        oPanel.Height = 300

        addImgButton(f)

        a = createScrollBox(oPanel)
        a.Top = 0
        a.Left = 10
        a.Width = 300
        a.Height = 290
        a.Color = '0x00DFF7FF'
        a.ScrollWidth = 10
        a.VertScrollBar.Increment = 200
        a.VertScrollBar.Page = 300
        --a.VertScrollBar.Smooth = true
        local nRange = nCount * 15            -- still gives good results with "full" structure list...
        a.VertScrollBar.Range = nRange

        local ctop=a.Top
        local i
        for i=0,nCount-1 do
            local oStruct = getStructure(i)
            sName = oStruct.name
            local cbxname='cbx'..i
            --print(cbxname .. ' : ' .. sName)
            local cbx=createCheckBox(a)
            _G[cbxname]=cbx
            cbx.Left = 10
            cbx.Top = ctop
            ctop=ctop+20
            cbx.caption = sName
        end
    end

    buildListbox()
end

-- ***
-- source info: google "cheat engine Change description/value of a node in structure dissect"
function AddAddressByRef()
    local bCreateStruct = true
    local bReplaceBracket = '_'
    local bReplaceSpace = false

    local structForm = enumStructureForms()[1]
    if (structForm == nil) then return end

    -- gives base/startaddress of chain_Structs...
    local sBaseAddr = structForm.Column[0].AddressText
    local sBaseAddr2 = sBaseAddr:match("%[(.-)%]")
    if (sBaseAddr2 ~= nil) then sBaseAddr = sBaseAddr2 end
    --print(string.format("A) %X - %s",structForm.Column[0].Address, sBaseAddr))

    local aStructList = {}
    local nCount = getStructureCount()
    local sName = ''

    for i=0,nCount-1 do
        local oStruct = getStructure(i)
        sName = oStruct.name
        if (sName ~= nil) then aStructList[sName] = i end
        --print('{' .. i .. '}: ' .. tostring(sName))
    end

--[[
for k,v in pairs(aStructList) do
    print(k .. ' ~ ' .. v)
end
]]--

    local entry = structForm.tvStructureView.Selected
    local struct = integerToUserData(entry.Parent.Data)
    local structelement = struct.Element[entry.Index]

    local offsetlist={}
    nCount = 0
    while entry.Parent do
        local sStruct = structelement.Name
        -- replacing [] and 'spaces'...
        local sStruct1 = string.gsub(sStruct,'[%[%]]',bReplaceBracket)
        if (sStruct ~= sStruct1) then
            if (bReplaceBracket ~= '') then
                if (bReplaceSpace) then sStruct = string.gsub(sStruct,'%s',bReplaceBracket) end
                sStruct = string.gsub(sStruct,'[%[%]]',bReplaceBracket)
            else
                sStruct = ''
            end
        end
        local bUseOffset = 0
        --print(string.format('[%X] = %s',structelement.Offset, sStruct))
        table.insert(offsetlist,1,{structelement.Offset, sStruct, structelement.Vartype, bUseOffset})
        entry = entry.Parent
        if entry.Parent then
            struct = integerToUserData(entry.Parent.Data)
            structelement = struct.Element[entry.Index]
        end
    nCount = nCount + 1
    end
    -- add mainstruct name...
    table.insert(offsetlist,1,{0,struct.Name,0,0})

    -- create memrecord...
    local al = getAddressList()
    local mr = al.createMemoryRecord()
    local sDescript = offsetlist[#offsetlist][2]
    if (sDescript == '') then sDescript = '_no_Name_Descriptive' end
    mr.Description = sDescript
    mr.Address = sBaseAddr
    mr.Type = offsetlist[#offsetlist][3]
    mr.OffsetCount = #offsetlist-1

    for i=2,#offsetlist do
        local sCurStruct = offsetlist[i-1][2]
        if (bCreateStruct and sCurStruct ~= '') then
            local oStruct = getStructure(aStructList[sCurStruct])
            if (aStructList[sCurStruct] == nil) then
                oStruct = createStructure(sCurStruct)
                oStruct.addToGlobalStructureList()
            end
            local oElem = oStruct.getElementByOffset(offsetlist[i][1])
            if (oElem == nil) then oElem = oStruct.addElement() end
            oElem.Offset = offsetlist[i][1]
            oElem.Name = offsetlist[i][2]
        end
        local sAddr1 = offsetlist[i-1][2]
        local sAddr2 = offsetlist[i][2]
        sAddress =  sAddr1 .. '.' .. sAddr2
        if (sAddr1 == '' or sAddr2 == '') then mr.Offset[#offsetlist-i] = offsetlist[i][1]
        else mr.OffsetText[#offsetlist-i] = sAddress end

        --print(string.format('%X ~ %s =&gt; Type: %d |  bUseOffset: %d',offsetlist[i][1], sAddress, offsetlist[i][3], offsetlist[i][4]))
    end
end

local function OpenLuaEngine()
    form = getLuaEngine()                            -- get Lua Engine form
    form.MenuItem5.doClick()                         -- clear its window (using menu_item)
    getMemoryViewForm().miLuaEngine.doClick()
    form.Panel1.Visible = true
    form.Splitter1.Visible = true
    form.Menu = luaMenu
end

function SwitchLuaGui()
    if (bHideLua == 0) then bHideLua = 1 else bHideLua = 0 end

    form = getLuaEngine()
    form.MenuItem5.doClick()                         -- clearing lua window
    getMemoryViewForm().miLuaEngine.doClick()        -- opening lua window

    if (luaMenu == nil) then luaMenu = form.Menu end

    if (bHideLua == 0) then
       form.Panel1.Visible = true
       form.Splitter1.Visible = true
       form.Menu = luaMenu

       form.Font.Name = 'default'
       form.Font.Size = 10

       --form.Panel2.Visible = false
       --form.Panel3.Visible = false
    else
        form.Panel1.Visible = false
        form.Splitter1.Visible = false
        form.Menu = nil
    end
end

-- END functions for [Design] submnenu...
-- **************************************


-- source info: #aSwedishMagyar @ FRF
-- ~ AC titles...
function getName(base)
    local gameOffsets = SplitStr(structParams, "~")
    local offs1 = tonumber(string.format('%X',gameOffsets[2]),16)
    local offs2 = tonumber(string.format('%X',gameOffsets[3]),16)

    if base == nil then return nil end
    local vfTable = readPointer(base)
    if vfTable == nil then return nil end
    local getNameFunction = readPointer(vfTable+offs1)
    if getNameFunction == nil then return nil end
    --print(string.format('1. %X',getNameFunction))

    local disassembler = createDisassembler()
    disassembler.disassemble(getNameFunction)
    local disTable = disassembler.getLastDisassembleData()
    --for k,v in pairs(disTable) do print(k .. ' ~ ' .. tostring(v)) end
    local addr = disTable.parameters:match("%[(.-)%]")
    if addr == nil then return nil end

    addr = tonumber(addr,16)
    addr = readPointer(addr)
    if addr == nil then return nil end
    local nameAddr = readPointer(addr+offs2)
    local name = readString(nameAddr,100)
    --print(string.format('[%X ~ VFT:%X] - %X ~ %s',base,vfTable,getNameFunction,readString(nameAddr,30,false)))
    return name
end

function enableStructLookup()
    if (sGetnameMark == '') then
    --print(tostring(nNameLookupID))
       nNameLookupID = registerStructureNameLookup(getName)
       --print(nNameLookupID)
       sGetnameMark = ' ✓'
       Getnamemenuitem.Caption = sMenuItem30 .. sGetnameMark
    else
       unregisterStructureNameLookup(nNameLookupID)
       sGetnameMark = ''
       Getnamemenuitem.Caption = sMenuItem30 .. sGetnameMark
    end
end

local function CheckCEinfo()
    local myCEset = getSettings()                     -- or getSettings('')
    local nDebugger1 = myCEset.Value['Use VEH Debugger']
    local nDebugger2 = myCEset.Value['Use Windows Debugger']
    local nDebugger3 = myCEset.Value['Use Kernel Debugger']
    local sDebugger = 'VEH'
    if ( nDebugger2 == '1') then sDebugger = 'Windows' end
    if ( nDebugger3 == '1') then sDebugger = 'Kernel' end

    local nBP1 = myCEset.Value['Hardware breakpoints']
    local nBP2 = myCEset.Value['Software breakpoints']
    local nBP3 = myCEset.Value['Exception breakpoints']
    local sBP = 'Hardware'
    if ( nBP2 == '1') then sBP = 'Software' end
    if ( nBP3 == '1') then sBP = 'Page Exceptions' end

    showMessage('Debugger   : ' .. sDebugger .. "\n\z" .. 'Breakpoints: ' .. sBP)
--[[
    print('Debugger   : ' .. sDebugger .. '\n')
    print('Breakpoints: ' .. sBP .. '\n')

    myCEset = getSettings('VersionCheck')
    print('VersionCheck:')
    print('Check On Launch: \t' .. myCEset.Value['CheckOnLaunch'])
    print('Check Interval: \t' .. myCEset.Value['CheckInterval'])
    ]]
end

function chkDirFile(sPath, bType)
    -- directory can NOT end with a '\'... !
    local sCheck = string.sub(sPath,-1)
    if (sCheck == '\\') then sPath = string.gsub(sPath,'\\$','') end
    --print(sPath)
    local attr = lfs.attributes(sPath)
    local sType = 'directory'
    if (bType == 1) then sType = 'file' end
    if attr then
       -- file/folder exists or get filesize...
       if (bType == 2) then
          if (attr.size &lt; 1000) then
             return '(file seems invalid as being too small... ?!) \n'
          else return '\n' end
       end
       if attr.mode == sType then
          return true
       else
          return false
       end
    end
    return false
end

function getPath(path, sMgs, sSection)
    local path = path
    if ( path == '&lt;game&gt;' ) then
       local bExist = chkDirFile(myPath,0)
       if bExist then path = myPath else path = 'undefined' end
    end
    if ( path == '&lt;table&gt;' ) then
       local sTablename = getTable():match("(.*[/\\])")
       local bExist = chkDirFile(sTablename,0)
       if bExist then path = sTablename else path = 'undefined' end
    end
    local bExist = chkDirFile(path,0)
    if not bExist then
       showMessage('Your \'' .. sMgs .. '\'  is incorrect ! \n' ..
                    '[' .. path .. '] \n\n' ..
                   'Check [' .. sSection .. '...] and correct accordingly...')
       path = 'undefined'
    end
    return path
end

local function DissectCode(sender)
    local path = getPath(pathSaveFiles,'Dissect Code location','Developer tools')
    if ( path == 'undefined' ) then return end

    -- for those rare occassions whereby myGame is not picked up...
    if ( bDissectProc == '0' ) then
       --if (process == nil or process == '') then return end
       --if (myGame == nil or myGame == '') then return end
       if not openProcess(myGame) then
          if not openProcess(process) then
             showMessage('You need to attach a game first... !')
             return
          else
              myGame = process
          end
       end
    else
        -- manually attaching process can give problems for certain games...
        if not openProcess(process) then
           showMessage('You need to attach a game first... !')
           return
        else
           myGame = process
        end
    end

    local sCheck = string.sub(path,-1)
    if (sCheck == '\\') then path = string.gsub(path,'\\$','') end
    path = string.format(path .. '\\' .. myGame:match("(.+)%..+") .. '.disCode')
    --print(path)

    local bExist = chkDirFile(path,1)
    local sFileExist = 'Following Dissect Code file already exists: \n'
    local sFileInvalid = '\n'
    if bExist then
        local bSize = chkDirFile(path,2)
        -- filesize in bytes...
        if not (bSize) then
           sFileInvalid = '(file seems invalid as being too small... ?!) \n'
        end
    end

    local menufn = sender.Caption
    if menufn == sMenuItem26 then
       if bExist then
          sFileInvalid = chkDirFile(path,2)
          if (not ( sFileInvalid == '\n') ) then
             local sText = sFileExist ..
                           '[' .. path .. '] \n' ..
                           sFileInvalid ..
                           '\n\n' ..
                           'Therefore this file will not be loaded...'
             showMessage(sText)
             return
          end
          local sText = sFileExist ..
                        '[' .. path .. '] \n\n\n' ..
                        'Do you want to load it now...? \n' ..
                        '&gt; loading will take about 10~30 secs \n' ..
                        '&gt; wait for it to finish...'
          local nResult = messageDialog(sText, mtInformation, mbYes, mbCancel)
          if not (nResult == 6 ) then return end
       else
           local sText = 'Following Dissect Code file could not be found:' ..
                         '\n' .. '[' .. path .. ']'
           showMessage(sText)
           return
       end

       local bOK = getDissectCode().loadFromFile(path)
       if (bOK) then
          sText = 'Dissect Code file loaded successfully...'
       else
          sText = 'Dissect Code file could not be loaded... ?!'
       end
       showMessage(sText)
    end

    if menufn == sMenuItem27 then
       if ( getDissectCode().getReferencedStrings() == nil ) then
          sText = 'No Dissect Code Analysis currently exits... \n' ..
                  'Either Load a Dissect Code file or Build one... !'
          showMessage(sText)
          return
       end
       if bExist then
          local sText = 'Are your sure you want to overwrite it now...?! \n' ..
                        '&gt; saving info will take about 10~30 secs \n' ..
                        '&gt; wait for it to finish...'
          sFileInvalid = chkDirFile(path,2)
          sText = sFileExist ..
                  '[' .. path .. '] \n' ..
                  sFileInvalid  .. '\n\n' ..
                  sText

          local nResult = messageDialog(sText, mtWarning, mbYes, mbCancel)
          if not (nResult == 6 ) then return end
       else
          sText = 'The Dissect Code file will be save as follows: \n' ..
                  '[' .. path .. '] \n\n\n' ..
                  'Do you want to save it now...? \n' ..
                  '&gt; saving info will take about 10~30 secs \n' ..
                  '&gt; wait for it to finish...'
          local nResult = messageDialog(sText, mtWarning, mbYes, mbCancel)
          if not (nResult == 6 ) then return end
       end

       local bOK = getDissectCode().saveToFile(path)
       -- verify if filesize makes sense...
       sFileInvalid = chkDirFile(path,2)
       if (not ( sFileInvalid == '\n') ) then
          local sText = 'Following Dissect Code file has been created: \n' ..
                        '[' .. path .. '] \n' ..
                        sFileInvalid .. '\n' ..
                        'Therefore you should try to resave and/or rebuild...'
          showMessage(sText)
          return
       end

       if (bOK) then
          sText = 'Dissect Code file saved successfully...'
       else
          sText = 'Dissect Code file could not be saved... ?!'
       end
       showMessage(sText)
    end

    if menufn == sMenuItem28 then
       local sText = 'The Dissect Code routine can run a very long time ! \n' ..
                     'Are you sure you want to start this process now ? \n' ..
                     '(close the analysis window when finished...) ?'
       if bExist then
          sFileInvalid = chkDirFile(path,2)
          sText = sFileExist ..
                  '[' .. path .. '] \n' ..
                  sFileInvalid .. '\n\n' ..
                  sText
       end
       local nResult = messageDialog(sText,mtWarning, mbYes, mbCancel)
       if not (nResult == 6 ) then return end

       -- also possible to call: miReferencedFunctions
       getMemoryViewForm().Dissectcode1.doClick()
    end

    if menufn == sMenuItem29 then
       local sText = 'Are you sure you want to clear the current Dissect Code Analysis ?'
       if bExist then
          sFileInvalid = chkDirFile(path,2)
          sText = sFileExist ..
                  '[' .. path .. '] \n' ..
                  sFileInvalid .. '\n\n' ..
                  sText
       end
       local nResult = messageDialog(sText,mtWarning, mbYes, mbCancel)
       if not (nResult == 6 ) then return end

       getDissectCode().clear()
    end
end



-- section [Design] submnenu (main)...
-- ****************************

-- adding submenus...
-- ******************
local function addMenuItem()
   local mmenu = mForm.Menu
   local mmenu_items = menu_getItems(mmenu)

   -- Design submenu...
   if (bSysMenu == 1) then
      local mi2 = createMenuItem(mmenu)
      mi2.Caption = '[Design]'

      local MemViewmenuitem = createMenuItem(mmenu)
      MemViewmenuitem.Caption = sMenuItem21
      MemViewmenuitem.OnClick = OpenMemViewer
      mi2.add(MemViewmenuitem)

      local DissectStructmenuitem = createMenuItem(mmenu)
      DissectStructmenuitem.Caption = sMenuItem22
      DissectStructmenuitem.OnClick = OpenDissectStruct
      mi2.add(DissectStructmenuitem)

      local LuaEnginemenuitem = createMenuItem(mmenu)
      LuaEnginemenuitem.Caption = sMenuItem23
      LuaEnginemenuitem.OnClick = OpenLuaEngine
      mi2.add(LuaEnginemenuitem)

      local Sepmenuitem = createMenuItem(mmenu)
      Sepmenuitem.Caption = '-'
      mi2.add(Sepmenuitem)

      local CheckDebugmenuitem = createMenuItem(mmenu)
      CheckDebugmenuitem.Caption = sMenuItem24
      CheckDebugmenuitem.OnClick = CheckCEinfo
      mi2.add(CheckDebugmenuitem)

      local Dissect_mi = createMenuItem(mmenu)
      Dissect_mi.Caption = sMenuItem25
      --DissectLoadmenuitem.OnClick = DissectCode
      mi2.add(Dissect_mi)

      local DissectLoadmenuitem = createMenuItem(mmenu)
      DissectLoadmenuitem.Caption = sMenuItem26
      DissectLoadmenuitem.OnClick = DissectCode
      Dissect_mi.add(DissectLoadmenuitem)

      local DissectSavemenuitem = createMenuItem(mmenu)
      DissectSavemenuitem.Caption = sMenuItem27
      DissectSavemenuitem.OnClick = DissectCode
      Dissect_mi.add(DissectSavemenuitem)

      local DissectBuildmenuitem = createMenuItem(mmenu)
      DissectBuildmenuitem.Caption = sMenuItem28
      DissectBuildmenuitem.OnClick = DissectCode
      Dissect_mi.add(DissectBuildmenuitem)

      local DissectClearmenuitem = createMenuItem(mmenu)
      DissectClearmenuitem.Caption = sMenuItem29
      DissectClearmenuitem.OnClick = DissectCode
      Dissect_mi.add(DissectClearmenuitem)

      -- show Anvil option...
      local gameOffsets = SplitStr(structParams, "~")
      local bStructEnabled = string.format('%d',gameOffsets[1])
      if (bStructEnabled == '0') then
         Getnamemenuitem = createMenuItem(mmenu)
         Getnamemenuitem.Caption = sMenuItem30 .. sGetnameMark
         Getnamemenuitem.OnClick = enableStructLookup
         mi2.add(Getnamemenuitem)
      end

      local Sep2menuitem = createMenuItem(mmenu)
      Sep2menuitem.Caption = '-'
      mi2.add(Sep2menuitem)

      SwitchLuamenuitem = createMenuItem(mmenu)
      SwitchLuamenuitem.Caption = sMenuItem31
      SwitchLuamenuitem.OnClick = SwitchLuaGui
      mi2.add(SwitchLuamenuitem)

      mmenu_items.add(mi2)
   end

   -- Tools submenu...
   local mi = createMenuItem(mmenu)
   mi.Caption = '[Tools]'

   compactmenuitem = createMenuItem(mmenu)
   compactmenuitem.Caption = sMenuItem1
   compactmenuitem.OnClick = cycleFullCompact
   mi.add(compactmenuitem)

   if (bWindowMode == 1) then
      WinModemenuitem = createMenuItem(mmenu)
      WinModemenuitem.Caption = sMenuItem2 .. sGetnameMark
      WinModemenuitem.OnClick = cycleWinMode
      mi.add(WinModemenuitem)
   end

   OpenFilemenuitem = createMenuItem(mmenu)
   OpenFilemenuitem.Caption = sMenuItem4
   OpenFilemenuitem.OnClick = OpenFileDialog
   OpenFilemenuitem.Name = 'LaunchGame'
   mi.add(OpenFilemenuitem)

   local DisableCheatsmenuitem = createMenuItem(mmenu)
   DisableCheatsmenuitem.Caption = sMenuItem6
   DisableCheatsmenuitem.OnClick = DisableMainScript
   mi.add(DisableCheatsmenuitem)

   local Sepmenuitem = createMenuItem(mmenu)
   Sepmenuitem.Caption = '-'
   mi.add(Sepmenuitem)

   local ShowTablemenuitem = createMenuItem(mmenu)
   ShowTablemenuitem.Caption = sMenuItem5
   ShowTablemenuitem.OnClick = ShowTableName
   mi.add(ShowTablemenuitem)

   Configmenuitem = createMenuItem(mmenu)
   Configmenuitem.Caption = sMenuItem3 .. sConfigMark
   Configmenuitem.OnClick = cycleConfig
   mi.add(Configmenuitem)

   mmenu_items.add(mi)

   itemMenusalreadyexists = 'yes'
end


if not itemMenusalreadyexists then addMenuItem() end
if (bDefaultCompactGui == 1) then cycleFullCompact() end


-- adding image footer to gui...
-- google: "cheat engine Adding a background picture"
-- **************************************************
local sImgName = 'FearlessRev_Footer.png'

local function attachBackground(wc,tblFile)
   local p = createPicture()
   p.loadFromStream(findTableFile(tblFile).Stream)
   wc.OnPaint = function(sender)
     local c = sender.getCanvas()
     local bitmap = p.getBitmap()
     local width = wc.width
     -- centering image...
     width = (width /2) - (bitmap.Width /2) -- image width
     c.draw(width,0,bitmap)
   end
end


local function addImgFooter(oPanel,tblFile)
   if ImgFooter then return end
   --MPanelImg = createPanel(al)
   local p = createPicture()
   p.loadFromStream(findTableFile(tblFile).Stream)
   local bitmap = p.getBitmap()
   oPanel.width,oPanel.top,oPanel.left = 10,0,10
   -- get panel height based on img_height...
   oPanel.Height = bitmap.Height + 2
   oPanel.Align = alBottom
   oPanel.Caption = 'FearlessRevolution'
   ImgFooter = 'yes'
   -- additional settings...
   oPanel.Anchors = '[akBottom]'
   oPanel.Color = hColor                -- use same color as addresslist
   oPanel.setBevelOuter(0)              -- hide surrounding "border"border
end

-- google "cheat engine edit box has two properties that do not work"
local function addImgButton(oPanel)
   local btn1 = createButton(oPanel)
   btn1.Width = 35
   btn1.Height = 20
   btn1.Top = oPanel.Height - btn1.Height - 5
   btn1.Left = 5
   btn1.Caption = 'Info'
   btn1.onClick = bg_Toggle
   btn1.ShowHint = true
   btn1.Hint = " Click this button to open your browser, which will then show you this game\'s topic @ FRF... "
end

function bg_Toggle(sender)
    os.execute([[start "" ]] ..  sBrowser .. sSearch)
end

if not imgFooteralreadyexists then
   local MPanelImg = createPanel(al)
   addImgFooter(MPanelImg,sImgName)
   attachBackground(MPanelImg,sImgName)
   addImgButton(MPanelImg)

   cycleConfig()

   imgFooteralreadyexists = 'yes'
end

-- show info in Title bar...
-- *************************
function WinTitleTimer()
    local tmer2 = createTimer(nil, false)
    tmer2.OnTimer = UpdateWinTitle
    tmer2.Interval = nChkTimer
    tmer2.Enabled = true
end

local sPID = 0
local bReset = 0
local bDisableRun = 0
function UpdateWinTitle()
    -- scripts to run w/ every time_interval...
    mrScriptToRun.Active = true
    -- ***
    local sGame = myGame
    local myPID = getProcessIDFromProcessName(myGame)
    if (myPID == sPID) then return end
    sPID = getProcessIDFromProcessName(myGame)
    if (sPID == nil) then sPID = 0 end
    --print(string.format('%s -- %s -- %s',myGame, tostring(sPID), process))
    if ( bCorrectProc == '0' or bCorrectProc == '1' or bCorrectProc == '2') then
       if ( openProcess(myGame) ) then
          -- x64 games can give "timely loading issues" here...
          if not pcall(function() getAddress(myGame) end) then sPID = 0; return end
          local startAddr = getAddress(myGame)
          local endAddr = nCheckMemRange
          if (endAddr &lt;= 0 ) then endAddr = getModuleSize(process) end
          endAddr = startAddr + endAddr
          local addrProc = getStaticAddr(sCheckProc,0,"",3,startAddr,endAddr,sProtFlags)
          if (addrProc == nil or addrProc == 0) then sPID = 0 else bReset = 1 end
          --print(tostring(sGame) .. ' + ' .. tostring(process))
       end
    end

    if (sPID == 0 or process == nil) then
       sGame = '&lt;no/incorrect Game process selected&gt;'
       -- in case of crashes, reset variable...
       myGame = al.getMemoryRecordByID(myGameID).Description
       if (bCorrectProc == '9') then myGame = '' end
       OpenFilemenuitem.Enabled = true
       bDisableRun = 0
    end
    --print("**" .. tostring(sPID) .. ' - ' .. tostring(process))
    mForm.Caption="Cheat Engine v" .. getCEVersion() .. "  ~  [" .. sGame .. "]"

    if (tmer2 ~= nil and sPID ~= 0 and bCorrectProc == '0') then
        tmer2.destroy()
        tmer2 = nil
    end

    -- "reset" table for pre-v7 CEs...
    if (bReset == 1) then
       -- using hotkey to disable script will disable scripts AND locked values...
       DisableMainScript(true)
       bReset = 0
       addrD3D = 0
       bDisableRun = 1
       OpenFilemenuitem.Enabled = false

       if (bWindowMode == 1) then CheckWindowMode() end
    end

    if ( bCorrectProc == '2' and myPID ~= sPID) then CheckOnFilename() end
    --print("***" .. tostring(myStartAddr) .. " -*")
end

-- checks processlist for "similar" name...
function CheckOnFilename()
    -- remove extension...
    local sFilename = myGame:match("(.+)%..+")
    --print(myGame .. sFilename)
    if (sFilename == '' or sFilename == nil) then return end
    for pid,name in pairs(getProcessList()) do
        local bHit = string.find(name, sFilename)
        if ( bHit ~= nil ) then
           --print(string.format("%x - %s", pid,name))
           myGame = name
        end
    --print(string.format("%x - %s", pid,name))
    end
end

-- see Settings page for details...
WinTitleTimer()

-- ensures that myGame is updated when [File ~ Open Process]-ing...
function onOpenProcess(processId)
    myGame = getProcessList()[processId]
    --print(string.format('ProcessID: %d &amp; name: %s', processId,getProcessList()[processId] ))
    getTable()
end

-- google "cheat engine REQ: access to CT table name - [Solved] ~ @CEF - Cheat Engine section"
function onTableLoad(before)
   if ( before == false ) then
      getTable()
   end
end


-- dis/enable the "hover" functionality via 'Player Coordinates (writes~updates)' script...
-- is called by the ActivateTimer() function
-- *****************************************
function getVK(nEnum)
  local n = tonumber(getMrByID(nEnum).Description)
  return n
end

function Hover(tmer)
    -- get XY and Z-axis step value... (default = 100.0 ~ 50.0)
    local addrXYstep = getAddress("XYstepVal")
    local XYstep = readFloat(addrXYstep)
    local addrZstep = getAddress("ZstepVal")
    local Zstep = readFloat(addrZstep)

    -- get x,y,z coordinates...
    local addrX = getAddress("Xval")
    local XValue = readFloat(addrX)
    local addrY = getAddress("Yval")
    local YValue = readFloat(addrY)
    local addrZ = getAddress("Zval")
    local ZValue = readFloat(addrZ)

    -- using NUMpad keys to navigate horizontally...
    -- these keys also allow us to pass through "walls"... (noclip)
    -- also google: "cheat engine Virtual-Key Code"
    if isKeyPressed(getVK(14888)) then    -- VK_NUMPAD8
        --print(string.format("%x",addrX))
        --print(XYstep)
        --print(XValue)
        XValue = XValue + XYstep
        writeFloat(addrX,XValue)
    end
    if isKeyPressed(getVK(14891)) then    -- VK_NUMPAD2
        XValue = XValue - XYstep
        writeFloat(addrX,XValue)
    end
    if isKeyPressed(getVK(14890)) then    -- VK_NUMPAD4
        YValue = YValue + XYstep
        writeFloat(addrY,YValue)
    end
    if isKeyPressed(getVK(14889)) then    -- VK_NUMPAD6
        YValue = YValue - XYstep
        writeFloat(addrY,YValue)
    end
    if isKeyPressed(getVK(14887)) then    -- VK_NUMPAD7
        --print(string.format("%x",addrZ))
        ZValue = ZValue + Zstep
        writeFloat(addrZ,ZValue)
    end
    if isKeyPressed(getVK(14886)) then    -- VK_NUMPAD9
        ZValue = ZValue - Zstep
        writeFloat(addrZ,ZValue)
    end
    -- End "hovering around" activity...
    if isKeyPressed(getVK(14884)) then    -- VK_F10
        --print(string.format("%x",addrZ))
        -- stay/drop at current location coordinates...
        DisableEntry()
        tmer.destroy()
    end
    if isKeyPressed(getVK(14892)) then    -- VK_F12
        -- restore start location coordinates...
        -- if not returning to originals, set dropheight higher...
        -- when using FreeCam, always F10... (F12 will crash)
        local flagFreeRoam = readBytes(getAddress("bFreeRoam"),1)
        if (flagFreeRoam == 1) then
            RestoreOrigCoord(addrX,addrY,addrZ)
            -- allow game some time to execute before quiting script
            -- allows to return through walls... in most cases
            sleep(500)
        end
        DisableEntry()
        tmer.destroy()
    end
end

-- restore start location coordinates [F12]...
function RestoreOrigCoord(addrX,addrY,addrZ)
    local Zplus = readFloat(getAddress("ZstepdropHeight"))
    local addrOrig = getAddress("OrigCoord")
    local structOffset = readInteger(getAddress("pStructCrdOffset"))
    local addrCoord = readPointer(getAddress("pStructCrdBase")) + structOffset
        --print(string.format("%x",addrOrig))
        --print(string.format("%x",addrCoord))
        --print(structOffset)
    local Zvalue = readFloat(addrOrig+0x8)+Zplus
    -- update [pStructCrdBase]+xx values...
    writeFloat(addrCoord,readFloat(addrOrig))
    writeFloat(addrCoord+0x4,readFloat(addrOrig+0x4))
    writeFloat(addrCoord+0x8,Zvalue)
    -- update Xval,Yval,Zval values...
    writeFloat(addrX,readFloat(addrOrig))
    writeFloat(addrY,readFloat(addrOrig+0x4))
    writeFloat(addrZ,Zvalue)
end

function ActivateTimer()
    local tmer = createTimer(nil, false)
    tmer.OnTimer = Hover
    tmer.Interval = 100
    tmer.Enabled = true
end

function Help()
    local sMessage = [[
 Use following function keys:
 F10 = End at current location
 F12 = End &amp; Restore original location

 Use NumPad keys [2-8] &amp; [4-6] to pass through walls (no clip)
 Use NumPad keys [7-9] to ascend &amp; descend respectively
 (normal move keys can not be used)

 FreeRoam preferably not used while 'hidden'...

 (see also [Readme] file)  ]]

    showMessage(sMessage)
end

function DisableEntry()
    local addrID = getAddress("AddrListID")
    local ListID = readInteger(addrID)
    local ScriptID = al.getMemoryRecordByID(ListID)
    ScriptID.Active = false
end

local function GetMD5(nShowMsg)
    if ( process ~= nil ) then
        local intVal = 0
        -- calculate MD5 of PE header...
        local FileMD5 = md5memory(process,4096)
        local strMsg1,strMsg2
        strMsg1 = "You have attached [" .. process .. "]..."
        strMsg2 = "with following MD5 PE Header value: {" .. FileMD5 .. "}"
        if nShowMsg == 1 then
            showMessage(strMsg1 .. "\n\z" .. strMsg2)
        end
        --print('[',process,']')
        --print(FileMD5)
        --print(intVal)
        return intVal
    end
end

-- collects [address] found in opcode...
-- see also 'getName' as alternative...!
function getStaticAddr(sAOB,nOffset,sBaseAddr,nEval,nStartMem,nEndMem,sFlags)
  nEval = nEval or 0
  nStartMem = nStartMem or 0
  nEndMem = nEndMem or 0xffffffffffffffff
  sFlags = sFlags or "+X-C-W"
  --local scan1 = AOBScan(sAOB,"+X-C-W")
  --print("* " .. scan1[0])
  local scan = createMemScan(false)
  scan.setOnlyOneResult(true)
  scan.firstScan(soExactValue,vtByteArray,rtRounded,sAOB,nil,nStartMem,nEndMem,sFlags,
                                      fsmNotAligned,nil,true,false,false,false)
  scan.waitTillDone()
  scan.getOnlyResult()

  local bArch = targetIs64Bit()
  local addrStruct = scan.Result
  --print(string.format('+ %X +',scan.Result))
  if (nEval == 0 or nEval == 2) then
     local offsVal = scan.Result - nOffset
     --print(string.format('- %X -',offsVal))
     offsVal = string.format('%X',readInteger(offsVal,true))
     --print(offsVal)
     addrStruct = tonumber(offsVal,16)
     if ( bArch ) then addrStruct = scan.Result + tonumber(offsVal,16) - nOffset + 4 end
     --print(string.format('%X',addrStruct))
     if (nEval == 2) then
        addrStruct = readPointer(addrStruct)
     end
  end

  scan.destroy()
  if (nEval == 3) then return addrStruct end

  local addrFound = getAddress(sBaseAddr)
  if ( bArch ) then writeQword(addrFound,addrStruct) else writeInteger(addrFound,addrStruct) end
  --print(string.format('* %X *',addrStruct))
end

-- see Settings ~ Maintenance scripts...
function Form_Actions(sender)
    runFormScripts(sender)
end
-- run script at least once...
local mr = al.getMemoryRecordByID(26071)
mr.Active = true

</LuaScript>
</CheatTable>
