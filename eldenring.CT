<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="42">
  <CheatEntries>
    <CheatEntry>
      <ID>26</ID>
      <Description>"Infinite Health"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : eldenring.exe (paused)
  Version: 
  Date   : 2022-02-25

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(healthh,start_protected_game.exe,41 8B 90 38 01 00 00) // should be unique
alloc(newmem,$1000,healthh)

label(code)
label(return)
label(playastruct)
registersymbol(playastruct)
newmem:
mov [playastruct], r8
mov edx,[r8+00000138+4]
mov [r8+00000138], edx
code:
  mov edx,[r8+00000138]
  jmp return

playastruct:
dd 0
dd 0
healthh:
  jmp newmem
  nop 2
return:
registersymbol(healthh)

[DISABLE]

healthh:
  db 41 8B 90 38 01 00 00

unregistersymbol(healthh)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+637D24

eldenring.exe+637CFB: 48 89 45 AF           - mov [rbp-51],rax
eldenring.exe+637CFF: 48 8B 01              - mov rax,[rcx]
eldenring.exe+637D02: 4C 8B F1              - mov r14,rcx
eldenring.exe+637D05: FF 90 68 01 00 00     - call qword ptr [rax+00000168]
eldenring.exe+637D0B: 48 8B F0              - mov rsi,rax
eldenring.exe+637D0E: 48 85 C0              - test rax,rax
eldenring.exe+637D11: 0F 84 0A 05 00 00     - je eldenring.exe+638221
eldenring.exe+637D17: 8B 48 14              - mov ecx,[rax+14]
eldenring.exe+637D1A: 49 8B 96 90 01 00 00  - mov rdx,[r14+00000190]
eldenring.exe+637D21: 4C 8B 02              - mov r8,[rdx]
// ---------- INJECTING HERE ----------
eldenring.exe+637D24: 41 8B 90 38 01 00 00  - mov edx,[r8+00000138]
// ---------- DONE INJECTING  ----------
eldenring.exe+637D2B: 3B D1                 - cmp edx,ecx
eldenring.exe+637D2D: 0F 4C CA              - cmovl ecx,edx
eldenring.exe+637D30: 89 48 10              - mov [rax+10],ecx
eldenring.exe+637D33: 49 8B 86 90 01 00 00  - mov rax,[r14+00000190]
eldenring.exe+637D3A: 48 8B 08              - mov rcx,[rax]
eldenring.exe+637D3D: 8B 46 20              - mov eax,[rsi+20]
eldenring.exe+637D40: 8B 91 44 01 00 00     - mov edx,[rcx+00000144]
eldenring.exe+637D46: 3B D0                 - cmp edx,eax
eldenring.exe+637D48: 0F 4C C2              - cmovl eax,edx
eldenring.exe+637D4B: 89 46 1C              - mov [rsi+1C],eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"zachillios"</Description>
      <Options moHideChildren="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Quick Runes"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : zachw

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,start_protected_game.exe,89 51 6C 41 2B D0) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov [rcx+6C],#9999999999
  sub edx,r8d
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 51 6C 41 2B D0

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+2582AA

eldenring.exe+258280: 44 89 4C 24 08        - mov [rsp+08],r9d
eldenring.exe+258285: 45 85 C9              - test r9d,r9d
eldenring.exe+258288: 79 07                 - jns eldenring.exe+258291
eldenring.exe+25828A: 48 8D 44 24 10        - lea rax,[rsp+10]
eldenring.exe+25828F: EB 17                 - jmp eldenring.exe+2582A8
eldenring.exe+258291: 41 81 F9 FF C9 9A 3B  - cmp r9d,3B9AC9FF
eldenring.exe+258298: 48 8D 15 F1 E0 6C 02  - lea rdx,[eldenring.exe+2926390]
eldenring.exe+25829F: 48 8D 44 24 08        - lea rax,[rsp+08]
eldenring.exe+2582A4: 48 0F 4F C2           - cmovg rax,rdx
eldenring.exe+2582A8: 8B 10                 - mov edx,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+2582AA: 89 51 6C              - mov [rcx+6C],edx
// ---------- DONE INJECTING  ----------
eldenring.exe+2582AD: 41 2B D0              - sub edx,r8d
eldenring.exe+2582B0: 85 D2                 - test edx,edx
eldenring.exe+2582B2: 7E 44                 - jle eldenring.exe+2582F8
eldenring.exe+2582B4: 44 8B 49 70           - mov r9d,[rcx+70]
eldenring.exe+2582B8: 44 03 CA              - add r9d,edx
eldenring.exe+2582BB: 44 89 54 24 10        - mov [rsp+10],r10d
eldenring.exe+2582C0: 44 89 4C 24 08        - mov [rsp+08],r9d
eldenring.exe+2582C5: 79 13                 - jns eldenring.exe+2582DA
eldenring.exe+2582C7: 48 8D 44 24 10        - lea rax,[rsp+10]
eldenring.exe+2582CC: 48 63 00              - movsxd  rax,dword ptr [rax]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Infinite Magic"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : zachw

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(magic,eldenring.exe,89 87 44 01 00 00 48) // should be unique
alloc(newmem,$1000,magic)

label(code)
label(return)

newmem:

code:
  mov [rdi+00000144],#999
  jmp return

magic:
  jmp newmem
  nop
return:
registersymbol(magic)

[DISABLE]

magic:
  db 89 87 44 01 00 00

unregistersymbol(magic)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+42F4FF

eldenring.exe+42F4D8: C7 44 24 40 00 00 00 00  - mov [rsp+40],00000000
eldenring.exe+42F4E0: 48 8D 8F 48 01 00 00     - lea rcx,[rdi+00000148]
eldenring.exe+42F4E7: 85 F6                    - test esi,esi
eldenring.exe+42F4E9: 79 07                    - jns eldenring.exe+42F4F2
eldenring.exe+42F4EB: 48 8D 44 24 40           - lea rax,[rsp+40]
eldenring.exe+42F4F0: EB 0B                    - jmp eldenring.exe+42F4FD
eldenring.exe+42F4F2: 3B 31                    - cmp esi,[rcx]
eldenring.exe+42F4F4: 48 8D 44 24 48           - lea rax,[rsp+48]
eldenring.exe+42F4F9: 48 0F 4F C1              - cmovg rax,rcx
eldenring.exe+42F4FD: 8B 00                    - mov eax,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+42F4FF: 89 87 44 01 00 00        - mov [rdi+00000144],eax
// ---------- DONE INJECTING  ----------
eldenring.exe+42F505: 48 8B 5C 24 50           - mov rbx,[rsp+50]
eldenring.exe+42F50A: 48 8B 74 24 58           - mov rsi,[rsp+58]
eldenring.exe+42F50F: 48 83 C4 30              - add rsp,30
eldenring.exe+42F513: 5F                       - pop rdi
eldenring.exe+42F514: C3                       - ret 
eldenring.exe+42F515: 66 0F 1F 44 00 00        - nop word ptr [rax+rax+00]
eldenring.exe+42F51B: E9 40 F6 A5 01           - jmp eldenring.exe+1E8EB60
eldenring.exe+42F520: 80 A1 96 01 00 00 BF     - and byte ptr [rcx+00000196],-41
eldenring.exe+42F527: 80 E2 01                 - and dl,01
eldenring.exe+42F52A: C0 E2 06                 - shl dl,06
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Health Pointer"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : zachw

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Health_Pointer,eldenring.exe,8B 81 38 01 00 00 89 45) // should be unique
alloc(newmem,$1000,Health_Pointer)
globalalloc(HealthPointer,4)
label(code)
label(return)

newmem:
push rax
lea rax,[rcx+00000138]
mov [HealthPointer],rax
pop rax
code:
  mov eax,[rcx+00000138]
  jmp return

Health_Pointer:
  jmp newmem
  nop
return:
registersymbol(Health_Pointer)

[DISABLE]

Health_Pointer:
  db 8B 81 38 01 00 00

unregistersymbol(Health_Pointer)
dealloc(newmem)
dealloc(HealthPointer)
{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+66A994

eldenring.exe+66A96A: E8 91 F7 E3 FF        - call eldenring.exe+4AA100
eldenring.exe+66A96F: 83 F8 02              - cmp eax,02
eldenring.exe+66A972: B8 00 00 00 00        - mov eax,00000000
eldenring.exe+66A977: 0F 44 D8              - cmove ebx,eax
eldenring.exe+66A97A: 89 5C 24 5C           - mov [rsp+5C],ebx
eldenring.exe+66A97E: 48 8B 54 24 50        - mov rdx,[rsp+50]
eldenring.exe+66A983: EB 05                 - jmp eldenring.exe+66A98A
eldenring.exe+66A985: 44 8B 6C 24 58        - mov r13d,[rsp+58]
eldenring.exe+66A98A: 49 8B 86 90 01 00 00  - mov rax,[r14+00000190]
eldenring.exe+66A991: 48 8B 08              - mov rcx,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+66A994: 8B 81 38 01 00 00     - mov eax,[rcx+00000138]
// ---------- DONE INJECTING  ----------
eldenring.exe+66A99A: 89 45 F4              - mov [rbp-0C],eax
eldenring.exe+66A99D: 48 85 D2              - test rdx,rdx
eldenring.exe+66A9A0: 74 07                 - je eldenring.exe+66A9A9
eldenring.exe+66A9A2: 0F BF B2 82 00 00 00  - movsx esi,word ptr [rdx+00000082]
eldenring.exe+66A9A9: 0F BF DE              - movsx ebx,si
eldenring.exe+66A9AC: 89 5C 24 60           - mov [rsp+60],ebx
eldenring.exe+66A9B0: 33 F6                 - xor esi,esi
eldenring.exe+66A9B2: 48 85 D2              - test rdx,rdx
eldenring.exe+66A9B5: 74 67                 - je eldenring.exe+66AA1E
eldenring.exe+66A9B7: 0F B6 4A 3E           - movzx ecx,byte ptr [rdx+3E]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>25</ID>
              <Description>"No description"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>HealthPointer</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"makotech222"</Description>
      <Options moHideChildren="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Inf Item Usage"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : Steven

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,89 51 08 C3 48 8B 01) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  add edx, #1
  mov [rcx+08],edx
  ret 
  mov rax,[rcx]
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 51 08 C3 48 8B 01

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+6EC4E0

eldenring.exe+6EC4C7: B8 01 00 00 00  - mov eax,00000001
eldenring.exe+6EC4CC: EB 02           - jmp eldenring.exe+6EC4D0
eldenring.exe+6EC4CE: 33 C0           - xor eax,eax
eldenring.exe+6EC4D0: 48 8B 5C 24 68  - mov rbx,[rsp+68]
eldenring.exe+6EC4D5: 48 83 C4 50     - add rsp,50
eldenring.exe+6EC4D9: 5F              - pop rdi
eldenring.exe+6EC4DA: C3              - ret 
eldenring.exe+6EC4DB: CC              - int 3 
eldenring.exe+6EC4DC: 78 00           - js eldenring.exe+6EC4DE
eldenring.exe+6EC4DE: CD 78           - int 78
// ---------- INJECTING HERE ----------
eldenring.exe+6EC4E0: 89 51 08        - mov [rcx+08],edx
// ---------- DONE INJECTING  ----------
eldenring.exe+6EC4E3: C3              - ret 
eldenring.exe+6EC4E4: 48 8B 01        - mov rax,[rcx]
eldenring.exe+6EC4E7: 80 78 18 01     - cmp byte ptr [rax+18],01
eldenring.exe+6EC4EB: E9 55 44 92 04  - jmp eldenring.exe+5010945
eldenring.exe+6EC4F0: 39 51 08        - cmp [rcx+08],edx
eldenring.exe+6EC4F3: 89 51 08        - mov [rcx+08],edx
eldenring.exe+6EC4F6: 73 04           - jae eldenring.exe+6EC4FC
eldenring.exe+6EC4F8: 44 89 41 0C     - mov [rcx+0C],r8d
eldenring.exe+6EC4FC: C3              - ret 
eldenring.exe+6EC4FD: 90              - nop 
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"mochongli"</Description>
      <Options moHideChildren="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>57</ID>
          <Description>"Open game modifications // Create threads"</Description>
          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
globalalloc(zhandou1,256)
globalalloc(zhandou2,256)
globalalloc(zhandou3,256)

globalalloc(luenshuxing1,256)
globalalloc(luenshuxing2,256)
globalalloc(luenshuxing3,256)

globalalloc(youshougongjili1,256)
globalalloc(youshougongjili2,256)
globalalloc(youshougongjili3,256)

globalalloc(wuligongjilisyj1,256)
globalalloc(wuligongjilisyj2,256)
globalalloc(wuligongjilisyj3,256)

globalalloc(zuoshougongjili1,256)
globalalloc(zuoshougongjili2,256)
globalalloc(zuoshougongjili3,256)

globalalloc(wuligongjidpgb1,256)
globalalloc(wuligongjidpgb2,256)
globalalloc(wuligongjidpgb3,256)

globalalloc(wupianxiugai1,256)
globalalloc(wupianxiugai2,256)
globalalloc(wupianxiugai3,256)

globalalloc(fuzhongxiugai1,256)
globalalloc(fuzhongxiugai2,256)
globalalloc(fuzhongxiugai3,256)

globalalloc(newmem02231249,$1000)

{
CreateThread(newmem02231249)

label(ret1)
//label(ret2)

newmem02231249:
push rax
push rbx
//push rax
//mov rax,[zhandou1]
//cmp eax,1
//pop rax
cmp [zhandou1],1 //战斗
//jne ret2
jne @F
mov rax,[zhandou2]
cmp rax,0
je @F
mov rax,[zhandou2]
mov rbx,[zhandou3]
mov [rax],rbx
mov rbx,[zhandou3+8]
mov [rax+8],rbx
@@:

cmp [luenshuxing1],1 //卢恩/属性
jne @F
mov rax,[luenshuxing2]
cmp rax,0
je @F
mov rax,[luenshuxing2]
mov rbx,[luenshuxing3]
mov [rax],rbx
@@:

cmp [youshougongjili1],1 //右手武器物理攻击力 (剑/斧/戟/弓/矛)
jne @F
mov rax,[youshougongjili2]
cmp rax,0
je @F
mov rax,[youshougongjili2]
mov rbx,[youshougongjili3]
mov [rax],rbx
@@:

cmp [wuligongjilisyj1],1 //物理攻击力(圣印记)
jne @F
mov rax,[wuligongjilisyj2]
cmp rax,0
je @F
mov rax,[wuligongjilisyj2]
mov rbx,[wuligongjilisyj3]
mov [rax],rbx
@@:

cmp [zuoshougongjili1],1 //左手武器物理攻击力 (手杖)
jne @F
mov rax,[zuoshougongjili2]
cmp rax,0
je @F
mov rax,[zuoshougongjili2]
mov rbx,[zuoshougongjili3]
mov [rax],rbx
@@:

cmp [wuligongjidpgb1],1 //物理攻击力(盾牌 棍棒)
jne @F
mov rax,[wuligongjidpgb2]
cmp rax,0
je @F
mov rax,[wuligongjidpgb2]
mov rbx,[wuligongjidpgb3]
mov [rax],rbx
@@:

cmp [wupianxiugai1],1 //物品
jne @F
mov rax,[wupianxiugai2]
cmp rax,0
je @F
mov rax,[wupianxiugai2]
mov rbx,[wupianxiugai3]
mov [rax],rbx
@@:

cmp [fuzhongxiugai1],1 //负重
jne @F
mov rax,[fuzhongxiugai2]
cmp rax,0
je @F
mov rax,[fuzhongxiugai2]
mov rbx,[fuzhongxiugai3]
mov [rax],rbx
//mov rbx,[fuzhongxiugai3+8]
//mov [rax+8],rbx
@@:

pop rbx
pop rax
ret1:
mov ecx,#5000
call KERNEL32.Sleep
//call sleep
jmp newmem02231249

//ret2:
//ret
}
[DISABLE]
{
newmem02231249:
ret
}
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>112</Key>
                <Key>81</Key>
              </Keys>
              <Description>开启游戏修改</Description>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"//Turn on combat modifications"</Description>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version:
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(INJECT02221334,eldenring.exe,24 48 8B 08 66 0F 6E 89 38 01 00 00) // should be unique
//alloc(newmem,$1000,INJECT02221334)
alloc(newmem,$1000)

label(code)
label(return)
globalalloc(ram1,256)
globalalloc(ram01,256)
newmem:
push r15
push rdi
cmp [zhandou1],1
je @F
mov r15,INJECT02221334+4
mov [zhandou2],r15
mov rdi,[r15]
mov [zhandou3],rdi

mov rdi,[r15+8]
mov [zhandou3+8],rdi

mov [zhandou1],1
@@:
pop rdi
pop r15

mov [ram1],rcx
push r15
cmp [ram01],1 //生命
jne @f
mov [rcx+138],#524287 //当前生命
mov [rcx+140],#524287 //生命上限
@@:
cmp [ram01+C],1 //生命自动回复
jne @F
mov r15d,[rcx+00000140]
mov [rcx+138],r15d
@@:
cmp [ram01+4],1 //魔力
jne @f
mov r15d,[rcx+14C]
mov [rcx+144],r15d
@@:
cmp [ram01+8],1 //体力
jne @f
mov r15d,[rcx+158]
mov [rcx+150],r15d
code:
pop r15
  movd xmm1,[rcx+00000138]
movd xmm0,[rcx+0000013C]
jmp INJECT02221334+14
  jmp return

INJECT02221334+04:
  jmp newmem
  //nop 3
nop 2
return:
registersymbol(INJECT02221334)

[DISABLE]

INJECT02221334+04:
  db 66 0F 6E 89 38 01 00 00 66 0F 6E 81 3C 01 00 00

unregistersymbol(INJECT02221334)
dealloc(newmem)

zhandou1:
dd 0

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+588BD2

eldenring.exe+588BA6: E8 45 E5 E5 FF           - call eldenring.exe+3E70F0
eldenring.exe+588BAB: 84 C0                    - test al,al
eldenring.exe+588BAD: 0F 84 D2 00 00 00        - je eldenring.exe+588C85
eldenring.exe+588BB3: 85 F6                    - test esi,esi
eldenring.exe+588BB5: 0F 85 CA 00 00 00        - jne eldenring.exe+588C85
eldenring.exe+588BBB: 8D 56 0E                 - lea edx,[rsi+0E]
eldenring.exe+588BBE: E9 9D 00 00 00           - jmp eldenring.exe+588C60
eldenring.exe+588BC3: 48 8B 80 90 01 00 00     - mov rax,[rax+00000190]
eldenring.exe+588BCA: F3 0F 10 53 24           - movss xmm2,[rbx+24]
eldenring.exe+588BCF: 48 8B 08                 - mov rcx,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+588BD2: 66 0F 6E 89 38 01 00 00  - movd xmm1,[rcx+00000138]
// ---------- DONE INJECTING  ----------
eldenring.exe+588BDA: 66 0F 6E 81 3C 01 00 00  - movd xmm0,[rcx+0000013C]
eldenring.exe+588BE2: 0F 5B C9                 - cvtdq2ps xmm1,xmm1
eldenring.exe+588BE5: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
eldenring.exe+588BE8: F3 0F 5E C8              - divss xmm1,xmm0
eldenring.exe+588BEC: 0F 2F D1                 - comiss xmm2,xmm1
eldenring.exe+588BEF: 0F 82 90 00 00 00        - jb eldenring.exe+588C85
eldenring.exe+588BF5: 85 F6                    - test esi,esi
eldenring.exe+588BF7: 74 62                    - je eldenring.exe+588C5B
eldenring.exe+588BF9: 0F 57 C0                 - xorps xmm0,xmm0
eldenring.exe+588BFC: 0F 2F C2                 - comiss xmm0,xmm2
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>59</ID>
              <Description>"Unlimited blood cap/blood"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
ram01:
dd 1

 
 
[DISABLE]
ram01:
dd 0
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>112</Key>
                    <Key>87</Key>
                  </Keys>
                  <Description>无限血量上限/血量增强</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>23</ID>
              <Description>"Current blood level automatically returns"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
ram01+C:
dd 1

 
 
[DISABLE]
ram01+C:
dd 0
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>112</Key>
                    <Key>69</Key>
                  </Keys>
                  <Description>当前血量自动回复</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>32</ID>
              <Description>"Infinite Focus/Magic"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
ram01+4:
dd 1

 
 
[DISABLE]
ram01+4:
dd 0
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>112</Key>
                    <Key>82</Key>
                  </Keys>
                  <Description>无限专注力/魔力</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>33</ID>
              <Description>"Unlimited energy/stamina"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
ram01+8:
dd 1

 
 
[DISABLE]
ram01+8:
dd 0
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>112</Key>
                    <Key>84</Key>
                  </Keys>
                  <Description>无限精力/体力</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>60</ID>
              <Description>"当前血量(生命) =524287 //(4)414"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>ram1</Address>
              <Offsets>
                <Offset>138</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>112</Key>
                    <Key>89</Key>
                  </Keys>
                  <Value>524287</Value>
                  <Description>血量回复</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>4</ID>
                  <Description>"//"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>808080</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ram1</Address>
                  <Offsets>
                    <Offset>13C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>11</ID>
                  <Description>"//血量(生命)上限 =524287"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ram1</Address>
                  <Offsets>
                    <Offset>140</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>9</ID>
              <Description>"专注力(魔力) =999999 //(4)17"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>ram1</Address>
              <Offsets>
                <Offset>144</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>112</Key>
                    <Key>85</Key>
                  </Keys>
                  <Value>999999</Value>
                  <Description>专注力/魔力回复</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>10</ID>
                  <Description>"//"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>808080</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ram1</Address>
                  <Offsets>
                    <Offset>148</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12</ID>
                  <Description>"//专注力(魔力)上限 =999999"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ram1</Address>
                  <Offsets>
                    <Offset>14C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>123</ID>
                  <Description>"自动汇编脚本"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02270951,eldenring.exe,8B 99 44 01 00 00 48) // should be unique
alloc(newmem,$1000,INJECT02270951)

label(code)
label(return)

newmem:

code:
  mov ebx,[rcx+00000144]
  jmp return

INJECT02270951:
  jmp newmem
  nop
return:
registersymbol(INJECT02270951)

[DISABLE]

INJECT02270951:
  db 8B 99 44 01 00 00

unregistersymbol(INJECT02270951)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+73ED3D

eldenring.exe+73ED0F: 48 8B 74 24 50        - mov rsi,[rsp+50]
eldenring.exe+73ED14: 48 8B 7C 24 48        - mov rdi,[rsp+48]
eldenring.exe+73ED19: 0F 1F 80 00 00 00 00  - nop dword ptr [rax+00000000]
eldenring.exe+73ED20: 45 8B C7              - mov r8d,r15d
eldenring.exe+73ED23: 48 8D 95 30 02 00 00  - lea rdx,[rbp+00000230]
eldenring.exe+73ED2A: 48 8B CF              - mov rcx,rdi
eldenring.exe+73ED2D: E8 1E EE 04 00        - call eldenring.exe+78DB50
eldenring.exe+73ED32: 90                    - nop 
eldenring.exe+73ED33: 49 8B 85 90 01 00 00  - mov rax,[r13+00000190]
eldenring.exe+73ED3A: 48 8B 08              - mov rcx,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+73ED3D: 8B 99 44 01 00 00     - mov ebx,[rcx+00000144]
// ---------- DONE INJECTING  ----------
eldenring.exe+73ED43: 48 8D 8D 30 02 00 00  - lea rcx,[rbp+00000230]
eldenring.exe+73ED4A: E8 A1 BE FF FF        - call eldenring.exe+73ABF0
eldenring.exe+73ED4F: 44 0F B6 C0           - movzx r8d,al
eldenring.exe+73ED53: 49 8D 8E BF FE FF FF  - lea rcx,[r14-00000141]
eldenring.exe+73ED5A: 48 89 74 24 28        - mov [rsp+28],rsi
eldenring.exe+73ED5F: 89 5C 24 20           - mov [rsp+20],ebx
eldenring.exe+73ED63: 4C 8D 8D 30 02 00 00  - lea r9,[rbp+00000230]
eldenring.exe+73ED6A: 33 D2                 - xor edx,edx
eldenring.exe+73ED6C: E8 9F 0B 00 00        - call eldenring.exe+73F910
eldenring.exe+73ED71: 48 8D 95 30 02 00 00  - lea rdx,[rbp+00000230]
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>124</ID>
                  <Description>"自动汇编脚本"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,39 81 44 01 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  cmp [rcx+00000144],eax
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 39 81 44 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+73E722

eldenring.exe+73E700: E8 CB 69 0E 00           - call eldenring.exe+8250D0
eldenring.exe+73E705: 8B F8                    - mov edi,eax
eldenring.exe+73E707: 48 8D 4D 10              - lea rcx,[rbp+10]
eldenring.exe+73E70B: E8 D0 A2 58 00           - call eldenring.exe+CC89E0
eldenring.exe+73E710: 49 8B 84 24 90 01 00 00  - mov rax,[r12+00000190]
eldenring.exe+73E718: 48 8B 08                 - mov rcx,[rax]
eldenring.exe+73E71B: 8B C7                    - mov eax,edi
eldenring.exe+73E71D: 99                       - cdq 
eldenring.exe+73E71E: 2B C2                    - sub eax,edx
eldenring.exe+73E720: D1 F8                    - sar eax,1
// ---------- INJECTING HERE ----------
eldenring.exe+73E722: 39 81 44 01 00 00        - cmp [rcx+00000144],eax
// ---------- DONE INJECTING  ----------
eldenring.exe+73E728: 41 0F 9C C5              - setl r13l
eldenring.exe+73E72C: C6 86 10 0F 00 00 01     - mov byte ptr [rsi+00000F10],01
eldenring.exe+73E733: 48 8B 4D 88              - mov rcx,[rbp-78]
eldenring.exe+73E737: 48 85 C9                 - test rcx,rcx
eldenring.exe+73E73A: 0F 95 C0                 - setne al
eldenring.exe+73E73D: 88 86 18 0F 00 00        - mov [rsi+00000F18],al
eldenring.exe+73E743: 48 85 C9                 - test rcx,rcx
eldenring.exe+73E746: 74 06                    - je eldenring.exe+73E74E
eldenring.exe+73E748: 0F B7 41 1A              - movzx eax,word ptr [rcx+1A]
eldenring.exe+73E74C: EB 03                    - jmp eldenring.exe+73E751
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>125</ID>
                  <Description>"自动汇编脚本"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,8B 81 44 01 00 00 48 8D 8E F0) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov eax,[rcx+00000144]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 81 44 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+73E38A

eldenring.exe+73E368: 90                       - nop 
eldenring.exe+73E369: 80 7C 24 30 00           - cmp byte ptr [rsp+30],00
eldenring.exe+73E36E: 75 0C                    - jne eldenring.exe+73E37C
eldenring.exe+73E370: 41 83 7D 78 02           - cmp dword ptr [r13+78],02
eldenring.exe+73E375: 74 05                    - je eldenring.exe+73E37C
eldenring.exe+73E377: 45 33 C0                 - xor r8d,r8d
eldenring.exe+73E37A: EB 03                    - jmp eldenring.exe+73E37F
eldenring.exe+73E37C: 41 B0 01                 - mov r8l,01
eldenring.exe+73E37F: 49 8B 84 24 90 01 00 00  - mov rax,[r12+00000190]
eldenring.exe+73E387: 48 8B 08                 - mov rcx,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+73E38A: 8B 81 44 01 00 00        - mov eax,[rcx+00000144]
// ---------- DONE INJECTING  ----------
eldenring.exe+73E390: 48 8D 8E F0 05 00 00     - lea rcx,[rsi+000005F0]
eldenring.exe+73E397: 4C 89 7C 24 28           - mov [rsp+28],r15
eldenring.exe+73E39C: 89 44 24 20              - mov [rsp+20],eax
eldenring.exe+73E3A0: 4C 8D 8D B0 01 00 00     - lea r9,[rbp+000001B0]
eldenring.exe+73E3A7: 0F B6 96 05 41 00 00     - movzx edx,byte ptr [rsi+00004105]
eldenring.exe+73E3AE: E8 5D 15 00 00           - call eldenring.exe+73F910
eldenring.exe+73E3B3: 48 8D 95 B0 01 00 00     - lea rdx,[rbp+000001B0]
eldenring.exe+73E3BA: 48 8B CF                 - mov rcx,rdi
eldenring.exe+73E3BD: E8 7E 05 05 00           - call eldenring.exe+78E940
eldenring.exe+73E3C2: 84 C0                    - test al,al
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>126</ID>
                  <Description>"自动汇编脚本"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,8B 81 44 01 00 00 48 8D 8E A0) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov eax,[rcx+00000144]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 81 44 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+73E1EB

eldenring.exe+73E1CC: 74 06                    - je eldenring.exe+73E1D4
eldenring.exe+73E1CE: 41 83 FE 01              - cmp r14d,01
eldenring.exe+73E1D2: 74 09                    - je eldenring.exe+73E1DD
eldenring.exe+73E1D4: 84 DB                    - test bl,bl
eldenring.exe+73E1D6: 75 05                    - jne eldenring.exe+73E1DD
eldenring.exe+73E1D8: 45 33 C0                 - xor r8d,r8d
eldenring.exe+73E1DB: EB 03                    - jmp eldenring.exe+73E1E0
eldenring.exe+73E1DD: 41 B0 01                 - mov r8l,01
eldenring.exe+73E1E0: 49 8B 84 24 90 01 00 00  - mov rax,[r12+00000190]
eldenring.exe+73E1E8: 48 8B 08                 - mov rcx,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+73E1EB: 8B 81 44 01 00 00        - mov eax,[rcx+00000144]
// ---------- DONE INJECTING  ----------
eldenring.exe+73E1F1: 48 8D 8E A0 04 00 00     - lea rcx,[rsi+000004A0]
eldenring.exe+73E1F8: 4C 89 7C 24 28           - mov [rsp+28],r15
eldenring.exe+73E1FD: 89 44 24 20              - mov [rsp+20],eax
eldenring.exe+73E201: 4C 8D 8D 30 01 00 00     - lea r9,[rbp+00000130]
eldenring.exe+73E208: 0F B6 96 02 41 00 00     - movzx edx,byte ptr [rsi+00004102]
eldenring.exe+73E20F: E8 FC 16 00 00           - call eldenring.exe+73F910
eldenring.exe+73E214: 48 8D 95 30 01 00 00     - lea rdx,[rbp+00000130]
eldenring.exe+73E21B: 48 8B 7C 24 48           - mov rdi,[rsp+48]
eldenring.exe+73E220: 48 8B CF                 - mov rcx,rdi
eldenring.exe+73E223: E8 18 07 05 00           - call eldenring.exe+78E940
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>127</ID>
                  <Description>"自动汇编脚本"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,8B 99 44 01 00 00 0F B6 BE 01) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov ebx,[rcx+00000144]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 99 44 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+73DE99

eldenring.exe+73DE6C: 0F BA E8 1E              - bts eax,1E
eldenring.exe+73DE70: 89 44 24 68              - mov [rsp+68],eax
eldenring.exe+73DE74: 4C 8D 4C 24 60           - lea r9,[rsp+60]
eldenring.exe+73DE79: 44 8B C3                 - mov r8d,ebx
eldenring.exe+73DE7C: 48 8D 54 24 68           - lea rdx,[rsp+68]
eldenring.exe+73DE81: 48 8D 8D C0 03 00 00     - lea rcx,[rbp+000003C0]
eldenring.exe+73DE88: E8 D3 80 0E 00           - call eldenring.exe+825F60
eldenring.exe+73DE8D: 90                       - nop 
eldenring.exe+73DE8E: 49 8B 84 24 90 01 00 00  - mov rax,[r12+00000190]
eldenring.exe+73DE96: 48 8B 08                 - mov rcx,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+73DE99: 8B 99 44 01 00 00        - mov ebx,[rcx+00000144]
// ---------- DONE INJECTING  ----------
eldenring.exe+73DE9F: 0F B6 BE 01 41 00 00     - movzx edi,byte ptr [rsi+00004101]
eldenring.exe+73DEA6: 45 8B C7                 - mov r8d,r15d
eldenring.exe+73DEA9: 49 8B D5                 - mov rdx,r13
eldenring.exe+73DEAC: 4C 8B 7C 24 50           - mov r15,[rsp+50]
eldenring.exe+73DEB1: 49 8B CF                 - mov rcx,r15
eldenring.exe+73DEB4: E8 57 CE FF FF           - call eldenring.exe+73AD10
eldenring.exe+73DEB9: 44 0F B6 C0              - movzx r8d,al
eldenring.exe+73DEBD: 48 8D 8E C0 00 00 00     - lea rcx,[rsi+000000C0]
eldenring.exe+73DEC4: 4C 89 7C 24 28           - mov [rsp+28],r15
eldenring.exe+73DEC9: 89 5C 24 20              - mov [rsp+20],ebx
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>128</ID>
                  <Description>"自动汇编脚本"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,8B 81 44 01 00 00 89 45) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov eax,[rcx+00000144]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 81 44 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+660A36

eldenring.exe+660A12: 48 8B 54 24 50        - mov rdx,[rsp+50]
eldenring.exe+660A17: 84 DB                 - test bl,bl
eldenring.exe+660A19: 74 05                 - je eldenring.exe+660A20
eldenring.exe+660A1B: 45 84 ED              - test r13l,r13l
eldenring.exe+660A1E: 75 07                 - jne eldenring.exe+660A27
eldenring.exe+660A20: C6 44 24 30 00        - mov byte ptr [rsp+30],00
eldenring.exe+660A25: EB 05                 - jmp eldenring.exe+660A2C
eldenring.exe+660A27: C6 44 24 30 01        - mov byte ptr [rsp+30],01
eldenring.exe+660A2C: 49 8B 86 90 01 00 00  - mov rax,[r14+00000190]
eldenring.exe+660A33: 48 8B 08              - mov rcx,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+660A36: 8B 81 44 01 00 00     - mov eax,[rcx+00000144]
// ---------- DONE INJECTING  ----------
eldenring.exe+660A3C: 89 45 C8              - mov [rbp-38],eax
eldenring.exe+660A3F: 48 8B 45 D0           - mov rax,[rbp-30]
eldenring.exe+660A43: 48 85 C0              - test rax,rax
eldenring.exe+660A46: 74 38                 - je eldenring.exe+660A80
eldenring.exe+660A48: 48 85 D2              - test rdx,rdx
eldenring.exe+660A4B: 74 09                 - je eldenring.exe+660A56
eldenring.exe+660A4D: 0F BF 9A 80 00 00 00  - movsx ebx,word ptr [rdx+00000080]
eldenring.exe+660A54: EB 04                 - jmp eldenring.exe+660A5A
eldenring.exe+660A56: 33 C9                 - xor ecx,ecx
eldenring.exe+660A58: 8B D9                 - mov ebx,ecx
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>129</ID>
                  <Description>"自动汇编脚本"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,8B 99 44 01 00 00 0F B6 BE 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov ebx,[rcx+00000144]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 99 44 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+73DB58

eldenring.exe+73DB33: 8B D8                    - mov ebx,eax
eldenring.exe+73DB35: 44 8D 40 16              - lea r8d,[rax+16]
eldenring.exe+73DB39: 48 8D 95 C0 02 00 00     - lea rdx,[rbp+000002C0]
eldenring.exe+73DB40: 48 8B CF                 - mov rcx,rdi
eldenring.exe+73DB43: E8 08 00 05 00           - call eldenring.exe+78DB50
eldenring.exe+73DB48: 90                       - nop 
eldenring.exe+73DB49: 85 DB                    - test ebx,ebx
eldenring.exe+73DB4B: 78 70                    - js eldenring.exe+73DBBD
eldenring.exe+73DB4D: 49 8B 84 24 90 01 00 00  - mov rax,[r12+00000190]
eldenring.exe+73DB55: 48 8B 08                 - mov rcx,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+73DB58: 8B 99 44 01 00 00        - mov ebx,[rcx+00000144]
// ---------- DONE INJECTING  ----------
eldenring.exe+73DB5E: 0F B6 BE 00 41 00 00     - movzx edi,byte ptr [rsi+00004100]
eldenring.exe+73DB65: 48 8D 8D C0 02 00 00     - lea rcx,[rbp+000002C0]
eldenring.exe+73DB6C: E8 7F D0 FF FF           - call eldenring.exe+73ABF0
eldenring.exe+73DB71: 44 0F B6 C0              - movzx r8d,al
eldenring.exe+73DB75: 48 8D 8E B0 02 00 00     - lea rcx,[rsi+000002B0]
eldenring.exe+73DB7C: 4C 89 7C 24 28           - mov [rsp+28],r15
eldenring.exe+73DB81: 89 5C 24 20              - mov [rsp+20],ebx
eldenring.exe+73DB85: 4C 8D 8D C0 02 00 00     - lea r9,[rbp+000002C0]
eldenring.exe+73DB8C: 40 0F B6 D7              - movzx edx,dil
eldenring.exe+73DB90: E8 7B 1D 00 00           - call eldenring.exe+73F910
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>130</ID>
                  <Description>"自动汇编脚本"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,8B 81 44 01 00 00 89 86) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov eax,[rcx+00000144]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 81 44 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+73D92C

eldenring.exe+73D8F5: 48 8B 08                 - mov rcx,[rax]
eldenring.exe+73D8F8: E8 A3 AC CE FF           - call eldenring.exe+4285A0
eldenring.exe+73D8FD: 89 86 88 00 00 00        - mov [rsi+00000088],eax
eldenring.exe+73D903: 49 8B 84 24 90 01 00 00  - mov rax,[r12+00000190]
eldenring.exe+73D90B: 48 8B 08                 - mov rcx,[rax]
eldenring.exe+73D90E: 8B 81 3C 01 00 00        - mov eax,[rcx+0000013C]
eldenring.exe+73D914: 89 86 8C 00 00 00        - mov [rsi+0000008C],eax
eldenring.exe+73D91A: C6 86 A0 00 00 00 01     - mov byte ptr [rsi+000000A0],01
eldenring.exe+73D921: 49 8B 84 24 90 01 00 00  - mov rax,[r12+00000190]
eldenring.exe+73D929: 48 8B 08                 - mov rcx,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+73D92C: 8B 81 44 01 00 00        - mov eax,[rcx+00000144]
// ---------- DONE INJECTING  ----------
eldenring.exe+73D932: 89 86 94 00 00 00        - mov [rsi+00000094],eax
eldenring.exe+73D938: 49 8B 84 24 90 01 00 00  - mov rax,[r12+00000190]
eldenring.exe+73D940: 48 8B 08                 - mov rcx,[rax]
eldenring.exe+73D943: 8B 81 48 01 00 00        - mov eax,[rcx+00000148]
eldenring.exe+73D949: 89 86 9C 00 00 00        - mov [rsi+0000009C],eax
eldenring.exe+73D94F: C6 86 B0 00 00 00 01     - mov byte ptr [rsi+000000B0],01
eldenring.exe+73D956: 49 8B 84 24 90 01 00 00  - mov rax,[r12+00000190]
eldenring.exe+73D95E: 48 8B 08                 - mov rcx,[rax]
eldenring.exe+73D961: 8B 81 50 01 00 00        - mov eax,[rcx+00000150]
eldenring.exe+73D967: 89 86 A4 00 00 00        - mov [rsi+000000A4],eax
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>6</ID>
              <Description>"//当前精力(体力) =999999 //(4)90"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>ram1</Address>
              <Offsets>
                <Offset>150</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>7</ID>
                  <Description>"//"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>808080</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ram1</Address>
                  <Offsets>
                    <Offset>154</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>13</ID>
                  <Description>"//精力(体力)上限 =999999"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ram1</Address>
                  <Offsets>
                    <Offset>158</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>17</ID>
              <Description>"//生命减少"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-22
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02221059,eldenring.exe,89 81 38 01 00 00 E8) // should be unique
alloc(newmem,$1000,INJECT02221059)

label(code)
label(return)

newmem:
mov eax,#9999
code:
  mov [rcx+00000138],eax
  jmp return

INJECT02221059:
  jmp newmem
  nop
return:
registersymbol(INJECT02221059)

[DISABLE]

INJECT02221059:
  db 89 81 38 01 00 00

unregistersymbol(INJECT02221059)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+428262

eldenring.exe+428243: 41 0F B6 F0        - movzx esi,r8l
eldenring.exe+428247: 48 8B D9           - mov rbx,rcx
eldenring.exe+42824A: 85 D2              - test edx,edx
eldenring.exe+42824C: 79 07              - jns eldenring.exe+428255
eldenring.exe+42824E: 48 8D 44 24 50     - lea rax,[rsp+50]
eldenring.exe+428253: EB 0B              - jmp eldenring.exe+428260
eldenring.exe+428255: 3B 17              - cmp edx,[rdi]
eldenring.exe+428257: 48 8D 44 24 58     - lea rax,[rsp+58]
eldenring.exe+42825C: 48 0F 4F C7        - cmovg rax,rdi
eldenring.exe+428260: 8B 00              - mov eax,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+428262: 89 81 38 01 00 00  - mov [rcx+00000138],eax
// ---------- DONE INJECTING  ----------
eldenring.exe+428268: E8 73 44 22 00     - call eldenring.exe+64C6E0
eldenring.exe+42826D: 84 C0              - test al,al
eldenring.exe+42826F: 0F 85 B7 01 00 00  - jne eldenring.exe+42842C
eldenring.exe+428275: 48 8B CB           - mov rcx,rbx
eldenring.exe+428278: E8 03 5D 00 00     - call eldenring.exe+42DF80
eldenring.exe+42827D: 48 8B C8           - mov rcx,rax
eldenring.exe+428280: E8 AB E9 FB FF     - call eldenring.exe+3E6C30
eldenring.exe+428285: 84 C0              - test al,al
eldenring.exe+428287: 0F 84 9F 01 00 00  - je eldenring.exe+42842C
eldenring.exe+42828D: 40 84 F6           - test sil,sil
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"//On Loon/Property Modification"</Description>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-22
  Author : admin

  This script does blah blah blah
}

[ENABLE]
aobscanmodule(INJECT02221316,eldenring.exe,44 8B 41 6C 45 33 D2) // should be unique
//alloc(newmem,$1000,INJECT02221316)
alloc(newmem,$1000)

label(code)
label(return)
globalalloc(ram5,256)

newmem:
push r8
push r10
cmp [luenshuxing1],1
je @F
mov r8,INJECT02221316
mov [luenshuxing2],r8
mov r10,[r8]
mov [luenshuxing3],r10
mov r10,[r8+8]
mov [luenshuxing3+8],r10
mov [luenshuxing1],1
@@:
pop r10
pop r8

mov [ram5],rcx
code:
  mov r8d,[rcx+6C]
  xor r10d,r10d
mov [rsp+10],r10d
lea r9d,[r8+rdx]
jmp INJECT02221316+10
  jmp return

INJECT02221316:
  jmp newmem
  nop 2
return:
registersymbol(INJECT02221316)

[DISABLE]

INJECT02221316:
  db 44 8B 41 6C 45 33 D2 44 89 54 24 10 45 8D 0C 10

unregistersymbol(INJECT02221316)
dealloc(newmem)

luenshuxing1:
dd 0
{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+255010

eldenring.exe+254FEE: 03 CF                 - add ecx,edi
eldenring.exe+254FF0: 44 3B C1              - cmp r8d,ecx
eldenring.exe+254FF3: 41 0F 42 C8           - cmovb ecx,r8d
eldenring.exe+254FF7: 89 8B F4 00 00 00     - mov [rbx+000000F4],ecx
eldenring.exe+254FFD: 48 8B 5C 24 40        - mov rbx,[rsp+40]
eldenring.exe+255002: 48 83 C4 30           - add rsp,30
eldenring.exe+255006: 5F                    - pop rdi
eldenring.exe+255007: C3                    - ret 
eldenring.exe+255008: 41 38 1E              - cmp [r14],bl
eldenring.exe+25500B: E9 53 80 28 02        - jmp eldenring.exe+24DD063
// ---------- INJECTING HERE ----------
eldenring.exe+255010: 44 8B 41 6C           - mov r8d,[rcx+6C]
// ---------- DONE INJECTING  ----------
eldenring.exe+255014: 45 33 D2              - xor r10d,r10d
eldenring.exe+255017: 44 89 54 24 10        - mov [rsp+10],r10d
eldenring.exe+25501C: 45 8D 0C 10           - lea r9d,[r8+rdx]
eldenring.exe+255020: 44 89 4C 24 08        - mov [rsp+08],r9d
eldenring.exe+255025: 45 85 C9              - test r9d,r9d
eldenring.exe+255028: 79 07                 - jns eldenring.exe+255031
eldenring.exe+25502A: 48 8D 44 24 10        - lea rax,[rsp+10]
eldenring.exe+25502F: EB 17                 - jmp eldenring.exe+255048
eldenring.exe+255031: 41 81 F9 FF C9 9A 3B  - cmp r9d,3B9AC9FF
eldenring.exe+255038: 48 8D 15 D1 51 6C 02  - lea rdx,[eldenring.exe+291A210]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>79</ID>
              <Description>"\ All abilities set to 10"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
[ram5]+3C: //生命力
dd #10

[ram5]+40://集中力
dd #10

[ram5]+44://耐力
dd #10

[ram5]+48://力气
dd #10

[ram5]+4C://灵巧
dd #10

[ram5]+50://智力
dd #10

[ram5]+54://信仰
dd #10

[ram5]+58://感应
dd #10

{$lua}
if syntaxcheck then return end

local t=createTimer()
t.Interval=1000
t.OnTimer=function()
  memrec.Active=false
  t.destroy()
end
{$asm}
[DISABLE]
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>112</Key>
                    <Key>73</Key>
                  </Keys>
                  <Description>全能力值设为10</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>81</ID>
              <Description>"\ All ability values set to maximum"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
[ram5]+3C: //生命力
dd #999

[ram5]+40://集中力
dd #999

[ram5]+44://耐力
dd #999

[ram5]+48://力气
dd #999

[ram5]+4C://灵巧
dd #999

[ram5]+50://智力
dd #999

[ram5]+54://信仰
dd #999

[ram5]+58://感应
dd #999

{$lua}
if syntaxcheck then return end

local t=createTimer()
t.Interval=1000
t.OnTimer=function()
  memrec.Active=false
  t.destroy()
end
{$asm}
[DISABLE]
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>112</Key>
                    <Key>79</Key>
                  </Keys>
                  <Description>全能力值最大</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>61</ID>
              <Description>"//Ability value (permanent)"</Description>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>131</ID>
                  <Description>"生命力 +5"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ram5</Address>
                  <Offsets>
                    <Offset>3C</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>112</Key>
                        <Key>80</Key>
                      </Keys>
                      <Value>5</Value>
                      <Description>生命力+5</Description>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>62</ID>
                  <Description>"集中力"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ram5</Address>
                  <Offsets>
                    <Offset>3C+4</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>113</Key>
                        <Key>81</Key>
                      </Keys>
                      <Value>5</Value>
                      <Description>集中力+5</Description>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>63</ID>
                  <Description>"耐力"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ram5</Address>
                  <Offsets>
                    <Offset>44</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>113</Key>
                        <Key>87</Key>
                      </Keys>
                      <Value>5</Value>
                      <Description>耐力+5</Description>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>64</ID>
                  <Description>"力气"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ram5</Address>
                  <Offsets>
                    <Offset>48</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>113</Key>
                        <Key>69</Key>
                      </Keys>
                      <Value>5</Value>
                      <Description>力气+5</Description>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>65</ID>
                  <Description>"灵巧"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ram5</Address>
                  <Offsets>
                    <Offset>4C</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>113</Key>
                        <Key>82</Key>
                      </Keys>
                      <Value>5</Value>
                      <Description>灵巧+5</Description>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>66</ID>
                  <Description>"智力"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ram5</Address>
                  <Offsets>
                    <Offset>50</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>113</Key>
                        <Key>84</Key>
                      </Keys>
                      <Value>5</Value>
                      <Description>智力+5</Description>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>67</ID>
                  <Description>"信仰"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ram5</Address>
                  <Offsets>
                    <Offset>54</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>113</Key>
                        <Key>89</Key>
                      </Keys>
                      <Value>5</Value>
                      <Description>信仰+5</Description>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>68</ID>
                  <Description>"感应"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ram5</Address>
                  <Offsets>
                    <Offset>58</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>113</Key>
                        <Key>85</Key>
                      </Keys>
                      <Value>5</Value>
                      <Description>感应+5</Description>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>197</ID>
                  <Description>"//未知 修改出现全状态条"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>808080</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ram5</Address>
                  <Offsets>
                    <Offset>64</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>80</ID>
              <Description>"//卢恩"</Description>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>37</ID>
                  <Description>"当前卢恩 +5000 =9999999"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ram5</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>113</Key>
                        <Key>73</Key>
                      </Keys>
                      <Value>5000</Value>
                      <Description>卢恩+5000</Description>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>113</Key>
                        <Key>79</Key>
                      </Keys>
                      <Value>9999999</Value>
                      <Description>卢恩最大</Description>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>120</ID>
          <Description>"//Enable unlimited physical attack power (right hand weapon) mod //Not right hand is weapon type //Sword Axe Halberd Longsword Curved sword Small bow Spear"</Description>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version:
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02231754,eldenring.exe,48 85 C0 74 * F3 0F 10 40 20 F3 0F 59 42 28 C3) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(bq02241905)
registersymbol(bq02241905)
registersymbol(ram02231754)
alloc(ram02231754,256)
globalalloc(ram06,256)
newmem:
push r9
push rcx
cmp [youshougongjili1],1
je @F
mov r9,INJECT02231754
mov [youshougongjili2],r9
mov rcx,[r9]
mov [youshougongjili3],rcx
mov rcx,[r9+8]
mov [youshougongjili3+8],rcx
mov [youshougongjili1],1
@@:
pop rcx
pop r9

code:
  test rax,rax
reassemble(INJECT02231754+3)
movss xmm0,[rax+20]
cmp [ram06],1
jne @F
mov [ram02231754],(float)9999
movss xmm0,[ram02231754]
@@:
mulss xmm0,[rdx+28]
  //je eldenring.exe+CDDBF1
jmp INJECT02231754+F
  jmp return

bq02241905:
readmem(INJECT02231754,15)

INJECT02231754:
  jmp newmem
nop
return:
registersymbol(INJECT02231754)

[DISABLE]

INJECT02231754:
readmem(bq02241905,15)
  //db 48 85 C0 74 0B

unregistersymbol(INJECT02231754)
dealloc(newmem)
unregistersymbol(bq02241905)
unregistersymbol(ram02231754)
dealloc(ram02231754)

youshougongjili1:
dd 0
{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+CDDBE1

eldenring.exe+CDDBBF: 48 8B 41 20              - mov rax,[rcx+20]
eldenring.exe+CDDBC3: 72 1C                    - jb eldenring.exe+CDDBE1
eldenring.exe+CDDBC5: 48 85 C0                 - test rax,rax
eldenring.exe+CDDBC8: 74 0A                    - je eldenring.exe+CDDBD4
eldenring.exe+CDDBCA: F3 0F 10 40 20           - movss xmm0,[rax+20]
eldenring.exe+CDDBCF: F3 0F 59 C1              - mulss xmm0,xmm1
eldenring.exe+CDDBD3: C3                       - ret
eldenring.exe+CDDBD4: F3 0F 10 05 AC 14 4F 02  - movss xmm0,[eldenring.exe+31CF088]
eldenring.exe+CDDBDC: F3 0F 59 C1              - mulss xmm0,xmm1
eldenring.exe+CDDBE0: C3                       - ret
// ---------- INJECTING HERE ----------
eldenring.exe+CDDBE1: 48 85 C0                 - test rax,rax
// ---------- DONE INJECTING  ----------
eldenring.exe+CDDBE4: 74 0B                    - je eldenring.exe+CDDBF1
eldenring.exe+CDDBE6: F3 0F 10 40 20           - movss xmm0,[rax+20]
eldenring.exe+CDDBEB: F3 0F 59 42 28           - mulss xmm0,[rdx+28]
eldenring.exe+CDDBF0: C3                       - ret
eldenring.exe+CDDBF1: F3 0F 10 05 8F 14 4F 02  - movss xmm0,[eldenring.exe+31CF088]
eldenring.exe+CDDBF9: F3 0F 59 42 28           - mulss xmm0,[rdx+28]
eldenring.exe+CDDBFE: C3                       - ret
eldenring.exe+CDDBFF: 90                       - nop
eldenring.exe+CDDC00: 48 8B 51 08              - mov rdx,[rcx+08]
eldenring.exe+CDDC04: 0F 57 C0                 - xorps xmm0,xmm0
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>136</ID>
              <Description>"Unlimited physical attack power (sword/axe/halberd/bow/spear)"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
ram06:
dd 1


 
 
[DISABLE]
ram06:
dd 0
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>113</Key>
                    <Key>80</Key>
                  </Keys>
                  <Description>无限物理攻击力(剑/斧/戟/弓/矛)</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>122</ID>
              <Description>"//attack power Saint //St. greater than 0 bonus in effect"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02231804,eldenring.exe,F3 0F 10 40 28 F3 0F 59 42) // should be unique
alloc(newmem,$1000,INJECT02231804)

label(code)
label(return)
registersymbol(ram02231804)
alloc(ram02231804,256)
newmem:

code:
  movss xmm0,[rax+28]
mov [ram02231804],(float)99999
movss xmm0,[ram02231804]
  jmp return

INJECT02231804:
  jmp newmem
return:
registersymbol(INJECT02231804)

[DISABLE]

INJECT02231804:
  db F3 0F 10 40 28

unregistersymbol(INJECT02231804)
dealloc(newmem)
unregistersymbol(ram02231804)
dealloc(ram02231804)
{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+CCB706

eldenring.exe+CCB6E5: 48 85 C0                 - test rax,rax
eldenring.exe+CCB6E8: 74 0A                    - je eldenring.exe+CCB6F4
eldenring.exe+CCB6EA: F3 0F 10 40 28           - movss xmm0,[rax+28]
eldenring.exe+CCB6EF: F3 0F 59 C1              - mulss xmm0,xmm1
eldenring.exe+CCB6F3: C3                       - ret 
eldenring.exe+CCB6F4: F3 0F 10 05 8C 6B 4F 02  - movss xmm0,[eldenring.exe+31C2288]
eldenring.exe+CCB6FC: F3 0F 59 C1              - mulss xmm0,xmm1
eldenring.exe+CCB700: C3                       - ret 
eldenring.exe+CCB701: 48 85 C0                 - test rax,rax
eldenring.exe+CCB704: 74 0B                    - je eldenring.exe+CCB711
// ---------- INJECTING HERE ----------
eldenring.exe+CCB706: F3 0F 10 40 28           - movss xmm0,[rax+28]
// ---------- DONE INJECTING  ----------
eldenring.exe+CCB70B: F3 0F 59 42 30           - mulss xmm0,[rdx+30]
eldenring.exe+CCB710: C3                       - ret 
eldenring.exe+CCB711: F3 0F 10 05 6F 6B 4F 02  - movss xmm0,[eldenring.exe+31C2288]
eldenring.exe+CCB719: F3 0F 59 42 30           - mulss xmm0,[rdx+30]
eldenring.exe+CCB71E: C3                       - ret 
eldenring.exe+CCB71F: 90                       - nop 
eldenring.exe+CCB720: 48 8B 51 08              - mov rdx,[rcx+08]
eldenring.exe+CCB724: 0F 57 C0                 - xorps xmm0,xmm0
eldenring.exe+CCB727: 48 85 D2                 - test rdx,rdx
eldenring.exe+CCB72A: 74 48                    - je eldenring.exe+CCB774
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>117</ID>
              <Description>"自动汇编脚本"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,F3 45 0F 58 C4 48 8B 54) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  addss xmm8,xmm12
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 45 0F 58 C4

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+6554D7

eldenring.exe+6554AC: 24 01                       - and al,01
eldenring.exe+6554AE: 74 1E                       - je eldenring.exe+6554CE
eldenring.exe+6554B0: 0F B7 59 50                 - movzx ebx,word ptr [rcx+50]
eldenring.exe+6554B4: 48 8D 4C 24 30              - lea rcx,[rsp+30]
eldenring.exe+6554B9: E8 82 61 67 00              - call eldenring.exe+CCB640
eldenring.exe+6554BE: 48 8B 4C 24 70              - mov rcx,[rsp+70]
eldenring.exe+6554C3: 66 0F 6E CB                 - movd xmm1,ebx
eldenring.exe+6554C7: 0F 5B C9                    - cvtdq2ps xmm1,xmm1
eldenring.exe+6554CA: F3 0F 59 C1                 - mulss xmm0,xmm1
eldenring.exe+6554CE: F3 44 0F 10 B5 B0 00 00 00  - movss xmm14,[rbp+000000B0]
// ---------- INJECTING HERE ----------
eldenring.exe+6554D7: F3 45 0F 58 C4              - addss xmm8,xmm12
// ---------- DONE INJECTING  ----------
eldenring.exe+6554DC: 48 8B 54 24 38              - mov rdx,[rsp+38]
eldenring.exe+6554E1: F3 45 0F 59 C3              - mulss xmm8,xmm11
eldenring.exe+6554E6: F3 44 0F 58 C0              - addss xmm8,xmm0
eldenring.exe+6554EB: F3 45 0F 59 C5              - mulss xmm8,xmm13
eldenring.exe+6554F0: F3 45 0F 59 C6              - mulss xmm8,xmm14
eldenring.exe+6554F5: F3 45 0F 59 C1              - mulss xmm8,xmm9
eldenring.exe+6554FA: F3 44 0F 59 45 A8           - mulss xmm8,[rbp-58]
eldenring.exe+655500: F3 45 0F 59 C7              - mulss xmm8,xmm15
eldenring.exe+655505: F3 44 0F 59 85 C8 00 00 00  - mulss xmm8,[rbp+000000C8]
eldenring.exe+65550E: F3 45 0F 58 C2              - addss xmm8,xmm10
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>118</ID>
              <Description>"自动汇编脚本"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,E8 1F 06 00 00 44 0F) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  call eldenring.exe+662370
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db E8 1F 06 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+661D4C

eldenring.exe+661D1C: 41 0F 28 D4                 - movaps xmm2,xmm12
eldenring.exe+661D20: 48 8B BD 90 00 00 00        - mov rdi,[rbp+00000090]
eldenring.exe+661D27: 41 0F 28 DE                 - movaps xmm3,xmm14
eldenring.exe+661D2B: F3 0F 10 74 24 68           - movss xmm6,[rsp+68]
eldenring.exe+661D31: 48 8B CF                    - mov rcx,rdi
eldenring.exe+661D34: 44 88 64 24 38              - mov [rsp+38],r12l
eldenring.exe+661D39: 49 8B D7                    - mov rdx,r15
eldenring.exe+661D3C: F3 44 0F 11 7C 24 30        - movss [rsp+30],xmm15
eldenring.exe+661D43: 44 88 6C 24 28              - mov [rsp+28],r13l
eldenring.exe+661D48: 89 5C 24 20                 - mov [rsp+20],ebx
// ---------- INJECTING HERE ----------
eldenring.exe+661D4C: E8 1F 06 00 00              - call eldenring.exe+662370
// ---------- DONE INJECTING  ----------
eldenring.exe+661D51: 44 0F 28 E8                 - movaps xmm13,xmm0
eldenring.exe+661D55: F3 44 0F 59 EE              - mulss xmm13,xmm6
eldenring.exe+661D5A: EB 07                       - jmp eldenring.exe+661D63
eldenring.exe+661D5C: 48 8B BD 90 00 00 00        - mov rdi,[rbp+00000090]
eldenring.exe+661D63: 80 7C 24 6C 00              - cmp byte ptr [rsp+6C],00
eldenring.exe+661D68: 44 0F 28 BC 24 A0 00 00 00  - movaps xmm15,[rsp+000000A0]
eldenring.exe+661D71: 44 0F 28 B4 24 B0 00 00 00  - movaps xmm14,[rsp+000000B0]
eldenring.exe+661D7A: 4C 8B A4 24 60 01 00 00     - mov r12,[rsp+00000160]
eldenring.exe+661D82: 74 45                       - je eldenring.exe+661DC9
eldenring.exe+661D84: 48 8D 4C 24 6C              - lea rcx,[rsp+6C]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>119</ID>
              <Description>"自动汇编脚本"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02231736,eldenring.exe,F3 45 0F 58 C5 F3 45 0F 58 C3) // should be unique
alloc(newmem,$1000,INJECT02231736)

label(code)
label(return)

newmem:

code:
  addss xmm8,xmm13
  jmp return

INJECT02231736:
  jmp newmem
return:
registersymbol(INJECT02231736)

[DISABLE]

INJECT02231736:
  db F3 45 0F 58 C5

unregistersymbol(INJECT02231736)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+661F09

eldenring.exe+661EE2: 77 44           - ja eldenring.exe+661F28
eldenring.exe+661EE4: 41 0F 2F FA     - comiss xmm7,xmm10
eldenring.exe+661EE8: 77 3E           - ja eldenring.exe+661F28
eldenring.exe+661EEA: 41 0F 2F F9     - comiss xmm7,xmm9
eldenring.exe+661EEE: 77 38           - ja eldenring.exe+661F28
eldenring.exe+661EF0: F3 44 0F 5C C7  - subss xmm8,xmm7
eldenring.exe+661EF5: F3 44 0F 5C EF  - subss xmm13,xmm7
eldenring.exe+661EFA: F3 44 0F 5C DF  - subss xmm11,xmm7
eldenring.exe+661EFF: F3 44 0F 5C D7  - subss xmm10,xmm7
eldenring.exe+661F04: F3 44 0F 5C CF  - subss xmm9,xmm7
// ---------- INJECTING HERE ----------
eldenring.exe+661F09: F3 45 0F 58 C5  - addss xmm8,xmm13
// ---------- DONE INJECTING  ----------
eldenring.exe+661F0E: F3 45 0F 58 C3  - addss xmm8,xmm11
eldenring.exe+661F13: F3 45 0F 58 C2  - addss xmm8,xmm10
eldenring.exe+661F18: F3 45 0F 58 C1  - addss xmm8,xmm9
eldenring.exe+661F1D: F3 44 0F 58 C7  - addss xmm8,xmm7
eldenring.exe+661F22: 41 0F 28 C0     - movaps xmm0,xmm8
eldenring.exe+661F26: EB 1C           - jmp eldenring.exe+661F44
eldenring.exe+661F28: F3 41 0F 5D FD  - minss xmm7,xmm13
eldenring.exe+661F2D: F3 41 0F 5D F8  - minss xmm7,xmm8
eldenring.exe+661F32: F3 41 0F 5D FB  - minss xmm7,xmm11
eldenring.exe+661F37: F3 41 0F 5D FA  - minss xmm7,xmm10
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>139</ID>
          <Description>"//Enable physical attack power //Weapon type //Holy Seal //Prophet character"</Description>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02241119,eldenring.exe,F3 0F 10 40 28 F3 0F 59 42) // should be unique
alloc(newmem,$1000,INJECT02241119)

label(code)
label(return)
registersymbol(ram02241121)
alloc(ram02241121,256)
globalalloc(ram08,256)
newmem:
push r9
push rcx
cmp [wuligongjilisyj1],1
je @F
mov r9,INJECT02241119
mov [wuligongjilisyj2],r9
mov rcx,[r9]
mov [wuligongjilisyj3],rcx
mov [wuligongjilisyj1],1
@@:
pop rcx
pop r9
code:
  movss xmm0,[rax+28]
cmp [ram08],1
jne @F
mov [ram02241121],(float)9999
movss xmm0,[ram02241121]
@@:
  jmp return

INJECT02241119:
  jmp newmem
return:
registersymbol(INJECT02241119)

[DISABLE]

INJECT02241119:
  db F3 0F 10 40 28

unregistersymbol(INJECT02241119)
dealloc(newmem)
unregistersymbol(ram02241121)
dealloc(ram02241121)

wuligongjilisyj1:
dd 0
{
// ORIGINAL CODE - INJECTION POINT: INJECT02231804

eldenring.exe+CCB6E5: 48 85 C0                 - test rax,rax
eldenring.exe+CCB6E8: 74 0A                    - je eldenring.exe+CCB6F4
eldenring.exe+CCB6EA: F3 0F 10 40 28           - movss xmm0,[rax+28]
eldenring.exe+CCB6EF: F3 0F 59 C1              - mulss xmm0,xmm1
eldenring.exe+CCB6F3: C3                       - ret 
eldenring.exe+CCB6F4: F3 0F 10 05 8C 6B 4F 02  - movss xmm0,[eldenring.exe+31C2288]
eldenring.exe+CCB6FC: F3 0F 59 C1              - mulss xmm0,xmm1
eldenring.exe+CCB700: C3                       - ret 
eldenring.exe+CCB701: 48 85 C0                 - test rax,rax
eldenring.exe+CCB704: 74 0B                    - je eldenring.exe+CCB711
// ---------- INJECTING HERE ----------
INJECT02231804: F3 0F 10 40 28           - movss xmm0,[rax+28]
// ---------- DONE INJECTING  ----------
eldenring.exe+CCB70B: F3 0F 59 42 30           - mulss xmm0,[rdx+30]
eldenring.exe+CCB710: C3                       - ret 
eldenring.exe+CCB711: F3 0F 10 05 6F 6B 4F 02  - movss xmm0,[eldenring.exe+31C2288]
eldenring.exe+CCB719: F3 0F 59 42 30           - mulss xmm0,[rdx+30]
eldenring.exe+CCB71E: C3                       - ret 
eldenring.exe+CCB71F: 90                       - nop 
eldenring.exe+CCB720: 48 8B 51 08              - mov rdx,[rcx+08]
eldenring.exe+CCB724: 0F 57 C0                 - xorps xmm0,xmm0
eldenring.exe+CCB727: 48 85 D2                 - test rdx,rdx
eldenring.exe+CCB72A: 74 48                    - je eldenring.exe+CCB774
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>140</ID>
              <Description>"无限物理攻击力(圣印记)"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
ram08:
dd 1


 
 
[DISABLE]
ram08:
dd 0
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>121</ID>
          <Description>"//Enable unlimited physical attack power (left-handed weapon) mod //Not left-handed is the weapon type //Walking stick"</Description>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02231758,eldenring.exe,F3 0F 10 40 24 F3 0F 59 42) // should be unique
alloc(newmem,$1000,INJECT02231758)

label(code)
label(return)
registersymbol(ram02231758)
alloc(ram02231758,256)

globalalloc(ram07,256)
newmem:
push r9
push rcx
cmp [zuoshougongjili1],1
je @F
mov r9,INJECT02231758
mov [zuoshougongjili2],r9
mov rcx,[r9]
mov [zuoshougongjili3],rcx
mov [zuoshougongjili1],1
@@:
pop rcx
pop r9
code:
  movss xmm0,[rax+24]
cmp [ram07],1
jne @F
mov [ram02231758],(float)9999
movss xmm0,[ram02231758]
@@:
  jmp return

INJECT02231758:
  jmp newmem
return:
registersymbol(INJECT02231758)

[DISABLE]

INJECT02231758:
  db F3 0F 10 40 24

unregistersymbol(INJECT02231758)
dealloc(newmem)
unregistersymbol(ram02231758)
dealloc(ram02231758)

zuoshougongjili1:
dd 0
{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+CCB7B6

eldenring.exe+CCB795: 48 85 C0                 - test rax,rax
eldenring.exe+CCB798: 74 0A                    - je eldenring.exe+CCB7A4
eldenring.exe+CCB79A: F3 0F 10 40 24           - movss xmm0,[rax+24]
eldenring.exe+CCB79F: F3 0F 59 C1              - mulss xmm0,xmm1
eldenring.exe+CCB7A3: C3                       - ret 
eldenring.exe+CCB7A4: F3 0F 10 05 DC 6A 4F 02  - movss xmm0,[eldenring.exe+31C2288]
eldenring.exe+CCB7AC: F3 0F 59 C1              - mulss xmm0,xmm1
eldenring.exe+CCB7B0: C3                       - ret 
eldenring.exe+CCB7B1: 48 85 C0                 - test rax,rax
eldenring.exe+CCB7B4: 74 0B                    - je eldenring.exe+CCB7C1
// ---------- INJECTING HERE ----------
eldenring.exe+CCB7B6: F3 0F 10 40 24           - movss xmm0,[rax+24]
// ---------- DONE INJECTING  ----------
eldenring.exe+CCB7BB: F3 0F 59 42 2C           - mulss xmm0,[rdx+2C]
eldenring.exe+CCB7C0: C3                       - ret 
eldenring.exe+CCB7C1: F3 0F 10 05 BF 6A 4F 02  - movss xmm0,[eldenring.exe+31C2288]
eldenring.exe+CCB7C9: F3 0F 59 42 2C           - mulss xmm0,[rdx+2C]
eldenring.exe+CCB7CE: C3                       - ret 
eldenring.exe+CCB7CF: CC                       - int 3 
eldenring.exe+CCB7D0: 48 8B 51 08              - mov rdx,[rcx+08]
eldenring.exe+CCB7D4: 0F 57 C0                 - xorps xmm0,xmm0
eldenring.exe+CCB7D7: 48 85 D2                 - test rdx,rdx
eldenring.exe+CCB7DA: 74 42                    - je eldenring.exe+CCB81E
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>137</ID>
              <Description>"无限物理攻击力(手杖)"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
ram07:
dd 1


 
 
[DISABLE]
ram07:
dd 0
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>138</ID>
          <Description>"//open physical attack power //weapon type //shield club //poor character"</Description>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02241102,eldenring.exe,F3 0F 10 40 1C F3 0F 59 42) // should be unique
alloc(newmem,$1000,INJECT02241102)

label(code)
label(return)
registersymbol(ram02241107)
alloc(ram02241107,256)
globalalloc(ram09,256)
newmem:
push r9
push rcx
cmp [wuligongjidpgb1],1
je @F
mov r9,INJECT02241102
mov [wuligongjidpgb2],r9
mov rcx,[r9]
mov [wuligongjidpgb3],rcx
mov [wuligongjidpgb1],1
@@:
pop rcx
pop r9
code:
  movss xmm0,[rax+1C]
cmp [ram09],1
jne @f
mov [ram02241107],(float)9999
movss xmm0,[ram02241107]
@@:
  jmp return

INJECT02241102:
  jmp newmem
return:
registersymbol(INJECT02241102)

[DISABLE]

INJECT02241102:
  db F3 0F 10 40 1C

unregistersymbol(INJECT02241102)
dealloc(newmem)
unregistersymbol(ram02241107)
dealloc(ram02241107)

wuligongjidpgb1:
dd 0
{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+CCB806

eldenring.exe+CCB7E5: 48 85 C0                 - test rax,rax
eldenring.exe+CCB7E8: 74 0A                    - je eldenring.exe+CCB7F4
eldenring.exe+CCB7EA: F3 0F 10 40 1C           - movss xmm0,[rax+1C]
eldenring.exe+CCB7EF: F3 0F 59 C1              - mulss xmm0,xmm1
eldenring.exe+CCB7F3: C3                       - ret 
eldenring.exe+CCB7F4: F3 0F 10 05 8C 6A 4F 02  - movss xmm0,[eldenring.exe+31C2288]
eldenring.exe+CCB7FC: F3 0F 59 C1              - mulss xmm0,xmm1
eldenring.exe+CCB800: C3                       - ret 
eldenring.exe+CCB801: 48 85 C0                 - test rax,rax
eldenring.exe+CCB804: 74 0B                    - je eldenring.exe+CCB811
// ---------- INJECTING HERE ----------
eldenring.exe+CCB806: F3 0F 10 40 1C           - movss xmm0,[rax+1C]
// ---------- DONE INJECTING  ----------
eldenring.exe+CCB80B: F3 0F 59 42 24           - mulss xmm0,[rdx+24]
eldenring.exe+CCB810: C3                       - ret 
eldenring.exe+CCB811: F3 0F 10 05 6F 6A 4F 02  - movss xmm0,[eldenring.exe+31C2288]
eldenring.exe+CCB819: F3 0F 59 42 24           - mulss xmm0,[rdx+24]
eldenring.exe+CCB81E: C3                       - ret 
eldenring.exe+CCB81F: CC                       - int 3 
eldenring.exe+CCB820: 40 57                    - push rdi
eldenring.exe+CCB822: 48 83 EC 50              - sub rsp,50
eldenring.exe+CCB826: 48 8B 41 08              - mov rax,[rcx+08]
eldenring.exe+CCB82A: 44 8B C2                 - mov r8d,edx
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>141</ID>
              <Description>"无限物理攻击力(盾牌/棍棒)"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
ram09:
dd 1


 
 
[DISABLE]
ram09:
dd 0
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>144</ID>
          <Description>"//Enable item modification //Number of items greater than 1"</Description>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02241207,eldenring.exe,8B D8 48 8D 4C 24 28 E8 * * * * 8B C3 48 83 C4 40 5B C3 CC 4C) // should be unique
alloc(newmem,$1000,INJECT02241207)

label(code)
label(return)
globalalloc(ram010,256)
newmem:
push rbx
push rdx
cmp [wupianxiugai1],1
je @F
mov rbx,INJECT02241207
mov [wupianxiugai2],rbx
mov rdx,[rbx]
mov [wupianxiugai3],rdx
mov [wupianxiugai1],1
@@:

cmp [ram010],1
jne code
cmp eax,#1 //物品数量 //mov eax,[rcx+08]
jle code
test rcx,rcx
je code
movzx ebx,word ptr [rcx+4]
movzx edx,word ptr [rcx] //ID
cmp bx,dx
jne @F
cmp [rcx+8],#1
jle @F
mov [rcx+8],#999
code:
pop rdx
pop rbx
  mov ebx,eax
  lea rcx,[rsp+28]
  jmp return

INJECT02241207:
  jmp newmem
  nop 2
return:
registersymbol(INJECT02241207)

[DISABLE]

INJECT02241207:
  db 8B D8 48 8D 4C 24 28

unregistersymbol(INJECT02241207)
dealloc(newmem)

wupianxiugai1:
dd 0

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+244A78

eldenring.exe+244A50: 40 53                       - push rbx
eldenring.exe+244A52: 48 83 EC 40                 - sub rsp,40
eldenring.exe+244A56: 48 C7 44 24 20 FE FF FF FF  - mov qword ptr [rsp+20],FFFFFFFFFFFFFFFE
eldenring.exe+244A5F: 44 8B C2                    - mov r8d,edx
eldenring.exe+244A62: 48 8B D1                    - mov rdx,rcx
eldenring.exe+244A65: 48 8D 4C 24 28              - lea rcx,[rsp+28]
eldenring.exe+244A6A: E8 C1 C7 49 00              - call eldenring.exe+6E1230
eldenring.exe+244A6F: 90                          - nop 
eldenring.exe+244A70: 48 8B C8                    - mov rcx,rax
eldenring.exe+244A73: E8 68 C9 49 00              - call eldenring.exe+6E13E0
// ---------- INJECTING HERE ----------
eldenring.exe+244A78: 8B D8                       - mov ebx,eax
// ---------- DONE INJECTING  ----------
eldenring.exe+244A7A: 48 8D 4C 24 28              - lea rcx,[rsp+28]
eldenring.exe+244A7F: E8 EC C7 49 00              - call eldenring.exe+6E1270
eldenring.exe+244A84: 8B C3                       - mov eax,ebx
eldenring.exe+244A86: 48 83 C4 40                 - add rsp,40
eldenring.exe+244A8A: 5B                          - pop rbx
eldenring.exe+244A8B: C3                          - ret 
eldenring.exe+244A8C: CC                          - int 3 
eldenring.exe+244A8D: 4C 8D 05 40 53 48 83        - lea r8,[C36C9DD4]
eldenring.exe+244A94: EC                          - in al,dx
eldenring.exe+244A95: 40 48                       - dec eax
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>145</ID>
              <Description>"Infinite Items/Chalice Vials //Open Menu [Esc] Click on Bag/Use Chalice Vial [R] to take effect Items/Chalice Vials greater than 1"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
ram010:
dd 1


 
 
[DISABLE]
ram010:
dd 0
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>143</ID>
              <Description>"自动汇编脚本"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,8B 41 08 C3 4C 8D 05 F5 92 59 02) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov eax,[rcx+08]
  ret 
  lea r8,[eldenring.exe+2C7A800]
  jmp return

INJECT:
  jmp newmem
  nop 6
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 41 08 C3 4C 8D 05 F5 92 59 02

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+6E1500

eldenring.exe+6E14ED: 40 57                    - push rdi
eldenring.exe+6E14EF: 48 8B 41 04              - mov rax,[rcx+04]
eldenring.exe+6E14F3: 89 02                    - mov [rdx],eax
eldenring.exe+6E14F5: 48 8B C2                 - mov rax,rdx
eldenring.exe+6E14F8: C3                       - ret 
eldenring.exe+6E14F9: 90                       - nop 
eldenring.exe+6E14FA: EA E5 24 86 E3 BA        - db EA E5 24 86 E3 BA 
eldenring.exe+6E1500: 8B 41 08                 - mov eax,[rcx+08]
eldenring.exe+6E1503: C3                       - ret 
eldenring.exe+6E1504 - 4C 8D 05 F5925902     - lea r8,[eldenring.exe+2C7A800] //"namewhat"
// ---------- INJECTING HERE ----------
eldenring.exe+6E150B: E9 1F E6 D3 00           - jmp eldenring.exe+141FB2F
// ---------- DONE INJECTING  ----------
eldenring.exe+6E1510: 48 89 5C 24 10           - mov [rsp+10],rbx
eldenring.exe+6E1515: 57                       - push rdi
eldenring.exe+6E1516: 48 83 EC 20              - sub rsp,20
eldenring.exe+6E151A: 33 DB                    - xor ebx,ebx
eldenring.exe+6E151C: C7 44 24 30 00 00 00 00  - mov [rsp+30],00000000
eldenring.exe+6E1524: 39 19                    - cmp [rcx],ebx
eldenring.exe+6E1526: 48 8D 54 24 30           - lea rdx,[rsp+30]
eldenring.exe+6E152B: 48 8B F9                 - mov rdi,rcx
eldenring.exe+6E152E: 0F 95 C3                 - setne bl
eldenring.exe+6E1531: E8 FA 2F F7 FF           - call eldenring.exe+654530
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>193</ID>
          <Description>"// Turn on weight modification"</Description>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02241604,eldenring.exe,F3 0F 5D 77 10) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
registersymbol(ram02241605)
alloc(ram02241605,256)
newmem:
push rax
push rcx
cmp [fuzhongxiugai1],1
je @F
mov rax,INJECT02241604
mov [fuzhongxiugai2],rax
mov rcx,[rax]
mov [fuzhongxiugai3],rcx
//mov rcx,[rax+8]
//mov [fuzhongxiugai3+8],rcx
mov [fuzhongxiugai1],1
@@:
pop rcx
pop rax

mov [ram02241605],rdx
code:
  minss xmm6,[rdi+10]
movss xmm0,[rdi+14]
xorps xmm3,xmm3
comiss xmm6,xmm3
jmp INJECT02241604+10
  jmp return

INJECT02241604:
  jmp newmem
nop 2
return:
registersymbol(INJECT02241604)

[DISABLE]

INJECT02241604:
  db F3 0F 5D 77 10 F3 0F 10 47 14 0F 57 DB 0F 2F F3

unregistersymbol(INJECT02241604)
dealloc(newmem)
unregistersymbol(ram02241605)
dealloc(ram02241605)

fuzhongxiugai1:
dd 0
{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+662682

eldenring.exe+662668: 48 8B 7C 24 30           - mov rdi,[rsp+30]
eldenring.exe+66266D: 48 85 FF                 - test rdi,rdi
eldenring.exe+662670: 75 10                    - jne eldenring.exe+662682
eldenring.exe+662672: 0F 28 C6                 - movaps xmm0,xmm6
eldenring.exe+662675: 0F 28 74 24 50           - movaps xmm6,[rsp+50]
eldenring.exe+66267A: 48 83 C4 60              - add rsp,60
eldenring.exe+66267E: 5F                       - pop rdi
eldenring.exe+66267F: 5E                       - pop rsi
eldenring.exe+662680: 5B                       - pop rbx
eldenring.exe+662681: C3                       - ret 
// ---------- INJECTING HERE ----------
eldenring.exe+662682: F3 0F 5D 77 10           - minss xmm6,[rdi+10]
// ---------- DONE INJECTING  ----------
eldenring.exe+662687: F3 0F 10 47 14           - movss xmm0,[rdi+14]
eldenring.exe+66268C: 0F 57 DB                 - xorps xmm3,xmm3
eldenring.exe+66268F: 0F 2F F3                 - comiss xmm6,xmm3
eldenring.exe+662692: 0F 86 F5 01 00 00        - jbe eldenring.exe+66288D
eldenring.exe+662698: 48 89 AC 24 80 00 00 00  - mov [rsp+00000080],rbp
eldenring.exe+6626A0: 48 8D 47 04              - lea rax,[rdi+04]
eldenring.exe+6626A4: 0F 29 7C 24 40           - movaps [rsp+40],xmm7
eldenring.exe+6626A9: 48 8B CB                 - mov rcx,rbx
eldenring.exe+6626AC: 0F 1F 40 00              - nop dword ptr [rax+00]
eldenring.exe+6626B0: F3 0F 10 00              - movss xmm0,[rax]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>194</ID>
              <Description>"//(f)1.00 8.00 25.00 60.00 99.00 45.00 45.00(负重) 72.00 120.00 160.00"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>ram02241605</Address>
              <Offsets>
                <Offset>19E8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>195</ID>
              <Description>"装备重量/负重上限 =45 +100 =9999999"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>ram02241605</Address>
              <Offsets>
                <Offset>19E8+18</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>114</Key>
                    <Key>81</Key>
                  </Keys>
                  <Value>45</Value>
                  <Description>装备重量/负重上限设为45</Description>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>114</Key>
                    <Key>87</Key>
                  </Keys>
                  <Value>100</Value>
                  <Description>装备重量/负重上限+100</Description>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>114</Key>
                    <Key>69</Key>
                  </Keys>
                  <Value>9999999</Value>
                  <Description>装备重量/负重上限最大</Description>
                  <ID>2</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>170</ID>
              <Description>"//负重 //(f)1 8 25 60 99 45 45(负重) 72 120 160"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02241515,eldenring.exe,F3 0F 10 54 9F 14 F3 0F 5C E0) // should be unique
alloc(newmem,$1000,INJECT02241515)

label(code)
label(return)

newmem:
cmp ebx,1
jne code
 movss xmm2,[rdi+rbx*4+14]
code:
  movss xmm2,[rdi+rbx*4+14]
  jmp return

INJECT02241515:
  jmp newmem
  nop
return:
registersymbol(INJECT02241515)

[DISABLE]

INJECT02241515:
  db F3 0F 10 54 9F 14

unregistersymbol(INJECT02241515)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+6626F7

eldenring.exe+6626CA: 8B F3                       - mov esi,ebx
eldenring.exe+6626CC: 48 63 DE                    - movsxd  rbx,esi
eldenring.exe+6626CF: 8D 46 01                    - lea eax,[rsi+01]
eldenring.exe+6626D2: 48 63 E8                    - movsxd  rbp,eax
eldenring.exe+6626D5: F3 0F 11 9C 24 90 00 00 00  - movss [rsp+00000090],xmm3
eldenring.exe+6626DE: F3 0F 10 4C 9F 28           - movss xmm1,[rdi+rbx*4+28]
eldenring.exe+6626E4: 0F 2F CB                    - comiss xmm1,xmm3
eldenring.exe+6626E7: F3 0F 10 24 AF              - movss xmm4,[rdi+rbp*4]
eldenring.exe+6626EC: F3 0F 10 7C AF 14           - movss xmm7,[rdi+rbp*4+14]
eldenring.exe+6626F2: F3 0F 10 04 9F              - movss xmm0,[rdi+rbx*4]
// ---------- INJECTING HERE ----------
eldenring.exe+6626F7: F3 0F 10 54 9F 14           - movss xmm2,[rdi+rbx*4+14]
// ---------- DONE INJECTING  ----------
eldenring.exe+6626FD: F3 0F 5C E0                 - subss xmm4,xmm0
eldenring.exe+662701: F3 0F 5C FA                 - subss xmm7,xmm2
eldenring.exe+662705: 72 23                       - jb eldenring.exe+66272A
eldenring.exe+662707: F3 0F 5C F0                 - subss xmm6,xmm0
eldenring.exe+66270B: F3 0F 5E F4                 - divss xmm6,xmm4
eldenring.exe+66270F: 0F 28 C6                    - movaps xmm0,xmm6
eldenring.exe+662712: E8 59 7B 7C 01              - call eldenring.exe+1E2A270
eldenring.exe+662717: F3 0F 10 54 9F 14           - movss xmm2,[rdi+rbx*4+14]
eldenring.exe+66271D: F3 0F 59 C7                 - mulss xmm0,xmm7
eldenring.exe+662721: 0F 28 DA                    - movaps xmm3,xmm2
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>188</ID>
                  <Description>"自动汇编脚本"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02241542,eldenring.exe,ERROR: 无法找到独特的 AOB, 代码可靠吗 "49 8D 40 03 48 8D 04 40") // should be unique
alloc(newmem,$1000,INJECT02241542)

label(code)
label(return)

newmem:

code:
  lea rax,[r8+03]
  lea rax,[rax+rax*2]
  jmp return

INJECT02241542:
  jmp newmem
  nop 3
return:
registersymbol(INJECT02241542)

[DISABLE]

INJECT02241542:
  db 49 8D 40 03 48 8D 04 40

unregistersymbol(INJECT02241542)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+CB0F0D

eldenring.exe+CB0EF2: 83 E9 01        - sub ecx,01
eldenring.exe+CB0EF5: 74 24           - je eldenring.exe+CB0F1B
eldenring.exe+CB0EF7: 83 E9 01        - sub ecx,01
eldenring.exe+CB0EFA: 74 0B           - je eldenring.exe+CB0F07
eldenring.exe+CB0EFC: 83 F9 01        - cmp ecx,01
eldenring.exe+CB0EFF: 75 2C           - jne eldenring.exe+CB0F2D
eldenring.exe+CB0F01: 41 80 F9 80     - cmp r9l,-80
eldenring.exe+CB0F05: 72 14           - jb eldenring.exe+CB0F1B
eldenring.exe+CB0F07: F6 42 2E 02     - test byte ptr [rdx+2E],02
eldenring.exe+CB0F0B: 74 0E           - je eldenring.exe+CB0F1B
// ---------- INJECTING HERE ----------
eldenring.exe+CB0F0D: 49 8D 40 03     - lea rax,[r8+03]
// ---------- DONE INJECTING  ----------
eldenring.exe+CB0F11: 48 8D 04 40     - lea rax,[rax+rax*2]
eldenring.exe+CB0F15: 48 8B 1C C2     - mov rbx,[rdx+rax*8]
eldenring.exe+CB0F19: EB 12           - jmp eldenring.exe+CB0F2D
eldenring.exe+CB0F1B: 4B 8D 0C 40     - lea rcx,[r8+r8*2]
eldenring.exe+CB0F1F: 8B 5C 8A 44     - mov ebx,[rdx+rcx*4+44]
eldenring.exe+CB0F23: EB 08           - jmp eldenring.exe+CB0F2D
eldenring.exe+CB0F25: 4B 8D 0C 40     - lea rcx,[r8+r8*2]
eldenring.exe+CB0F29: 8B 5C 8A 34     - mov ebx,[rdx+rcx*4+34]
eldenring.exe+CB0F2D: 48 03 DA        - add rbx,rdx
eldenring.exe+CB0F30: 48 89 6C 24 28  - mov [rsp+28],rbp
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>77</ID>
          <Description>"//开启普通怪物/BOSS生命修改"</Description>
          <Color>808080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(INJECT02231501,eldenring.exe,8B 81 38 01 00 00 89 43 E8 48) // should be unique
alloc(newmem1,$1000,INJECT02231501)

label(code1)
label(return1)
globalalloc(ram010,256)
newmem1:
cmp [ram010],1
jne @F
cmp [rcx+138],#1
jle @f
mov [rcx+138],#1
code1:
  mov eax,[rcx+00000138]
  jmp return1

INJECT02231501:
  jmp newmem1
  nop
return1:
registersymbol(INJECT02231501)


aobscanmodule(INJECT02231518,eldenring.exe,8B 81 38 01 00 00 89 43 E8 49) // should be unique
alloc(newmem,$1000,INJECT02231518)

label(code)
label(return)

newmem:
cmp [ram010],1
jne @F
cmp [rcx+138],#1
jle @f
mov [rcx+138],#1
code:
  mov eax,[rcx+00000138]
  jmp return

INJECT02231518:
  jmp newmem
  nop
return:
registersymbol(INJECT02231518)
 
[DISABLE]
INJECT02231501:
  db 8B 81 38 01 00 00

unregistersymbol(INJECT02231501)
dealloc(newmem1)

INJECT02231518:
  db 8B 81 38 01 00 00

unregistersymbol(INJECT02231518)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>78</ID>
              <Description>"//快速击杀"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
ram010:
dd 1


 
 
[DISABLE]
ram010:
dd 0
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>74</ID>
              <Description>"//普通怪物生命值(锁定/显示生命条时)(不含BOSS) //随机崩溃"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02231501,eldenring.exe,8B 81 38 01 00 00 89 43 E8 48) // should be unique
alloc(newmem1,$1000,INJECT02231501)

label(code1)
label(return1)
globalalloc(ram010,256)
newmem1:
cmp [ram010],1
jne @F
cmp [rcx+138],#1
jle @f
mov [rcx+138],#1
code1:
  mov eax,[rcx+00000138]
  jmp return1

INJECT02231501:
  jmp newmem1
  nop
return1:
registersymbol(INJECT02231501)

[DISABLE]

INJECT02231501:
  db 8B 81 38 01 00 00

unregistersymbol(INJECT02231501)
dealloc(newmem1)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+73C71F

eldenring.exe+73C6F4: 41 0F B6 47 20        - movzx eax,byte ptr [r15+20]
eldenring.exe+73C6F9: 88 43 D3              - mov [rbx-2D],al
eldenring.exe+73C6FC: 49 8B 07              - mov rax,[r15]
eldenring.exe+73C6FF: 48 89 43 D8           - mov [rbx-28],rax
eldenring.exe+73C703: F3 41 0F 2C 47 10     - cvttss2si eax,[r15+10]
eldenring.exe+73C709: 89 43 E0              - mov [rbx-20],eax
eldenring.exe+73C70C: F3 41 0F 2C 47 14     - cvttss2si eax,[r15+14]
eldenring.exe+73C712: 89 43 E4              - mov [rbx-1C],eax
eldenring.exe+73C715: 48 8B 87 90 01 00 00  - mov rax,[rdi+00000190]
eldenring.exe+73C71C: 48 8B 08              - mov rcx,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+73C71F: 8B 81 38 01 00 00     - mov eax,[rcx+00000138]
// ---------- DONE INJECTING  ----------
eldenring.exe+73C725: 89 43 E8              - mov [rbx-18],eax
eldenring.exe+73C728: 48 8B 87 90 01 00 00  - mov rax,[rdi+00000190]
eldenring.exe+73C72F: 48 8B 08              - mov rcx,[rax]
eldenring.exe+73C732: 8B 81 3C 01 00 00     - mov eax,[rcx+0000013C]
eldenring.exe+73C738: 89 43 F0              - mov [rbx-10],eax
eldenring.exe+73C73B: 48 8B 44 24 40        - mov rax,[rsp+40]
eldenring.exe+73C740: 48 89 43 F8           - mov [rbx-08],rax
eldenring.exe+73C744: 0F B6 44 24 70        - movzx eax,byte ptr [rsp+70]
eldenring.exe+73C749: 88 43 28              - mov [rbx+28],al
eldenring.exe+73C74C: 48 8D 44 24 48        - lea rax,[rsp+48]
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>113</ID>
                  <Description>"//小兵生命减少崩溃"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,48 83 C4 20 5B C3 48 83 C4 20 5B C3 32 C0) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  add rsp,20
  pop rbx
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 48 83 C4 20 5B

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+2CA4FD

eldenring.exe+2CA4D9: 48 8B D9              - mov rbx,rcx
eldenring.exe+2CA4DC: FF 50 30              - call qword ptr [rax+30]
eldenring.exe+2CA4DF: 48 85 C0              - test rax,rax
eldenring.exe+2CA4E2: 74 1F                 - je eldenring.exe+2CA503
eldenring.exe+2CA4E4: 48 8B 03              - mov rax,[rbx]
eldenring.exe+2CA4E7: 48 8B CB              - mov rcx,rbx
eldenring.exe+2CA4EA: FF 50 30              - call qword ptr [rax+30]
eldenring.exe+2CA4ED: 48 8B 88 90 01 00 00  - mov rcx,[rax+00000190]
eldenring.exe+2CA4F4: 48 8B 01              - mov rax,[rcx]
eldenring.exe+2CA4F7: 8B 80 38 01 00 00     - mov eax,[rax+00000138]
// ---------- INJECTING HERE ----------
eldenring.exe+2CA4FD: 48 83 C4 20           - add rsp,20
// ---------- DONE INJECTING  ----------
eldenring.exe+2CA501: 5B                    - pop rbx
eldenring.exe+2CA502: C3                    - ret 
eldenring.exe+2CA503: 48 83 C4 20           - add rsp,20
eldenring.exe+2CA507: 5B                    - pop rbx
eldenring.exe+2CA508: C3                    - ret 
eldenring.exe+2CA509: 32 C0                 - xor al,al
eldenring.exe+2CA50B: E9 B8 D8 19 00        - jmp eldenring.exe+467DC8
eldenring.exe+2CA510: 83 C8 FF              - or eax,-01
eldenring.exe+2CA513: C3                    - ret 
eldenring.exe+2CA514: 8B 8C 83 68 B4 C7 00  - mov ecx,[rbx+rax*4+00C7B468]
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>76</ID>
              <Description>"//BOSS生命值 //这个跳转随机崩溃"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02231518,eldenring.exe,8B 81 38 01 00 00 89 43 E8 49) // should be unique
alloc(newmem,$1000,INJECT02231518)

label(code)
label(return)

newmem:
cmp [ram010],1
jne @F
cmp [rcx+138],#1
jle @f
mov [rcx+138],#1
code:
  mov eax,[rcx+00000138]
  jmp return

INJECT02231518:
  jmp newmem
  nop
return:
registersymbol(INJECT02231518)

[DISABLE]

INJECT02231518:
  db 8B 81 38 01 00 00

unregistersymbol(INJECT02231518)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+73B858

eldenring.exe+73B827: 48 C7 44 24 58 07 00 00 00  - mov qword ptr [rsp+58],00000007
eldenring.exe+73B830: 4C 89 64 24 50              - mov [rsp+50],r12
eldenring.exe+73B835: 66 44 89 64 24 40           - mov [rsp+40],r12w
eldenring.exe+73B83B: 8B 47 0C                    - mov eax,[rdi+0C]
eldenring.exe+73B83E: 03 47 08                    - add eax,[rdi+08]
eldenring.exe+73B841: 89 83 AC 00 00 00           - mov [rbx+000000AC],eax
eldenring.exe+73B847: 48 8B 07                    - mov rax,[rdi]
eldenring.exe+73B84A: 48 89 43 D8                 - mov [rbx-28],rax
eldenring.exe+73B84E: 49 8B 86 90 01 00 00        - mov rax,[r14+00000190]
eldenring.exe+73B855: 48 8B 08                    - mov rcx,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+73B858: 8B 81 38 01 00 00           - mov eax,[rcx+00000138]
// ---------- DONE INJECTING  ----------
eldenring.exe+73B85E: 89 43 E8                    - mov [rbx-18],eax
eldenring.exe+73B861: 49 8B 86 90 01 00 00        - mov rax,[r14+00000190]
eldenring.exe+73B868: 48 8B 08                    - mov rcx,[rax]
eldenring.exe+73B86B: 8B 81 3C 01 00 00           - mov eax,[rcx+0000013C]
eldenring.exe+73B871: 89 43 F0                    - mov [rbx-10],eax
eldenring.exe+73B874: E9 88 00 00 00              - jmp eldenring.exe+73B901
eldenring.exe+73B879: 48 8D 4C 24 70              - lea rcx,[rsp+70]
eldenring.exe+73B87E: E8 AD 9F FF FF              - call eldenring.exe+735830
eldenring.exe+73B883: 90                          - nop 
eldenring.exe+73B884: 48 8D 4B D0                 - lea rcx,[rbx-30]
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>88</ID>
                  <Description>"自动汇编脚本"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02231632,eldenring.exe,48 8B 01 49 8B F0 8B DA) // should be unique
alloc(newmem,$1000,INJECT02231632)

label(code)
label(return)

newmem:
push rdi
mov rdi,[rcx+190]
test rdi,rdi
je @F
mov rdi,[rdi]
test rdi,rdi
je @F
cmp [rcx+138],#1
jle @F
mov [rcx+138],#1
@@:
pop rdi
code:
  mov rax,[rcx]
  mov rsi,r8
  jmp return

INJECT02231632:
  jmp newmem
  nop
return:
registersymbol(INJECT02231632)

[DISABLE]

INJECT02231632:
  db 48 8B 01 49 8B F0

unregistersymbol(INJECT02231632)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+3E1B9F

eldenring.exe+3E1B82: C3                          - ret 
eldenring.exe+3E1B83: 90                          - nop 
eldenring.exe+3E1B84: 4C 8B 44 24 40              - mov r8,[rsp+40]
eldenring.exe+3E1B89: 4C 3B 44 24 48              - cmp r8,[rsp+48]
eldenring.exe+3E1B8E: 55                          - push rbp
eldenring.exe+3E1B8F: 48 48                       - dec rax
eldenring.exe+3E1B91: 89 5C 24 08                 - mov [rsp+08],ebx
eldenring.exe+3E1B95: 48 89 74 24 10              - mov [rsp+10],rsi
eldenring.exe+3E1B9A: 57                          - push rdi
eldenring.exe+3E1B9B: 48 83 EC 30                 - sub rsp,30
// ---------- INJECTING HERE ----------
eldenring.exe+3E1B9F: 48 8B 01                    - mov rax,[rcx]
// ---------- DONE INJECTING  ----------
eldenring.exe+3E1BA2: 49 8B F0                    - mov rsi,r8
eldenring.exe+3E1BA5: 8B DA                       - mov ebx,edx
eldenring.exe+3E1BA7: C7 44 24 20 FF FF FF FF     - mov [rsp+20],FFFFFFFF
eldenring.exe+3E1BAF: 48 8B F9                    - mov rdi,rcx
eldenring.exe+3E1BB2: C6 44 24 24 00              - mov byte ptr [rsp+24],00
eldenring.exe+3E1BB7: 48 C7 44 24 28 00 00 00 00  - mov qword ptr [rsp+28],00000000
eldenring.exe+3E1BC0: FF 50 28                    - call qword ptr [rax+28]
eldenring.exe+3E1BC3: 8B D3                       - mov edx,ebx
eldenring.exe+3E1BC5: 48 8D 4C 24 20              - lea rcx,[rsp+20]
eldenring.exe+3E1BCA: 44 8B C0                    - mov r8d,eax
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>87</ID>
                  <Description>"自动汇编脚本 //这个载入也会崩溃"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02231629,eldenring.exe,48 8B 07 48 8B CF FF 50 18 4C 8B) // should be unique
alloc(newmem,$1000,INJECT02231629)

label(code)
label(return)

newmem:

code:
  mov rax,[rdi]
  mov rcx,rdi
  jmp return

INJECT02231629:
  jmp newmem
  nop
return:
registersymbol(INJECT02231629)

[DISABLE]

INJECT02231629:
  db 48 8B 07 48 8B CF

unregistersymbol(INJECT02231629)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+3E1BDA

eldenring.exe+3E1BAF: 48 8B F9                    - mov rdi,rcx
eldenring.exe+3E1BB2: C6 44 24 24 00              - mov byte ptr [rsp+24],00
eldenring.exe+3E1BB7: 48 C7 44 24 28 00 00 00 00  - mov qword ptr [rsp+28],00000000
eldenring.exe+3E1BC0: FF 50 28                    - call qword ptr [rax+28]
eldenring.exe+3E1BC3: 8B D3                       - mov edx,ebx
eldenring.exe+3E1BC5: 48 8D 4C 24 20              - lea rcx,[rsp+20]
eldenring.exe+3E1BCA: 44 8B C0                    - mov r8d,eax
eldenring.exe+3E1BCD: E8 AE 23 8C 00              - call eldenring.exe+CA3F80
eldenring.exe+3E1BD2: 48 83 7C 24 28 00           - cmp qword ptr [rsp+28],00
eldenring.exe+3E1BD8: 74 2C                       - je eldenring.exe+3E1C06
// ---------- INJECTING HERE ----------
eldenring.exe+3E1BDA: 48 8B 07                    - mov rax,[rdi]
// ---------- DONE INJECTING  ----------
eldenring.exe+3E1BDD: 48 8B CF                    - mov rcx,rdi
eldenring.exe+3E1BE0: FF 50 18                    - call qword ptr [rax+18]
eldenring.exe+3E1BE3: 4C 8B C6                    - mov r8,rsi
eldenring.exe+3E1BE6: 48 8D 4C 24 20              - lea rcx,[rsp+20]
eldenring.exe+3E1BEB: 83 F8 01                    - cmp eax,01
eldenring.exe+3E1BEE: 0F 94 C2                    - sete dl
eldenring.exe+3E1BF1: E8 3A 23 8C 00              - call eldenring.exe+CA3F30
eldenring.exe+3E1BF6: 48 8B 5C 24 40              - mov rbx,[rsp+40]
eldenring.exe+3E1BFB: 48 8B 74 24 48              - mov rsi,[rsp+48]
eldenring.exe+3E1C00: 48 83 C4 30                 - add rsp,30
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>135</ID>
          <Description>"//备份"</Description>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>133</ID>
              <Description>"//开启游戏修改 //创建线程"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
{
//备份1
globalalloc(zhandou1,256)
globalalloc(zhandou2,256)
globalalloc(zhandou3,256)

globalalloc(newmem02231249,$1000)
CreateThread(newmem02231249)

label(ret1)
//label(ret2)

newmem02231249:
//push rax
//mov rax,[zhandou1]
//cmp eax,1
//pop rax
cmp [zhandou1],1
//jne ret2
jne ret1

push rax
mov rax,[zhandou2]
cmp rax,0
pop rax
je ret1
push rax
push rbx
mov rax,[zhandou2]
mov rbx,[zhandou3]
mov [rax],rbx
pop rbx
pop rax

ret1:
mov ecx,#5000
call KERNEL32.Sleep
//call sleep
jmp newmem02231249

//ret2:
//ret
}

{
//备份2
globalalloc(zhandou1,256)
globalalloc(zhandou2,256)
globalalloc(zhandou3,256)

globalalloc(luenshuxing1,256)
globalalloc(luenshuxing2,256)
globalalloc(luenshuxing3,256)

globalalloc(youshougongjili1,256)
globalalloc(youshougongjili2,256)
globalalloc(youshougongjili3,256)

globalalloc(zuoshougongjili1,256)
globalalloc(zuoshougongjili2,256)
globalalloc(zuoshougongjili3,256)

globalalloc(newmem02231249,$1000)
CreateThread(newmem02231249)

label(ret1)
//label(ret2)

newmem02231249:
//push rax
//mov rax,[zhandou1]
//cmp eax,1
//pop rax
cmp [zhandou1],1 //战斗
//jne ret2
jne @F
push rax
mov rax,[zhandou2]
cmp rax,0
pop rax
je @F
push rax
push rbx
mov rax,[zhandou2]
mov rbx,[zhandou3]
mov [rax],rbx
pop rbx
pop rax
@@:

cmp [luenshuxing1],1 //卢恩/属性
jne @F
push rax
mov rax,[luenshuxing2]
cmp rax,0
pop rax
je @F
push rax
push rbx
mov rax,[luenshuxing2]
mov rbx,[luenshuxing3]
mov [rax],rbx
pop rbx
pop rax
@@:

cmp [youshougongjili1],1 //右手武器物理攻击力
jne @F
push rax
mov rax,[youshougongjili2]
cmp rax,0
pop rax
je @F
push rax
push rbx
mov rax,[youshougongjili2]
mov rbx,[youshougongjili3]
mov [rax],rbx
pop rbx
pop rax
@@:

cmp [zuoshougongjili1],1 //左手武器物理攻击力
jne @F
push rax
mov rax,[zuoshougongjili2]
cmp rax,0
pop rax
je @F
push rax
push rbx
mov rax,[zuoshougongjili2]
mov rbx,[zuoshougongjili3]
mov [rax],rbx
pop rbx
pop rax
@@:

ret1:
mov ecx,#5000
call KERNEL32.Sleep
//call sleep
jmp newmem02231249

//ret2:
//ret
}
[DISABLE]
{
newmem02231249:
ret
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>134</ID>
                  <Description>"//开启战斗修改"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : eldenring.exe
  Version:
  Date   : 2022-02-22
  Author : admin

  This script does blah blah blah
}

[ENABLE]
aobscanmodule(INJECT02221334,eldenring.exe,03 81 38 01 00 00) // should be unique
alloc(newmem,$1000,INJECT02221334)

label(code)
label(return)
globalalloc(ram1,256)
//registersymbol(ram1)
//alloc(ram1,256)
//registersymbol(ram01)
//alloc(ram01,256)
globalalloc(ram01,256)
//registersymbol(ram02221113)
//alloc(ram02221113,256)

newmem:
push r8
push rdx
cmp [zhandou1],1
je @F
mov r8,INJECT02221334
mov [zhandou2],r8
mov rdx,[r8]
mov [zhandou3],rdx
mov [zhandou1],1
@@:
pop rdx
pop r8

mov [ram1],rcx
push r8
cmp [ram01],1 //生命
jne @f
mov [rcx+138],#524287 //当前生命
mov [rcx+140],#524287 //生命上限
@@:
cmp [ram01+C],1 //生命自动回复
jne @F
mov r8d,[rcx+00000140]
mov [rcx+138],r8d
@@:
cmp [ram01+4],1 //魔力
jne @f
mov r8d,[rcx+14C]
mov [rcx+144],r8d
@@:
cmp [ram01+8],1 //体力
jne @f
mov r8d,[rcx+158]
mov [rcx+150],r8d
code:
pop r8
  add eax,[rcx+00000138]
  jmp return

INJECT02221334:
  jmp newmem
  nop
return:
registersymbol(INJECT02221334)

[DISABLE]
INJECT02221334:
  db 03 81 38 01 00 00
unregistersymbol(INJECT02221334)
dealloc(newmem)

zhandou1:
dd 0

//unregistersymbol(ram02221113)
//dealloc(ram02221113)
//unregistersymbol(ram01)
//dealloc(ram01)
//unregistersymbol(ram1)
//dealloc(ram1)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+4285A8

eldenring.exe+42857F: C3                       - ret
eldenring.exe+428580: 66 0F 6E 81 38 01 00 00  - movd xmm0,[rcx+00000138]
eldenring.exe+428588: 66 0F 6E 89 3C 01 00 00  - movd xmm1,[rcx+0000013C]
eldenring.exe+428590: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
eldenring.exe+428593: 0F 5B C9                 - cvtdq2ps xmm1,xmm1
eldenring.exe+428596: F3 0F 5E C1              - divss xmm0,xmm1
eldenring.exe+42859A: C3                       - ret
eldenring.exe+42859B: CC                       - int 3
eldenring.exe+42859C: 48 8B 5C 24 F3           - mov rbx,[rsp-0D]
eldenring.exe+4285A1: 0F 2C 81 5C 01 00 00     - cvttps2pi mm0,[rcx+0000015C]
// ---------- INJECTING HERE ----------
eldenring.exe+4285A8: 03 81 38 01 00 00        - add eax,[rcx+00000138]
// ---------- DONE INJECTING  ----------
eldenring.exe+4285AE: C3                       - ret
eldenring.exe+4285AF: CC                       - int 3
eldenring.exe+4285B0: 8B 41 78                 - mov eax,[rcx+78]
eldenring.exe+4285B3: 89 02                    - mov [rdx],eax
eldenring.exe+4285B5: 48 8B C2                 - mov rax,rdx
eldenring.exe+4285B8: C3                       - ret
eldenring.exe+4285B9: 6A 18                    - push 18
eldenring.exe+4285BB: E9 2B 56 85 00           - jmp eldenring.exe+C7DBEB
eldenring.exe+4285C0: 48 8B 81 88 00 00 00     - mov rax,[rcx+00000088]
eldenring.exe+4285C7: C3                       - ret
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>15</ID>
              <Description>"//hp"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-22
  Author : ali213

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(INJECT,eldenring.exe,24 48 8B 08 66 0F 6E 89 38 01 00 00) // should be unique
alloc(newmem,$1000,INJECT)
label(infhp)

{registersymbol(ram1)
alloc(ram1,256)

registersymbol(ram2)
alloc(ram2,256)

registersymbol(ram3)
alloc(ram3,256)
}
globalalloc(ram1,256)
globalalloc(ram2,256)
globalalloc(ram3,256)
label(code)
label(return)

newmem:
cmp [ram2],1
je infhp
push rax
push rbx
mov rax,INJECT+4
mov [ram3],rax
mov rbx,[rax]

mov [ram1],rbx

mov [ram2],1
pop rbx
pop rax

infhp:

push rax
mov eax,[rcx+00000140]
mov [rcx+00000138],eax
pop rax

code:
  movd xmm1,[rcx+00000138]
  jmp return

INJECT+04:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT+04:
  db 66 0F 6E 89 38 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)

ram2:
dd 0

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+588BD2

eldenring.exe+588BA6: E8 45 E5 E5 FF           - call eldenring.exe+3E70F0
eldenring.exe+588BAB: 84 C0                    - test al,al
eldenring.exe+588BAD: 0F 84 D2 00 00 00        - je eldenring.exe+588C85
eldenring.exe+588BB3: 85 F6                    - test esi,esi
eldenring.exe+588BB5: 0F 85 CA 00 00 00        - jne eldenring.exe+588C85
eldenring.exe+588BBB: 8D 56 0E                 - lea edx,[rsi+0E]
eldenring.exe+588BBE: E9 9D 00 00 00           - jmp eldenring.exe+588C60
eldenring.exe+588BC3: 48 8B 80 90 01 00 00     - mov rax,[rax+00000190]
eldenring.exe+588BCA: F3 0F 10 53 24           - movss xmm2,[rbx+24]
eldenring.exe+588BCF: 48 8B 08                 - mov rcx,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+588BD2: 66 0F 6E 89 38 01 00 00  - movd xmm1,[rcx+00000138]
// ---------- DONE INJECTING  ----------
eldenring.exe+588BDA: 66 0F 6E 81 3C 01 00 00  - movd xmm0,[rcx+0000013C]
eldenring.exe+588BE2: 0F 5B C9                 - cvtdq2ps xmm1,xmm1
eldenring.exe+588BE5: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
eldenring.exe+588BE8: F3 0F 5E C8              - divss xmm1,xmm0
eldenring.exe+588BEC: 0F 2F D1                 - comiss xmm2,xmm1
eldenring.exe+588BEF: 0F 82 90 00 00 00        - jb eldenring.exe+588C85
eldenring.exe+588BF5: 85 F6                    - test esi,esi
eldenring.exe+588BF7: 74 62                    - je eldenring.exe+588C5B
eldenring.exe+588BF9: 0F 57 C0                 - xorps xmm0,xmm0
eldenring.exe+588BFC: 0F 2F C2                 - comiss xmm0,xmm2
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>198</ID>
                  <Description>"//创建线程"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
globalalloc(newmem,1000)
label(ret1)

newmem:
push rax
mov rax,[ram2]
cmp rax,1
pop rax
jne ret1

push rax
mov rax,[ram3]
cmp rax,0
pop rax
je ret1
push rax
push rbx
mov rax,[ram3]
mov rbx,[ram1]
mov [rax],rbx

pop rbx
pop rax


ret1:
jmp newmem


CreateThread(newmem)

[DISABLE]
newmem:
ret
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>199</ID>
                  <Description>"//用来测试"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(INJECT1,eldenring.exe,0F 5B C0 F3 0F 5E C8 0F 2F D1 0F) // should be unique
alloc(newmem,$1000,INJECT1)

label(code)
label(return)

newmem:

code:
  cvtdq2ps xmm0,xmm0
  divss xmm1,xmm0
  jmp return

INJECT1:
  jmp newmem
  nop 2
return:
registersymbol(INJECT1)

[DISABLE]

INJECT1:
  db 0F 5B C0 F3 0F 5E C8

unregistersymbol(INJECT1)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+588BE5

eldenring.exe+588BB5: 0F 85 CA 00 00 00        - jne eldenring.exe+588C85
eldenring.exe+588BBB: 8D 56 0E                 - lea edx,[rsi+0E]
eldenring.exe+588BBE: E9 9D 00 00 00           - jmp eldenring.exe+588C60
eldenring.exe+588BC3: 48 8B 80 90 01 00 00     - mov rax,[rax+00000190]
eldenring.exe+588BCA: F3 0F 10 53 24           - movss xmm2,[rbx+24]
eldenring.exe+588BCF: 48 8B 08                 - mov rcx,[rax]
eldenring.exe+588BD2: E9 29 74 A6 FF           - jmp 13FFF0000
eldenring.exe+588BD7: 0F 1F 00                 - nop dword ptr [rax]
eldenring.exe+588BDA: 66 0F 6E 81 3C 01 00 00  - movd xmm0,[rcx+0000013C]
eldenring.exe+588BE2: 0F 5B C9                 - cvtdq2ps xmm1,xmm1
// ---------- INJECTING HERE ----------
eldenring.exe+588BE5: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
// ---------- DONE INJECTING  ----------
eldenring.exe+588BE8: F3 0F 5E C8              - divss xmm1,xmm0
eldenring.exe+588BEC: 0F 2F D1                 - comiss xmm2,xmm1
eldenring.exe+588BEF: 0F 82 90 00 00 00        - jb eldenring.exe+588C85
eldenring.exe+588BF5: 85 F6                    - test esi,esi
eldenring.exe+588BF7: 74 62                    - je eldenring.exe+588C5B
eldenring.exe+588BF9: 0F 57 C0                 - xorps xmm0,xmm0
eldenring.exe+588BFC: 0F 2F C2                 - comiss xmm0,xmm2
eldenring.exe+588BFF: 72 5A                    - jb eldenring.exe+588C5B
eldenring.exe+588C01: 48 8D 7B 48              - lea rdi,[rbx+48]
eldenring.exe+588C05: 48 8B CB                 - mov rcx,rbx
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"//代码还原 首先"</Description>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-22
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02221415,eldenring.exe,C3 48 8B 45 28 0F B6 00 48 8B 55 20 0F B7 52 1C 48) // should be unique
alloc(newmem,$1000,INJECT02221415)

label(code)
label(return)

newmem:

code:
  movzx eax,byte ptr [rax]
  mov rdx,[rbp+20]
  jmp return

INJECT02221415+05:
  jmp newmem
  nop 2
return:
registersymbol(INJECT02221415)

[DISABLE]

INJECT02221415+05:
  db 0F B6 00 48 8B 55 20

unregistersymbol(INJECT02221415)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+4F2D59B

eldenring.exe+4F2D570: E9 99 0D 06 FD        - jmp eldenring.exe+1F8E30E
eldenring.exe+4F2D575: 48 89 6C 24 F8        - mov [rsp-08],rbp
eldenring.exe+4F2D57A: 48 8D 64 24 F8        - lea rsp,[rsp-08]
eldenring.exe+4F2D57F: 48 8D 2D D1 F3 9F FB  - lea rbp,[eldenring.exe+92C957]
eldenring.exe+4F2D586: 48 87 2C 24           - xchg [rsp],rbp
eldenring.exe+4F2D58A: 55                    - push rbp
eldenring.exe+4F2D58B - 48 8D 2D B823E0FF     - lea rbp,[eldenring.exe+4D2F94A] //"ARWAQQRAWAUSAPASAVVATPH
eldenring.exe+4F2D592: 48 87 2C 24           - xchg [rsp],rbp
eldenring.exe+4F2D596: C3                    - ret 
eldenring.exe+4F2D597: 48 8B 45 28           - mov rax,[rbp+28]
// ---------- INJECTING HERE ----------
eldenring.exe+4F2D59B: 0F B6 00              - movzx eax,byte ptr [rax]
// ---------- DONE INJECTING  ----------
eldenring.exe+4F2D59E: 48 8B 55 20           - mov rdx,[rbp+20]
eldenring.exe+4F2D5A2: 0F B7 52 1C           - movzx edx,word ptr [rdx+1C]
eldenring.exe+4F2D5A6: 48 0F BF D2           - movsx rdx,dx
eldenring.exe+4F2D5AA: 48 63 D2              - movsxd  rdx,edx
eldenring.exe+4F2D5AD: 48 8B 4D 20           - mov rcx,[rbp+20]
eldenring.exe+4F2D5B1: 88 44 0A 1E           - mov [rdx+rcx+1E],al
eldenring.exe+4F2D5B5: 48 8B 45 20           - mov rax,[rbp+20]
eldenring.exe+4F2D5B9: E9 30 42 B0 FF        - jmp eldenring.exe+4A317EE
eldenring.exe+4F2D5BE: 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+4F2D5C3: 48 8D 64 24 08        - lea rsp,[rsp+08]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>44</ID>
              <Description>"//代码还原 其次 //这个运行完代码还原"</Description>
              <Color>0000FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-22
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02221415,eldenring.exe,01 FD 48 8B 45 18 48 8B 55 10 8B 00 89 02 8B 45 20) // should be unique
alloc(newmem,$1000,INJECT02221415)

label(code)
label(return)

newmem:

code:
  mov [rdx],eax
  mov eax,[rbp+20]
  jmp return

INJECT02221415+0C:
  jmp newmem
return:
registersymbol(INJECT02221415)

[DISABLE]

INJECT02221415+0C:
  db 89 02 8B 45 20

unregistersymbol(INJECT02221415)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+4E127B3

eldenring.exe+4E1261E - 4C 8D 05 1BE81BFE     - lea r8,[eldenring.exe+2FD0E40] //"Tried to create container with incompatible heap."
eldenring.exe+4E12625 - BA 3E000000           - mov edx,0000003E
eldenring.exe+4E1262A - 33 C9                 - xor ecx,ecx
eldenring.exe+4E1262C - E9 4D747BFD           - jmp eldenring.exe+25C9A7E
eldenring.exe+4E12631 - 4C 8B 03              - mov r8,[rbx]
eldenring.exe+4E12634 - 56                    - push rsi
eldenring.exe+4E12635 - 5A                    - pop rdx
eldenring.exe+4E12636 - 48 89 5C 24 F8        - mov [rsp-08],rbx
eldenring.exe+4E1263B - 48 8D 64 24 F8        - lea rsp,[rsp-08]
eldenring.exe+4E12640 - 48 8B 0C 24           - mov rcx,[rsp]
eldenring.exe+4E12644 - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+4E12649 - E9 CF5178FD           - jmp eldenring.exe+259781D
eldenring.exe+4E1264E - 4C 8D 05 3B553AFE     - lea r8,[eldenring.exe+31B7B90] //"DLReferenceCountObject: Invalid Unref() call. m_nRefCount is 0 "
eldenring.exe+4E12655 - BA 3E000000           - mov edx,0000003E
eldenring.exe+4E1265A - 33 C9                 - xor ecx,ecx
eldenring.exe+4E1265C - E9 74C318FD           - jmp eldenring.exe+1F9E9D5
eldenring.exe+4E12661 - 48 8B 45 30           - mov rax,[rbp+30]
eldenring.exe+4E12665 - 8B 55 00              - mov edx,[rbp+00]
eldenring.exe+4E12668 - 89 10                 - mov [rax],edx
eldenring.exe+4E1266A - 48 8B 45 30           - mov rax,[rbp+30]
eldenring.exe+4E1266E - 8B 55 04              - mov edx,[rbp+04]
eldenring.exe+4E12671 - 89 50 04              - mov [rax+04],edx
eldenring.exe+4E12674 - 48 8D 65 20           - lea rsp,[rbp+20]
eldenring.exe+4E12678 - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+4E1267D - 48 8B 6C 24 F8        - mov rbp,[rsp-08]
eldenring.exe+4E12682 - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+4E12687 - E9 5E7970FB           - jmp eldenring.exe+519FEA
eldenring.exe+4E1268C - 48 8D 8A 70000000     - lea rcx,[rdx+00000070]
eldenring.exe+4E12693 - 48 8D 64 24 F8        - lea rsp,[rsp-08]
eldenring.exe+4E12698 - 48 89 2C 24           - mov [rsp],rbp
eldenring.exe+4E1269C - 48 8D 2D 1DA330FB     - lea rbp,[eldenring.exe+11C9C0]
eldenring.exe+4E126A3 - 48 87 2C 24           - xchg [rsp],rbp
eldenring.exe+4E126A7 - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+4E126AC - FF 64 24 F8           - jmp qword ptr [rsp-08]
eldenring.exe+4E126B0 - 48 8B 45 20           - mov rax,[rbp+20]
eldenring.exe+4E126B4 - 8B 40 64              - mov eax,[rax+64]
eldenring.exe+4E126B7 - 48 8D 65 10           - lea rsp,[rbp+10]
eldenring.exe+4E126BB - 48 8B 2C 24           - mov rbp,[rsp]
eldenring.exe+4E126BF - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+4E126C4 - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+4E126C9 - FF 64 24 F8           - jmp qword ptr [rsp-08]
eldenring.exe+4E126CD - 48 8B 53 08           - mov rdx,[rbx+08]
eldenring.exe+4E126D1 - 48 8B 7B 10           - mov rdi,[rbx+10]
eldenring.exe+4E126D5 - 48 2B FA              - sub rdi,rdx
eldenring.exe+4E126D8 - 48 C1 FF 03           - sar rdi,03
eldenring.exe+4E126DC - 48 85 D2              - test rdx,rdx
eldenring.exe+4E126DF - 48 8D 64 24 F8        - lea rsp,[rsp-08]
eldenring.exe+4E126E4 - 48 89 2C 24           - mov [rsp],rbp
eldenring.exe+4E126E8 - 48 BD EC55C74001000000 - mov rbp,eldenring.exe+C755EC
eldenring.exe+4E126F2 - 48 87 2C 24           - xchg [rsp],rbp
eldenring.exe+4E126F6 - 48 89 44 24 F8        - mov [rsp-08],rax
eldenring.exe+4E126FB - 48 8D 64 24 F8        - lea rsp,[rsp-08]
eldenring.exe+4E12700 - 48 8D 64 24 F8        - lea rsp,[rsp-08]
eldenring.exe+4E12705 - 48 89 0C 24           - mov [rsp],rcx
eldenring.exe+4E12709 - 48 8B 44 24 10        - mov rax,[rsp+10]
eldenring.exe+4E1270E - 48 B9 F555C74001000000 - mov rcx,eldenring.exe+C755F5
eldenring.exe+4E12718 - 48 0F44 C1            - cmove rax,rcx
eldenring.exe+4E1271C - 48 89 44 24 10        - mov [rsp+10],rax
eldenring.exe+4E12721 - 48 8B 0C 24           - mov rcx,[rsp]
eldenring.exe+4E12725 - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+4E1272A - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+4E1272F - 48 8B 44 24 F8        - mov rax,[rsp-08]
eldenring.exe+4E12734 - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+4E12739 - FF 64 24 F8           - jmp qword ptr [rsp-08]
eldenring.exe+4E1273D - E9 AA2EE6FB           - jmp eldenring.exe+C755EC
eldenring.exe+4E12742 - 48 85 DB              - test rbx,rbx
eldenring.exe+4E12745 - 48 8D 64 24 F8        - lea rsp,[rsp-08]
eldenring.exe+4E1274A - 48 89 2C 24           - mov [rsp],rbp
eldenring.exe+4E1274E - 48 BD C8CCE24101000000 - mov rbp,eldenring.exe+1E2CCC8
eldenring.exe+4E12758 - 48 87 2C 24           - xchg [rsp],rbp
eldenring.exe+4E1275C - 48 89 54 24 F8        - mov [rsp-08],rdx
eldenring.exe+4E12761 - 48 8D 64 24 F8        - lea rsp,[rsp-08]
eldenring.exe+4E12766 - 48 89 5C 24 F8        - mov [rsp-08],rbx
eldenring.exe+4E1276B - 48 8D 64 24 F8        - lea rsp,[rsp-08]
eldenring.exe+4E12770 - 48 8B 54 24 10        - mov rdx,[rsp+10]
eldenring.exe+4E12775 - 48 BB 08CDE24101000000 - mov rbx,eldenring.exe+1E2CD08
eldenring.exe+4E1277F - 48 0F44 D3            - cmove rdx,rbx
eldenring.exe+4E12783 - 48 89 54 24 10        - mov [rsp+10],rdx
eldenring.exe+4E12788 - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+4E1278D - 48 8B 5C 24 F8        - mov rbx,[rsp-08]
eldenring.exe+4E12792 - 48 8B 14 24           - mov rdx,[rsp]
eldenring.exe+4E12796 - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+4E1279B - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+4E127A0 - FF 64 24 F8           - jmp qword ptr [rsp-08]
eldenring.exe+4E127A4 - E9 1FA501FD           - jmp eldenring.exe+1E2CCC8
eldenring.exe+4E127A9 - 48 8B 45 18           - mov rax,[rbp+18]
eldenring.exe+4E127AD - 48 8B 55 10           - mov rdx,[rbp+10]
eldenring.exe+4E127B1 - 8B 00                 - mov eax,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+4E127B3: 89 02           - mov [rdx],eax
// ---------- DONE INJECTING  ----------
eldenring.exe+4E127B5: 8B 45 20        - mov eax,[rbp+20]
eldenring.exe+4E127B8: 83 C0 FC        - add eax,-04
eldenring.exe+4E127BB: 89 45 20        - mov [rbp+20],eax
eldenring.exe+4E127BE: 48 8B 45 10     - mov rax,[rbp+10]
eldenring.exe+4E127C2: 48 83 C0 04     - add rax,04
eldenring.exe+4E127C6: 48 89 45 10     - mov [rbp+10],rax
eldenring.exe+4E127CA: 48 8B 45 18     - mov rax,[rbp+18]
eldenring.exe+4E127CE: 48 83 C0 04     - add rax,04
eldenring.exe+4E127D2: 48 89 45 18     - mov [rbp+18],rax
eldenring.exe+4E127D6: 8B 45 20        - mov eax,[rbp+20]
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>56</ID>
          <Description>"//定时启用脚本.txt 文件"</Description>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>53</ID>
              <Description>"//stamms"</Description>
              <Color>0000FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02230935,eldenring.exe,03 81 38 01 00 00 C3) // should be unique
alloc(newmem,$1000,INJECT02230935)

label(code)
label(return)

newmem:

code:
  add eax,[rcx+00000138]
  jmp return

INJECT02230935:
  jmp newmem
  nop
return:
registersymbol(INJECT02230935)

[DISABLE]

INJECT02230935:
  db 03 81 38 01 00 00

unregistersymbol(INJECT02230935)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+4285A8

eldenring.exe+42857F: C3                       - ret 
eldenring.exe+428580: 66 0F 6E 81 38 01 00 00  - movd xmm0,[rcx+00000138]
eldenring.exe+428588: 66 0F 6E 89 3C 01 00 00  - movd xmm1,[rcx+0000013C]
eldenring.exe+428590: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
eldenring.exe+428593: 0F 5B C9                 - cvtdq2ps xmm1,xmm1
eldenring.exe+428596: F3 0F 5E C1              - divss xmm0,xmm1
eldenring.exe+42859A: C3                       - ret 
eldenring.exe+42859B: CC                       - int 3 
eldenring.exe+42859C: 48 8B 5C 24 F3           - mov rbx,[rsp-0D]
eldenring.exe+4285A1: 0F 2C 81 5C 01 00 00     - cvttps2pi mm0,[rcx+0000015C] //1404285A1
// ---------- INJECTING HERE ----------
eldenring.exe+4285A8: 03 81 38 01 00 00        - add eax,[rcx+00000138]
// ---------- DONE INJECTING  ----------
eldenring.exe+4285AE: C3                       - ret //1404285AE
eldenring.exe+4285AF: CC                       - int 3 
eldenring.exe+4285B0: 8B 41 78                 - mov eax,[rcx+78]
eldenring.exe+4285B3: 89 02                    - mov [rdx],eax
eldenring.exe+4285B5: 48 8B C2                 - mov rax,rdx
eldenring.exe+4285B8: C3                       - ret 
eldenring.exe+4285B9: 6A 18                    - push 18
eldenring.exe+4285BB: E9 2B 56 85 00           - jmp eldenring.exe+C7DBEB
eldenring.exe+4285C0: 48 8B 81 88 00 00 00     - mov rax,[rcx+00000088]
eldenring.exe+4285C7: C3                       - ret 
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"//卢恩 即经验值"</Description>
          <Color>808080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"eldenring.exe"+255010) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov r8d,[rcx+6C]
xor r10d,r10d

exit:
jmp returnhere

"eldenring.exe"+255010:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"eldenring.exe"+255010:
mov r8d,[rcx+6C]
xor r10d,r10d
//Alt: db 44 8B 41 6C 45 33 D2
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>0</ID>
          <Description>"//生命/魔力/体力修改 //有时不使用"</Description>
          <Color>808080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-22
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02221035,eldenring.exe,24 48 8B 08 66 0F 6E 89 38 01 00 00) // should be unique
alloc(newmem,$1000,INJECT02221035)

label(code)
label(return)
registersymbol(ram1)
alloc(ram1,256)
registersymbol(ram01)
alloc(ram01,256)
registersymbol(ram02221113)
alloc(ram02221113,256)
newmem:
mov [ram1],rcx
push r15
cmp [ram01],1 //生命
jne @f
mov [rcx+138],#524287 //当前生命
mov [rcx+140],#524287 //生命上限
@@:
cmp [ram01+C],1 //生命自动回复
jne @F
mov r15d,[rcx+00000140]
mov [rcx+138],r15d
//@@:
//cmp [ram01+4],1 //魔力 //有时无法生效
//jne @f
//mov r15d,[rcx+14C]
//mov [rcx+144],r15d
//@@:
//cmp [ram01+8],1 //体力
//jne @f
//mov r15d,[rcx+158]
//mov [rcx+150],r15d
@@:
pop r15
code:
  movd xmm1,[rcx+00000138]
  jmp return

INJECT02221035+04:
  jmp newmem
  nop 3
return:
registersymbol(INJECT02221035)

[DISABLE]

INJECT02221035+04:
  db 66 0F 6E 89 38 01 00 00

unregistersymbol(INJECT02221035)
dealloc(newmem)
unregistersymbol(ram1)
dealloc(ram1)
unregistersymbol(ram01)
dealloc(ram01)
unregistersymbol(ram02221113)
dealloc(ram02221113)
{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+588BD2

eldenring.exe+588BA6: E8 45 E5 E5 FF           - call eldenring.exe+3E70F0
eldenring.exe+588BAB: 84 C0                    - test al,al
eldenring.exe+588BAD: 0F 84 D2 00 00 00        - je eldenring.exe+588C85
eldenring.exe+588BB3: 85 F6                    - test esi,esi
eldenring.exe+588BB5: 0F 85 CA 00 00 00        - jne eldenring.exe+588C85
eldenring.exe+588BBB: 8D 56 0E                 - lea edx,[rsi+0E]
eldenring.exe+588BBE: E9 9D 00 00 00           - jmp eldenring.exe+588C60
eldenring.exe+588BC3: 48 8B 80 90 01 00 00     - mov rax,[rax+00000190]
eldenring.exe+588BCA: F3 0F 10 53 24           - movss xmm2,[rbx+24]
eldenring.exe+588BCF: 48 8B 08                 - mov rcx,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+588BD2: 66 0F 6E 89 38 01 00 00  - movd xmm1,[rcx+00000138]
// ---------- DONE INJECTING  ----------
eldenring.exe+588BDA: 66 0F 6E 81 3C 01 00 00  - movd xmm0,[rcx+0000013C]
eldenring.exe+588BE2: 0F 5B C9                 - cvtdq2ps xmm1,xmm1
eldenring.exe+588BE5: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
eldenring.exe+588BE8: F3 0F 5E C8              - divss xmm1,xmm0
eldenring.exe+588BEC: 0F 2F D1                 - comiss xmm2,xmm1
eldenring.exe+588BEF: 0F 82 90 00 00 00        - jb eldenring.exe+588C85
eldenring.exe+588BF5: 85 F6                    - test esi,esi
eldenring.exe+588BF7: 74 62                    - je eldenring.exe+588C5B
eldenring.exe+588BF9: 0F 57 C0                 - xorps xmm0,xmm0
eldenring.exe+588BFC: 0F 2F C2                 - comiss xmm0,xmm2
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>200</ID>
              <Description>"//体力修改"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-22
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02221200,eldenring.exe,8B 89 50 01 00 00 48 83) // should be unique
alloc(newmem3,$1000,INJECT02221200)

label(code3)
label(return3)

newmem3:
cmp [ram1],rdi
jne code3
cmp [ram01+8],1 //体力
jne @F
mov [rcx+00000150],edx
code3:
  mov ecx,[rcx+00000150]
  jmp return3

INJECT02221200:
  jmp newmem3
  nop
return3:
registersymbol(INJECT02221200)

[DISABLE]

INJECT02221200:
  db 8B 89 50 01 00 00

unregistersymbol(INJECT02221200)
dealloc(newmem3)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+62B911

eldenring.exe+62B8E0: 40 53                    - push rbx
eldenring.exe+62B8E2: 48 83 EC 20              - sub rsp,20
eldenring.exe+62B8E6: 48 8B D9                 - mov rbx,rcx
eldenring.exe+62B8E9: 48 8B 89 78 01 00 00     - mov rcx,[rcx+00000178]
eldenring.exe+62B8F0: E8 7B 42 EB FF           - call eldenring.exe+4DFB70
eldenring.exe+62B8F5: 48 8B 83 90 01 00 00     - mov rax,[rbx+00000190]
eldenring.exe+62B8FC: F3 0F 10 15 24 C5 3F 03  - movss xmm2,[eldenring.exe+3A27E28]
eldenring.exe+62B904: F3 0F 58 D0              - addss xmm2,xmm0
eldenring.exe+62B908: 48 8B 08                 - mov rcx,[rax]
eldenring.exe+62B90B: 8B 91 54 01 00 00        - mov edx,[rcx+00000154]
// ---------- INJECTING HERE ----------
eldenring.exe+62B911: 8B 89 50 01 00 00        - mov ecx,[rcx+00000150]
// ---------- DONE INJECTING  ----------
eldenring.exe+62B917: 48 83 C4 20              - add rsp,20
eldenring.exe+62B91B: 5B                       - pop rbx
eldenring.exe+62B91C: E9 0F E3 02 00           - jmp eldenring.exe+659C30
eldenring.exe+62B921: 48 8B 0B                 - mov rcx,[rbx]
eldenring.exe+62B924: 48 8B 01                 - mov rax,[rcx]
eldenring.exe+62B927: 48 8B 53 08              - mov rdx,[rbx+08]
eldenring.exe+62B92B: E9 85 3B 65 00           - jmp eldenring.exe+C7F4B5
eldenring.exe+62B930: 40 53                    - push rbx
eldenring.exe+62B932: 48 83 EC 20              - sub rsp,20
eldenring.exe+62B936: 48 8B 01                 - mov rax,[rcx]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>201</ID>
              <Description>"//魔力修改"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-22
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02221159,eldenring.exe,8B 97 44 01 00 00 85) // should be unique
alloc(newmem2,$1000,INJECT02221159)

label(code2)
label(return2)

newmem2:
cmp [ram1],rdi
jne code2
cmp [ram01+4],1 //魔力
jne @F
mov edx,[rdi+14C]
mov [rdi+144],edx
code2:
  mov edx,[rdi+00000144]
  jmp return2

INJECT02221159:
  jmp newmem2
  nop
return2:
registersymbol(INJECT02221159)

[DISABLE]

INJECT02221159:
  db 8B 97 44 01 00 00

unregistersymbol(INJECT02221159)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+428E33

eldenring.exe+428E08: 33 D2                    - xor edx,edx
eldenring.exe+428E0A: 48 8B C8                 - mov rcx,rax
eldenring.exe+428E0D: 4C 8B F0                 - mov r14,rax
eldenring.exe+428E10: 0F 5B F6                 - cvtdq2ps xmm6,xmm6
eldenring.exe+428E13: E8 38 BB 0B 00           - call eldenring.exe+4E4950
eldenring.exe+428E18: 48 8B 5C 24 50           - mov rbx,[rsp+50]
eldenring.exe+428E1D: C7 44 24 60 00 00 00 00  - mov [rsp+60],00000000
eldenring.exe+428E25: F3 0F 59 C6              - mulss xmm0,xmm6
eldenring.exe+428E29: F3 0F 2C C8              - cvttss2si ecx,xmm0
eldenring.exe+428E2D: 89 8F 48 01 00 00        - mov [rdi+00000148],ecx
// ---------- INJECTING HERE ----------
eldenring.exe+428E33: 8B 97 44 01 00 00        - mov edx,[rdi+00000144]
// ---------- DONE INJECTING  ----------
eldenring.exe+428E39: 85 D2                    - test edx,edx
eldenring.exe+428E3B: 79 07                    - jns eldenring.exe+428E44
eldenring.exe+428E3D: 48 8D 44 24 60           - lea rax,[rsp+60]
eldenring.exe+428E42: EB 14                    - jmp eldenring.exe+428E58
eldenring.exe+428E44: 3B D1                    - cmp edx,ecx
eldenring.exe+428E46: B8 44 01 00 00           - mov eax,00000144
eldenring.exe+428E4B: 41 B8 48 01 00 00        - mov r8d,00000148
eldenring.exe+428E51: 41 0F 4F C0              - cmovg eax,r8d
eldenring.exe+428E55: 48 03 C7                 - add rax,rdi
eldenring.exe+428E58: 8B 00                    - mov eax,[rax]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>39</ID>
              <Description>"//生命 有时不使用"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version:
  Date   : 2022-02-22
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02221304,eldenring.exe,24 48 8B 08 66 0F 6E 89 38 01 00 00) // should be unique
alloc(newmem,$1000,INJECT02221304)

label(code)
label(return)
registersymbol(ram1)
alloc(ram1,256)
registersymbol(ram01)
alloc(ram01,256)
registersymbol(ram02221113)
alloc(ram02221113,256)
newmem:
mov [ram1],rcx
push r15
cmp [ram01],1 //生命
jne @f
mov [rcx+138],#524287 //当前生命
mov [rcx+140],#524287 //生命上限
@@:
cmp [ram01+C],1 //生命自动回复
jne @F
mov r15d,[rcx+00000140]
mov [rcx+138],r15d
@@:
cmp [ram01+4],1 //魔力
jne @f
mov r15d,[rcx+14C]
mov [rcx+144],r15d
@@:
cmp [ram01+8],1 //体力
jne @f
mov r15d,[rcx+158]
mov [rcx+150],r15d
code:
pop r15
  movd xmm1,[rcx+00000138]
  jmp return

INJECT02221304+04:
  jmp newmem
  nop 3
return:
registersymbol(INJECT02221304)

[DISABLE]

INJECT02221304+04:
  db 66 0F 6E 89 38 01 00 00

unregistersymbol(INJECT02221304)
dealloc(newmem)
unregistersymbol(ram1)
dealloc(ram1)
unregistersymbol(ram01)
dealloc(ram01)
unregistersymbol(ram02221113)
dealloc(ram02221113)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+588BD2

eldenring.exe+588BA6: E8 45 E5 E5 FF           - call eldenring.exe+3E70F0
eldenring.exe+588BAB: 84 C0                    - test al,al
eldenring.exe+588BAD: 0F 84 D2 00 00 00        - je eldenring.exe+588C85
eldenring.exe+588BB3: 85 F6                    - test esi,esi
eldenring.exe+588BB5: 0F 85 CA 00 00 00        - jne eldenring.exe+588C85
eldenring.exe+588BBB: 8D 56 0E                 - lea edx,[rsi+0E]
eldenring.exe+588BBE: E9 9D 00 00 00           - jmp eldenring.exe+588C60
eldenring.exe+588BC3: 48 8B 80 90 01 00 00     - mov rax,[rax+00000190]
eldenring.exe+588BCA: F3 0F 10 53 24           - movss xmm2,[rbx+24]
eldenring.exe+588BCF: 48 8B 08                 - mov rcx,[rax]
// ---------- INJECTING HERE ----------
eldenring.exe+588BD2: 66 0F 6E 89 38 01 00 00  - movd xmm1,[rcx+00000138]
// ---------- DONE INJECTING  ----------
eldenring.exe+588BDA: 66 0F 6E 81 3C 01 00 00  - movd xmm0,[rcx+0000013C]
eldenring.exe+588BE2: 0F 5B C9                 - cvtdq2ps xmm1,xmm1
eldenring.exe+588BE5: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
eldenring.exe+588BE8: F3 0F 5E C8              - divss xmm1,xmm0
eldenring.exe+588BEC: 0F 2F D1                 - comiss xmm2,xmm1
eldenring.exe+588BEF: 0F 82 90 00 00 00        - jb eldenring.exe+588C85
eldenring.exe+588BF5: 85 F6                    - test esi,esi
eldenring.exe+588BF7: 74 62                    - je eldenring.exe+588C5B
eldenring.exe+588BF9: 0F 57 C0                 - xorps xmm0,xmm0
eldenring.exe+588BFC: 0F 2F C2                 - comiss xmm0,xmm2
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>40</ID>
              <Description>"//生命 开始新游戏/加载有时错误"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version:
  Date   : 2022-02-22
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02221320,eldenring.exe,8B 88 38 01 00 00 89 8E) // should be unique
alloc(newmem,$1000,INJECT02221320)

label(code)
label(return)
registersymbol(ram1)
alloc(ram1,256)
registersymbol(ram01)
alloc(ram01,256)
registersymbol(ram02221113)
alloc(ram02221113,256)
newmem:
mov [ram1],rax
push rcx
cmp [ram01],1 //生命
jne @f
mov [rax+138],#524287 //当前生命
mov [rax+140],#524287 //生命上限
@@:
cmp [ram01+C],1 //生命自动回复
jne @F
mov ecx,[rax+00000140]
mov [rax+138],ecx
@@:
cmp [ram01+4],1 //魔力
jne @f
mov ecx,[rax+14C]
mov [rax+144],ecx
@@:
cmp [ram01+8],1 //体力
jne @f
mov ecx,[rax+158]
mov [rax+150],ecx
code:
pop rcx
  mov ecx,[rax+00000138]
  jmp return

INJECT02221320:
  jmp newmem
  nop
return:
registersymbol(INJECT02221320)

[DISABLE]

INJECT02221320:
  db 8B 88 38 01 00 00

unregistersymbol(INJECT02221320)
dealloc(newmem)
unregistersymbol(ram1)
dealloc(ram1)
unregistersymbol(ram01)
dealloc(ram01)
unregistersymbol(ram02221113)
dealloc(ram02221113)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+73D8E1

eldenring.exe+73D8A7: 48 85 C0                 - test rax,rax
eldenring.exe+73D8AA: 0F 84 49 16 00 00        - je eldenring.exe+73EEF9
eldenring.exe+73D8B0: C6 86 80 00 00 00 01     - mov byte ptr [rsi+00000080],01
eldenring.exe+73D8B7: C6 86 90 00 00 00 01     - mov byte ptr [rsi+00000090],01
eldenring.exe+73D8BE: BA C1 01 00 00           - mov edx,000001C1
eldenring.exe+73D8C3: 49 8B 8C 24 78 01 00 00  - mov rcx,[r12+00000178]
eldenring.exe+73D8CB: E8 20 48 DA FF           - call eldenring.exe+4E20F0
eldenring.exe+73D8D0: 88 86 91 00 00 00        - mov [rsi+00000091],al
eldenring.exe+73D8D6: 49 8B 8C 24 90 01 00 00  - mov rcx,[r12+00000190]
eldenring.exe+73D8DE: 48 8B 01                 - mov rax,[rcx]
// ---------- INJECTING HERE ----------
eldenring.exe+73D8E1: 8B 88 38 01 00 00        - mov ecx,[rax+00000138]
// ---------- DONE INJECTING  ----------
eldenring.exe+73D8E7: 89 8E 84 00 00 00        - mov [rsi+00000084],ecx
eldenring.exe+73D8ED: 49 8B 84 24 90 01 00 00  - mov rax,[r12+00000190]
eldenring.exe+73D8F5: 48 8B 08                 - mov rcx,[rax]
eldenring.exe+73D8F8: E8 A3 AC CE FF           - call eldenring.exe+4285A0
eldenring.exe+73D8FD: 89 86 88 00 00 00        - mov [rsi+00000088],eax
eldenring.exe+73D903: 49 8B 84 24 90 01 00 00  - mov rax,[r12+00000190]
eldenring.exe+73D90B: 48 8B 08                 - mov rcx,[rax]
eldenring.exe+73D90E: 8B 81 3C 01 00 00        - mov eax,[rcx+0000013C]
eldenring.exe+73D914: 89 86 8C 00 00 00        - mov [rsi+0000008C],eax
eldenring.exe+73D91A: C6 86 A0 00 00 00 01     - mov byte ptr [rsi+000000A0],01
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>202</ID>
          <Description>"//血瓶"</Description>
          <Color>808080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-22
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,89 51 08 C3 C7 43 38 06 00 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov [rcx+08],edx
  ret 
  mov [rbx+38],00000006
  jmp return

INJECT:
  jmp newmem
  nop 6
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 51 08 C3 C7 43 38 06 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+6E1690

eldenring.exe+6E167C: EB 02                 - jmp eldenring.exe+6E1680
eldenring.exe+6E167E: 33 C0                 - xor eax,eax
eldenring.exe+6E1680: 48 8B 5C 24 68        - mov rbx,[rsp+68]
eldenring.exe+6E1685: 48 83 C4 50           - add rsp,50
eldenring.exe+6E1689: 5F                    - pop rdi
eldenring.exe+6E168A: C3                    - ret 
eldenring.exe+6E168B: CC                    - int 3 
eldenring.exe+6E168C: 73 4C                 - jae eldenring.exe+6E16DA
eldenring.exe+6E168E: 8D 45                 - db 8D 45 
eldenring.exe+6E1690: 89 51 08              - mov [rcx+08],edx
// ---------- INJECTING HERE ----------
eldenring.exe+6E1693: C3                    - ret 
// ---------- DONE INJECTING  ----------
eldenring.exe+6E1694: C7 43 38 06 00 00 00  - mov [rbx+38],00000006
eldenring.exe+6E169B: E9 84 CD B7 FF        - jmp eldenring.exe+25E424
eldenring.exe+6E16A0: 39 51 08              - cmp [rcx+08],edx
eldenring.exe+6E16A3: 89 51 08              - mov [rcx+08],edx
eldenring.exe+6E16A6: 73 04                 - jae eldenring.exe+6E16AC
eldenring.exe+6E16A8: 44 89 41 0C           - mov [rcx+0C],r8d
eldenring.exe+6E16AC: C3                    - ret 
eldenring.exe+6E16AD: CC                    - int 3 
eldenring.exe+6E16AE: 03 C0                 - add eax,eax
eldenring.exe+6E16B0: 40 53                 - push rbx
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>203</ID>
              <Description>"//血瓶减少"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-22
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,8B 41 08 C3 4C 8D 05 F5 92 59 02) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov eax,[rcx+08]
  ret 
  lea r8,[eldenring.exe+2C7A800]
  jmp return

INJECT:
  jmp newmem
  nop 6
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 41 08 C3 4C 8D 05 F5 92 59 02

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+6E1500

eldenring.exe+6E14ED: 40 57                    - push rdi
eldenring.exe+6E14EF: 48 8B 41 04              - mov rax,[rcx+04]
eldenring.exe+6E14F3: 89 02                    - mov [rdx],eax
eldenring.exe+6E14F5: 48 8B C2                 - mov rax,rdx
eldenring.exe+6E14F8: C3                       - ret 
eldenring.exe+6E14F9: 90                       - nop 
eldenring.exe+6E14FA: EA E5 24 86 E3 BA        - db EA E5 24 86 E3 BA 
eldenring.exe+6E1500: 8B 41 08                 - mov eax,[rcx+08]
eldenring.exe+6E1503: C3                       - ret 
eldenring.exe+6E1504: 4C 8D 05 F5 92 59 02     - lea r8,[eldenring.exe+2C7A800]
// ---------- INJECTING HERE ----------
eldenring.exe+6E150B: E9 1F E6 D3 00           - jmp eldenring.exe+141FB2F
// ---------- DONE INJECTING  ----------
eldenring.exe+6E1510: 48 89 5C 24 10           - mov [rsp+10],rbx
eldenring.exe+6E1515: 57                       - push rdi
eldenring.exe+6E1516: 48 83 EC 20              - sub rsp,20
eldenring.exe+6E151A: 33 DB                    - xor ebx,ebx
eldenring.exe+6E151C: C7 44 24 30 00 00 00 00  - mov [rsp+30],00000000
eldenring.exe+6E1524: 39 19                    - cmp [rcx],ebx
eldenring.exe+6E1526: 48 8D 54 24 30           - lea rdx,[rsp+30]
eldenring.exe+6E152B: 48 8B F9                 - mov rdi,rcx
eldenring.exe+6E152E: 0F 95 C3                 - setne bl
eldenring.exe+6E1531: E8 FA 2F F7 FF           - call eldenring.exe+654530
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"自动汇编脚本"</Description>
          <Color>808080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-22
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02221403,eldenring.exe,48 83 EC 28 F3 0F 11 44 24 08) // should be unique
alloc(newmem,$1000,INJECT02221403)

label(code)
label(return)

newmem:
ret
code:
  sub rsp,28
  movss [rsp+08],xmm0
  jmp return

INJECT02221403:
  jmp newmem
  nop 5
return:
registersymbol(INJECT02221403)

[DISABLE]

INJECT02221403:
  db 48 83 EC 28 F3 0F 11 44 24 08

unregistersymbol(INJECT02221403)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+D56472

eldenring.exe+D56458: FF 50 68                    - call qword ptr [rax+68]
eldenring.exe+D5645B: 48 89 1F                    - mov [rdi],rbx
eldenring.exe+D5645E: C6 47 08 00                 - mov byte ptr [rdi+08],00
eldenring.exe+D56462: 48 8B C7                    - mov rax,rdi
eldenring.exe+D56465: 48 8B 5C 24 68              - mov rbx,[rsp+68]
eldenring.exe+D5646A: 48 83 C4 50                 - add rsp,50
eldenring.exe+D5646E: 5F                          - pop rdi
eldenring.exe+D5646F: C3                          - ret 
eldenring.exe+D56470: CC                          - int 3 
eldenring.exe+D56471: CC                          - int 3 
// ---------- INJECTING HERE ----------
eldenring.exe+D56472: 48 83 EC 28                 - sub rsp,28
// ---------- DONE INJECTING  ----------
eldenring.exe+D56476: F3 0F 11 44 24 08           - movss [rsp+08],xmm0
eldenring.exe+D5647C: 8B CA                       - mov ecx,edx
eldenring.exe+D5647E: 44 8B 48 8B                 - mov r9d,[rax-75]
eldenring.exe+D56482: C4 55 57 41                 - inc r9d
eldenring.exe+D56486: 56                          - push rsi
eldenring.exe+D56487: 48 8D A8 28 FF FF FF        - lea rbp,[rax-000000D8]
eldenring.exe+D5648E: 48 81 EC C0 01 00 00        - sub rsp,000001C0
eldenring.exe+D56495: 48 C7 44 24 50 FE FF FF FF  - mov qword ptr [rsp+50],FFFFFFFFFFFFFFFE
eldenring.exe+D5649E: 48 89 58 10                 - mov [rax+10],rbx
eldenring.exe+D564A2: 48 89 70 18                 - mov [rax+18],rsi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"自动汇编脚本"</Description>
          <Color>808080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-22
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02221405,eldenring.exe,23 A8 72 43 E9 7B) // should be unique
alloc(newmem,$1000,INJECT02221405)

label(code)
label(return)

newmem:
ret
code:
  and ebp,[rax+7BE94372]
  jmp return

INJECT02221405:
  jmp newmem
  nop
return:
registersymbol(INJECT02221405)

[DISABLE]

INJECT02221405:
  db 23 A8 72 43 E9 7B

unregistersymbol(INJECT02221405)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+D54DD3

eldenring.exe+D54DAC: 0F 57 C0                 - xorps xmm0,xmm0
eldenring.exe+D54DAF: F3 0F 7F 44 24 30        - movdqu [rsp+30],xmm0
eldenring.exe+D54DB5: 48 89 7C 24 40           - mov [rsp+40],rdi
eldenring.exe+D54DBA: 48 8B 5C 24 70           - mov rbx,[rsp+70]
eldenring.exe+D54DBF: 48 8B B4 24 80 00 00 00  - mov rsi,[rsp+00000080]
eldenring.exe+D54DC7: 0F 28 74 24 50           - movaps xmm6,[rsp+50]
eldenring.exe+D54DCC: 48 83 C4 60              - add rsp,60
eldenring.exe+D54DD0: 5F                       - pop rdi
eldenring.exe+D54DD1: C3                       - ret 
eldenring.exe+D54DD2: CC                       - int 3 
// ---------- INJECTING HERE ----------
eldenring.exe+D54DD3: 23 A8 72 43 E9 7B        - and ebp,[rax+7BE94372]
// ---------- DONE INJECTING  ----------
eldenring.exe+D54DD9: 71 5B                    - jno eldenring.exe+D54E36
eldenring.exe+D54DDB: 63 7B 5E                 - movsxd  rdi,dword ptr [rbx+5E]
eldenring.exe+D54DDE: 25 45 48 89 54           - and eax,54894845
eldenring.exe+D54DE3: 24 10                    - and al,10
eldenring.exe+D54DE5: 48 89 4C 24 08           - mov [rsp+08],rcx
eldenring.exe+D54DEA: 53                       - push rbx
eldenring.exe+D54DEB: 55                       - push rbp
eldenring.exe+D54DEC: 56                       - push rsi
eldenring.exe+D54DED: 57                       - push rdi
eldenring.exe+D54DEE: 41 54                    - push r12
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>82</ID>
          <Description>"//这里崩溃"</Description>
          <Color>808080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,00 FB 48 8B 45 30 8B 00 89 45 44) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov eax,[rax]
  mov [rbp+44],eax
  jmp return

INJECT+06:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT+06:
  db 8B 00 89 45 44

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+50EEDBD

eldenring.exe+50EED96: 48 8D 64 24 F8     - lea rsp,[rsp-08]
eldenring.exe+50EED9B: 48 89 2C 24        - mov [rsp],rbp
eldenring.exe+50EED9F: 48 83 EC 20        - sub rsp,20
eldenring.exe+50EEDA3: 48 8B EA           - mov rbp,rdx
eldenring.exe+50EEDA6: 8B 45 24           - mov eax,[rbp+24]
eldenring.exe+50EEDA9: 83 E0 01           - and eax,01
eldenring.exe+50EEDAC: 85 C0              - test eax,eax
eldenring.exe+50EEDAE: 0F 84 98 A3 5D FD  - je eldenring.exe+26C914C
eldenring.exe+50EEDB4: E9 EA 67 00 FB     - jmp eldenring.exe+F55A3
eldenring.exe+50EEDB9: 48 8B 45 30        - mov rax,[rbp+30]
// ---------- INJECTING HERE ----------
eldenring.exe+50EEDBD: 8B 00              - mov eax,[rax]
// ---------- DONE INJECTING  ----------
eldenring.exe+50EEDBF - 89 45 44              - mov [rbp+44],eax
eldenring.exe+50EEDC2 - 83 45 50 FC           - add dword ptr [rbp+50],-04
eldenring.exe+50EEDC6 - 48 8D 64 24 F8        - lea rsp,[rsp-08]
eldenring.exe+50EEDCB - 48 89 0C 24           - mov [rsp],rcx
eldenring.exe+50EEDCF - 8B 4D 40              - mov ecx,[rbp+40]
eldenring.exe+50EEDD2 - D3 45 44              - rol [rbp+44],cl
eldenring.exe+50EEDD5 - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+50EEDDA - 48 8B 4C 24 F8        - mov rcx,[rsp-08]
eldenring.exe+50EEDDF - 48 83 45 30 04        - add qword ptr [rbp+30],04
eldenring.exe+50EEDE4 - 8B 45 40              - mov eax,[rbp+40]
eldenring.exe+50EEDE7 - 33 45 44              - xor eax,[rbp+44]
eldenring.exe+50EEDEA - 03 45 48              - add eax,[rbp+48]
eldenring.exe+50EEDED - 89 45 48              - mov [rbp+48],eax
eldenring.exe+50EEDF0 - 8B 45 48              - mov eax,[rbp+48]
eldenring.exe+50EEDF3 - 33 45 40              - xor eax,[rbp+40]
eldenring.exe+50EEDF6 - 83 E0 1F              - and eax,1F
eldenring.exe+50EEDF9 - 89 45 40              - mov [rbp+40],eax
eldenring.exe+50EEDFC - 8B 45 50              - mov eax,[rbp+50]
eldenring.exe+50EEDFF - 83 F8 04              - cmp eax,04
eldenring.exe+50EEE02 - 0F8D B1FFFFFF         - jnl eldenring.exe+50EEDB9
eldenring.exe+50EEE08 - E9 4B2E4AFB           - jmp eldenring.exe+591C58
eldenring.exe+50EEE0D - 48 C7 45 F8 07000000  - mov qword ptr [rbp-08],00000007
eldenring.exe+50EEE15 - 48 89 5D F0           - mov [rbp-10],rbx
eldenring.exe+50EEE19 - 66 89 5D E0           - mov [rbp-20],bx
eldenring.exe+50EEE1D - 41 B8 22000000        - mov r8d,00000022
eldenring.exe+50EEE23 - 48 8D 15 2619F0FD     - lea rdx,[eldenring.exe+2FF0750] //"block number,address,size,statu"
eldenring.exe+50EEE2A - 48 8D 4D D8           - lea rcx,[rbp-28]
eldenring.exe+50EEE2E - E9 3A70DDFC           - jmp eldenring.exe+1EC5E6D
eldenring.exe+50EEE33 - 48 89 4C 24 10        - mov [rsp+10],rcx
eldenring.exe+50EEE38 - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+50EEE3D - 48 8B 54 24 F8        - mov rdx,[rsp-08]
eldenring.exe+50EEE42 - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+50EEE47 - 48 8B 4C 24 F8        - mov rcx,[rsp-08]
eldenring.exe+50EEE4C - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+50EEE51 - FF 64 24 F8           - jmp qword ptr [rsp-08]
eldenring.exe+50EEE55 - E9 BAE332FB           - jmp eldenring.exe+41D214
eldenring.exe+50EEE5A - 48 89 14 24           - mov [rsp],rdx
eldenring.exe+50EEE5E - 48 8B 4C 24 10        - mov rcx,[rsp+10]
eldenring.exe+50EEE63 - 48 BA A6415E4001000000 - mov rdx,eldenring.exe+5E41A6
eldenring.exe+50EEE6D - 48 0F45 CA            - cmovne rcx,rdx
eldenring.exe+50EEE71 - 48 89 4C 24 10        - mov [rsp+10],rcx
eldenring.exe+50EEE76 - E9 392AF5FF           - jmp eldenring.exe+50418B4
eldenring.exe+50EEE7B - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+50EEE80 - 48 8B 4C 24 F8        - mov rcx,[rsp-08]
eldenring.exe+50EEE85 - 48 8B 04 24           - mov rax,[rsp]
eldenring.exe+50EEE89 - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+50EEE8E - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+50EEE93 - FF 64 24 F8           - jmp qword ptr [rsp-08]
eldenring.exe+50EEE97 - E9 F35FF8FB           - jmp eldenring.exe+1074E8F
eldenring.exe+50EEE9C - 48 89 5C 24 10        - mov [rsp+10],rbx
eldenring.exe+50EEEA1 - 48 8B 04 24           - mov rax,[rsp]
eldenring.exe+50EEEA5 - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+50EEEAA - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+50EEEAF - 48 8B 5C 24 F8        - mov rbx,[rsp-08]
eldenring.exe+50EEEB4 - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+50EEEB9 - FF 64 24 F8           - jmp qword ptr [rsp-08]
eldenring.exe+50EEEBD - E9 1124FFFA           - jmp eldenring.exe+E12D3
eldenring.exe+50EEEC2 - 48 8B 05 970692FE     - mov rax,[eldenring.exe+3A0F560]
eldenring.exe+50EEEC9 - 48 8D 64 24 08        - lea rsp,[rsp+08]
eldenring.exe+50EEECE - FF 64 24 F8           - jmp qword ptr [rsp-08]
eldenring.exe+50EEED2 - 4C 8D 05 B78C0CFE     - lea r8,[eldenring.exe+31B7B90] //"DLReferenceCountObject: Invalid Unref() call. m_nRefCount is 0 "
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>108</ID>
          <Description>"自动汇编脚本"</Description>
          <Color>808080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,89 46 5C 41 8B 86 44 09 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:
mov eax,#9999999
code:
  mov [rsi+5C],eax
  mov eax,[r14+00000944]
  jmp return

INJECT:
  jmp newmem
  nop 5
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 46 5C 41 8B 86 44 09 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+793E8B

eldenring.exe+793E59: 89 46 48              - mov [rsi+48],eax
eldenring.exe+793E5C: 41 8B 86 9C 02 00 00  - mov eax,[r14+0000029C]
eldenring.exe+793E63: 89 46 4C              - mov [rsi+4C],eax
eldenring.exe+793E66: 41 8B 86 A0 02 00 00  - mov eax,[r14+000002A0]
eldenring.exe+793E6D: 89 46 50              - mov [rsi+50],eax
eldenring.exe+793E70: 41 8B 86 A4 02 00 00  - mov eax,[r14+000002A4]
eldenring.exe+793E77: 89 46 54              - mov [rsi+54],eax
eldenring.exe+793E7A: 41 8B 86 A8 02 00 00  - mov eax,[r14+000002A8]
eldenring.exe+793E81: 89 46 58              - mov [rsi+58],eax
eldenring.exe+793E84: 41 8B 86 3C 09 00 00  - mov eax,[r14+0000093C]
// ---------- INJECTING HERE ----------
eldenring.exe+793E8B: 89 46 5C              - mov [rsi+5C],eax
// ---------- DONE INJECTING  ----------
eldenring.exe+793E8E: 41 8B 86 44 09 00 00  - mov eax,[r14+00000944]
eldenring.exe+793E95: 89 46 60              - mov [rsi+60],eax
eldenring.exe+793E98: 41 8B 86 4C 09 00 00  - mov eax,[r14+0000094C]
eldenring.exe+793E9F: 89 46 64              - mov [rsi+64],eax
eldenring.exe+793EA2: 41 8B 86 40 09 00 00  - mov eax,[r14+00000940]
eldenring.exe+793EA9: 89 46 68              - mov [rsi+68],eax
eldenring.exe+793EAC: 41 8B 86 48 09 00 00  - mov eax,[r14+00000948]
eldenring.exe+793EB3: 89 46 6C              - mov [rsi+6C],eax
eldenring.exe+793EB6: 41 8B 86 50 09 00 00  - mov eax,[r14+00000950]
eldenring.exe+793EBD: 89 46 70              - mov [rsi+70],eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>91</ID>
          <Description>"自动汇编脚本"</Description>
          <Color>808080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02231643,eldenring.exe,89 46 68 41 8B 86 48 09 00 00) // should be unique
alloc(newmem,$1000,INJECT02231643)

label(code)
label(return)

newmem:
mov eax,#999999
code:
  mov [rsi+68],eax
  mov eax,[r14+00000948]
  jmp return

INJECT02231643:
  jmp newmem
  nop 5
return:
registersymbol(INJECT02231643)

[DISABLE]

INJECT02231643:
  db 89 46 68 41 8B 86 48 09 00 00

unregistersymbol(INJECT02231643)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+793EA9

eldenring.exe+793E77: 89 46 54              - mov [rsi+54],eax
eldenring.exe+793E7A: 41 8B 86 A8 02 00 00  - mov eax,[r14+000002A8]
eldenring.exe+793E81: 89 46 58              - mov [rsi+58],eax
eldenring.exe+793E84: 41 8B 86 3C 09 00 00  - mov eax,[r14+0000093C]
eldenring.exe+793E8B: 89 46 5C              - mov [rsi+5C],eax
eldenring.exe+793E8E: 41 8B 86 44 09 00 00  - mov eax,[r14+00000944]
eldenring.exe+793E95: 89 46 60              - mov [rsi+60],eax
eldenring.exe+793E98: 41 8B 86 4C 09 00 00  - mov eax,[r14+0000094C]
eldenring.exe+793E9F: 89 46 64              - mov [rsi+64],eax
eldenring.exe+793EA2: 41 8B 86 40 09 00 00  - mov eax,[r14+00000940]
// ---------- INJECTING HERE ----------
eldenring.exe+793EA9: 89 46 68              - mov [rsi+68],eax
// ---------- DONE INJECTING  ----------
eldenring.exe+793EAC: 41 8B 86 48 09 00 00  - mov eax,[r14+00000948]
eldenring.exe+793EB3: 89 46 6C              - mov [rsi+6C],eax
eldenring.exe+793EB6: 41 8B 86 50 09 00 00  - mov eax,[r14+00000950]
eldenring.exe+793EBD: 89 46 70              - mov [rsi+70],eax
eldenring.exe+793EC0: 0F 28 05 19 F1 A2 02  - movaps xmm0,[eldenring.exe+31C2FE0]
eldenring.exe+793EC7: 0F 11 45 A7           - movups [rbp-59],xmm0
eldenring.exe+793ECB: 0F 28 C8              - movaps xmm1,xmm0
eldenring.exe+793ECE: 0F 11 45 B7           - movups [rbp-49],xmm0
eldenring.exe+793ED2: 4C 8D 45 FF           - lea r8,[rbp-01]
eldenring.exe+793ED6: 48 8D 55 E7           - lea rdx,[rbp-19]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>109</ID>
          <Description>"自动汇编脚本"</Description>
          <Color>808080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02231657,eldenring.exe,41 89 95 3C 09 00 00) // should be unique
alloc(newmem,$1000,INJECT02231657)

label(code)
label(return)

newmem:
mov edx,#999999
code:
  mov [r13+0000093C],edx
  jmp return

INJECT02231657:
  jmp newmem
  nop 2
return:
registersymbol(INJECT02231657)

[DISABLE]

INJECT02231657:
  db 41 89 95 3C 09 00 00

unregistersymbol(INJECT02231657)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+6317A2

eldenring.exe+631779: F3 0F 58 E0              - addss xmm4,xmm0
eldenring.exe+63177D: F3 0F 58 E1              - addss xmm4,xmm1
eldenring.exe+631781: F3 0F 58 E2              - addss xmm4,xmm2
eldenring.exe+631785: F3 0F 2C D4              - cvttss2si edx,xmm4
eldenring.exe+631789: 83 FE 05                 - cmp esi,05
eldenring.exe+63178C: 77 48                    - ja eldenring.exe+6317D6
eldenring.exe+63178E: 4C 8D 05 6B E8 9C FF     - lea r8,[eldenring.exe]
eldenring.exe+631795: 41 8B 8C B0 3C 18 63 00  - mov ecx,[r8+rsi*4+0063183C]
eldenring.exe+63179D: 49 03 C8                 - add rcx,r8
eldenring.exe+6317A0: FF E1                    - jmp rcx
// ---------- INJECTING HERE ----------
eldenring.exe+6317A2: 41 89 95 3C 09 00 00     - mov [r13+0000093C],edx
// ---------- DONE INJECTING  ----------
eldenring.exe+6317A9: EB 2B                    - jmp eldenring.exe+6317D6
eldenring.exe+6317AB: 41 89 95 40 09 00 00     - mov [r13+00000940],edx
eldenring.exe+6317B2: EB 22                    - jmp eldenring.exe+6317D6
eldenring.exe+6317B4: 41 89 95 44 09 00 00     - mov [r13+00000944],edx
eldenring.exe+6317BB: EB 19                    - jmp eldenring.exe+6317D6
eldenring.exe+6317BD: 41 89 95 48 09 00 00     - mov [r13+00000948],edx
eldenring.exe+6317C4: EB 10                    - jmp eldenring.exe+6317D6
eldenring.exe+6317C6: 41 89 95 4C 09 00 00     - mov [r13+0000094C],edx
eldenring.exe+6317CD: EB 07                    - jmp eldenring.exe+6317D6
eldenring.exe+6317CF: 41 89 95 50 09 00 00     - mov [r13+00000950],edx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>110</ID>
          <Description>"自动汇编脚本"</Description>
          <Color>808080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,8B 7B 48 48 85 C9) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov edi,[rbx+48]
mov edi,#999999
  test rcx,rcx
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 7B 48 48 85 C9

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+A90B27

eldenring.exe+A90AF1: 4C 8B C8              - mov r9,rax
eldenring.exe+A90AF4: 4C 8D 05 45 5C 72 02  - lea r8,[eldenring.exe+31B6740]
eldenring.exe+A90AFB: BA B4 00 00 00        - mov edx,000000B4
eldenring.exe+A90B00: 48 8D 0D B9 BE E6 01  - lea rcx,[eldenring.exe+28FC9C0]
eldenring.exe+A90B07: E8 34 0D 37 01        - call eldenring.exe+1E01840
eldenring.exe+A90B0C: 48 8B 0D 3D 77 1C 03  - mov rcx,[eldenring.exe+3C58250]
eldenring.exe+A90B13: 44 8B C7              - mov r8d,edi
eldenring.exe+A90B16: BA 09 00 00 00        - mov edx,00000009
eldenring.exe+A90B1B: E8 A0 88 20 00        - call eldenring.exe+C993C0
eldenring.exe+A90B20: 48 8B 0D 29 77 1C 03  - mov rcx,[eldenring.exe+3C58250]
// ---------- INJECTING HERE ----------
eldenring.exe+A90B27: 8B 7B 48              - mov edi,[rbx+48]
// ---------- DONE INJECTING  ----------
eldenring.exe+A90B2A: 48 85 C9              - test rcx,rcx
eldenring.exe+A90B2D: 75 2E                 - jne eldenring.exe+A90B5D
eldenring.exe+A90B2F: 48 8D 0D D6 24 1B 03  - lea rcx,[eldenring.exe+3C4300C]
eldenring.exe+A90B36: E8 45 89 37 01        - call eldenring.exe+1E09480
eldenring.exe+A90B3B: 4C 8B C8              - mov r9,rax
eldenring.exe+A90B3E: 4C 8D 05 FB 5B 72 02  - lea r8,[eldenring.exe+31B6740]
eldenring.exe+A90B45: BA B4 00 00 00        - mov edx,000000B4
eldenring.exe+A90B4A: 48 8D 0D 6F BE E6 01  - lea rcx,[eldenring.exe+28FC9C0]
eldenring.exe+A90B51: E8 EA 0C 37 01        - call eldenring.exe+1E01840
eldenring.exe+A90B56: 48 8B 0D F3 76 1C 03  - mov rcx,[eldenring.exe+3C58250]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>111</ID>
          <Description>"自动汇编脚本"</Description>
          <Color>808080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-23
  Author : admin

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(INJECT02231702,eldenring.exe,8B 41 48 C3 C6 85 98 00 00 00 01) // should be unique
alloc(newmem,$1000,INJECT02231702)

label(code)
label(return)

newmem:

code:
  mov eax,[rcx+48]
mov eax,#999999
  ret 
  mov byte ptr [rbp+00000098],01
  jmp return

INJECT02231702:
  jmp newmem
  nop 6
return:
registersymbol(INJECT02231702)

[DISABLE]

INJECT02231702:
  db 8B 41 48 C3 C6 85 98 00 00 00 01

unregistersymbol(INJECT02231702)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+65E000

eldenring.exe+65DFDB: E9 C5 1F 6C 00        - jmp eldenring.exe+D1FFA5
eldenring.exe+65DFE0: 8B 41 58              - mov eax,[rcx+58]
eldenring.exe+65DFE3: C3                    - ret 
eldenring.exe+65DFE4: 48 8D 0D 6D 52 E0 03  - lea rcx,[eldenring.exe+4463258]
eldenring.exe+65DFEB: E9 2F 07 76 00        - jmp eldenring.exe+DBE71F
eldenring.exe+65DFF0: 8B 41 50              - mov eax,[rcx+50]
eldenring.exe+65DFF3: C3                    - ret 
eldenring.exe+65DFF4: 49 8B 1E              - mov rbx,[r14]
eldenring.exe+65DFF7: 48 8D 4B 08           - lea rcx,[rbx+08]
eldenring.exe+65DFFB: E9 37 33 95 01        - jmp eldenring.exe+1FB1337
// ---------- INJECTING HERE ----------
eldenring.exe+65E000: 8B 41 48              - mov eax,[rcx+48]
// ---------- DONE INJECTING  ----------
eldenring.exe+65E003: C3                    - ret 
eldenring.exe+65E004: C6 85 98 00 00 00 01  - mov byte ptr [rbp+00000098],01
eldenring.exe+65E00B: E9 A0 9A FA FF        - jmp eldenring.exe+607AB0
eldenring.exe+65E010: 8B 41 64              - mov eax,[rcx+64]
eldenring.exe+65E013: C3                    - ret 
eldenring.exe+65E014: 83 48 10 20           - or dword ptr [rax+10],20
eldenring.exe+65E018: 89 78 2C              - mov [rax+2C],edi
eldenring.exe+65E01B: E9 9D 4C 62 00        - jmp eldenring.exe+C82CBD
eldenring.exe+65E020: 8B 41 40              - mov eax,[rcx+40]
eldenring.exe+65E023: C3                    - ret 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>152</ID>
          <Description>"//时间相关 //打开地图[G]"</Description>
          <Color>808080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,66 0F 6E C0 0F 5B C0 0F 5B C9 F3 0F 5E 05) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  movd xmm0,eax
  cvtdq2ps xmm0,xmm0
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 66 0F 6E C0 0F 5B C0

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+5E3F85

eldenring.exe+5E3F58: E8 B3 9B 83 01           - call eldenring.exe+1E1DB10
eldenring.exe+5E3F5D: 48 8B 47 08              - mov rax,[rdi+08]
eldenring.exe+5E3F61: 66 0F 6E D3              - movd xmm2,ebx
eldenring.exe+5E3F65: 48 8B 5C 24 30           - mov rbx,[rsp+30]
eldenring.exe+5E3F6A: 0F 5B D2                 - cvtdq2ps xmm2,xmm2
eldenring.exe+5E3F6D: 48 C1 E8 2D              - shr rax,2D
eldenring.exe+5E3F71: 83 E0 3F                 - and eax,3F
eldenring.exe+5E3F74: 66 0F 6E CE              - movd xmm1,esi
eldenring.exe+5E3F78: F3 0F 5E 15 E4 9E 31 02  - divss xmm2,[eldenring.exe+28FDE64]
eldenring.exe+5E3F80: 48 8B 74 24 38           - mov rsi,[rsp+38]
// ---------- INJECTING HERE ----------
eldenring.exe+5E3F85: 66 0F 6E C0              - movd xmm0,eax
// ---------- DONE INJECTING  ----------
eldenring.exe+5E3F89: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
eldenring.exe+5E3F8C: 0F 5B C9                 - cvtdq2ps xmm1,xmm1
eldenring.exe+5E3F8F: F3 0F 5E 05 D9 9E 31 02  - divss xmm0,[eldenring.exe+28FDE70]
eldenring.exe+5E3F97: F3 0F 58 D1              - addss xmm2,xmm1
eldenring.exe+5E3F9B: F3 0F 58 C2              - addss xmm0,xmm2
eldenring.exe+5E3F9F: 48 83 C4 20              - add rsp,20
eldenring.exe+5E3FA3: 5F                       - pop rdi
eldenring.exe+5E3FA4: C3                       - ret 
eldenring.exe+5E3FA5: CC                       - int 3 
eldenring.exe+5E3FA6: 4C 6C                    - insb 
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>154</ID>
              <Description>"自动汇编脚本"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,F3 0F 11 43 64 40) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  movss [rbx+64],xmm0
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 43 64

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+820066

eldenring.exe+820041: 89 5C 24 08           - mov [rsp+08],ebx
eldenring.exe+820045: 57                    - push rdi
eldenring.exe+820046: 48 83 EC 30           - sub rsp,30
eldenring.exe+82004A: 48 8B D9              - mov rbx,rcx
eldenring.exe+82004D: 0F 29 74 24 20        - movaps [rsp+20],xmm6
eldenring.exe+820052: 48 8B 0D 07 47 42 03  - mov rcx,[eldenring.exe+3C44760]
eldenring.exe+820059: 0F 28 F1              - movaps xmm6,xmm1
eldenring.exe+82005C: 48 85 C9              - test rcx,rcx
eldenring.exe+82005F: 74 0A                 - je eldenring.exe+82006B
eldenring.exe+820061: E8 BA 3E DC FF        - call eldenring.exe+5E3F20
// ---------- INJECTING HERE ----------
eldenring.exe+820066: F3 0F 11 43 64        - movss [rbx+64],xmm0
// ---------- DONE INJECTING  ----------
eldenring.exe+82006B: 40 32 FF              - xor dil,dil
eldenring.exe+82006E: 40 38 7B 68           - cmp [rbx+68],dil
eldenring.exe+820072: 74 0E                 - je eldenring.exe+820082
eldenring.exe+820074: C7 43 60 00 00 00 00  - mov [rbx+60],00000000
eldenring.exe+82007B: 40 B7 01              - mov dil,01
eldenring.exe+82007E: C6 43 68 00           - mov byte ptr [rbx+68],00
eldenring.exe+820082: F3 0F 10 5B 58        - movss xmm3,[rbx+58]
eldenring.exe+820087: 0F 28 C6              - movaps xmm0,xmm6
eldenring.exe+82008A: F3 0F 58 43 60        - addss xmm0,[rbx+60]
eldenring.exe+82008F: F3 0F 58 73 3C        - addss xmm6,[rbx+3C]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>155</ID>
              <Description>"自动汇编脚本"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02241423,eldenring.exe,F3 0F 5E 15 E4 9E 31 02) // should be unique
alloc(newmem,$1000,INJECT02241423)

label(code)
label(return)
registersymbol(ram02241423)
alloc(ram02241423,256)
newmem:
mov [ram02241423],(float)30
divss xmm2,[ram02241423]
code:
  //divss xmm2,[eldenring.exe+28FDE64]
  jmp return

INJECT02241423:
  jmp newmem
  nop 3
return:
registersymbol(INJECT02241423)

[DISABLE]

INJECT02241423:
  db F3 0F 5E 15 E4 9E 31 02

unregistersymbol(INJECT02241423)
dealloc(newmem)
unregistersymbol(ram02241423)
dealloc(ram02241423)
{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+5E3F78

eldenring.exe+5E3F51: 48 C1 EB 27              - shr rbx,27
eldenring.exe+5E3F55: 83 E3 3F                 - and ebx,3F
eldenring.exe+5E3F58: E8 B3 9B 83 01           - call eldenring.exe+1E1DB10
eldenring.exe+5E3F5D: 48 8B 47 08              - mov rax,[rdi+08]
eldenring.exe+5E3F61: 66 0F 6E D3              - movd xmm2,ebx
eldenring.exe+5E3F65: 48 8B 5C 24 30           - mov rbx,[rsp+30]
eldenring.exe+5E3F6A: 0F 5B D2                 - cvtdq2ps xmm2,xmm2
eldenring.exe+5E3F6D: 48 C1 E8 2D              - shr rax,2D
eldenring.exe+5E3F71: 83 E0 3F                 - and eax,3F
eldenring.exe+5E3F74: 66 0F 6E CE              - movd xmm1,esi
// ---------- INJECTING HERE ----------
eldenring.exe+5E3F78: F3 0F 5E 15 E4 9E 31 02  - divss xmm2,[eldenring.exe+28FDE64]
// ---------- DONE INJECTING  ----------
eldenring.exe+5E3F80: 48 8B 74 24 38           - mov rsi,[rsp+38]
eldenring.exe+5E3F85: 66 0F 6E C0              - movd xmm0,eax
eldenring.exe+5E3F89: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
eldenring.exe+5E3F8C: 0F 5B C9                 - cvtdq2ps xmm1,xmm1
eldenring.exe+5E3F8F: F3 0F 5E 05 D9 9E 31 02  - divss xmm0,[eldenring.exe+28FDE70]
eldenring.exe+5E3F97: F3 0F 58 D1              - addss xmm2,xmm1
eldenring.exe+5E3F9B: F3 0F 58 C2              - addss xmm0,xmm2
eldenring.exe+5E3F9F: 48 83 C4 20              - add rsp,20
eldenring.exe+5E3FA3: 5F                       - pop rdi
eldenring.exe+5E3FA4: C3                       - ret 
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>189</ID>
          <Description>"//开启坐标修改 崩溃"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT02241550,eldenring.exe,0F 58 9F 80 00 00 00) // should be unique
alloc(newmem,$1000,INJECT02241550)

label(code)
label(return)
registersymbol(ram02241552)
alloc(ram02241552,256)
newmem:
mov [ram02241552],rdi
code:
  addps xmm3,[rdi+00000080]
  jmp return

INJECT02241550:
  jmp newmem
  nop 2
return:
registersymbol(INJECT02241550)

[DISABLE]

INJECT02241550:
  db 0F 58 9F 80 00 00 00

unregistersymbol(INJECT02241550)
dealloc(newmem)
unregistersymbol(ram02241552)
dealloc(ram02241552)
{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+456432

eldenring.exe+456407: 4C 8D 4D D7              - lea r9,[rbp-29]
eldenring.exe+45640B: F3 0F 10 97 84 01 00 00  - movss xmm2,[rdi+00000184]
eldenring.exe+456413: 4C 8D 45 E7              - lea r8,[rbp-19]
eldenring.exe+456417: F3 0F 10 9F 80 01 00 00  - movss xmm3,[rdi+00000180]
eldenring.exe+45641F: 48 8D 55 17              - lea rdx,[rbp+17]
eldenring.exe+456423: 0F 14 D8                 - unpcklps xmm3,xmm0
eldenring.exe+456426: 0F 57 C9                 - xorps xmm1,xmm1
eldenring.exe+456429: 0F 14 D1                 - unpcklps xmm2,xmm1
eldenring.exe+45642C: 48 8B CF                 - mov rcx,rdi
eldenring.exe+45642F: 0F 14 DA                 - unpcklps xmm3,xmm2
// ---------- INJECTING HERE ----------
eldenring.exe+456432: 0F 58 9F 80 00 00 00     - addps xmm3,[rdi+00000080]
// ---------- DONE INJECTING  ----------
eldenring.exe+456439: 0F 29 5D E7              - movaps [rbp-19],xmm3
eldenring.exe+45643D: E8 4E F3 FF FF           - call eldenring.exe+455790
eldenring.exe+456442: 0F 28 00                 - movaps xmm0,[rax]
eldenring.exe+456445: 0F 29 45 D7              - movaps [rbp-29],xmm0
eldenring.exe+456449: 48 8B 8F 98 00 00 00     - mov rcx,[rdi+00000098]
eldenring.exe+456450: 48 85 C9                 - test rcx,rcx
eldenring.exe+456453: 74 09                    - je eldenring.exe+45645E
eldenring.exe+456455: 48 8D 55 D7              - lea rdx,[rbp-29]
eldenring.exe+456459: E8 42 F9 78 00           - call eldenring.exe+BE5DA0
eldenring.exe+45645E: 48 8B 8F A0 00 00 00     - mov rcx,[rdi+000000A0]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>190</ID>
              <Description>"//坐标 高度"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>ram02241552</Address>
              <Offsets>
                <Offset>70</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>191</ID>
                  <Description>"//"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>ram02241552</Address>
                  <Offsets>
                    <Offset>80</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>158</ID>
              <Description>"//坐标相关 //都有其他"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,0F 10 5B 70 0F 14 E0) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  movups xmm3,[rbx+70]
  unpcklps xmm4,xmm0
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 0F 10 5B 70 0F 14 E0

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+456848

eldenring.exe+45680D: E8 DE C9 00 00           - call eldenring.exe+4631F0
eldenring.exe+456812: 48 8B 8B A8 00 00 00     - mov rcx,[rbx+000000A8]
eldenring.exe+456819: 4C 8D 45 A0              - lea r8,[rbp-60]
eldenring.exe+45681D: 48 8B D0                 - mov rdx,rax
eldenring.exe+456820: E8 DB 02 79 00           - call eldenring.exe+BE6B00
eldenring.exe+456825: 48 8B BC 24 28 01 00 00  - mov rdi,[rsp+00000128]
eldenring.exe+45682D: F3 0F 10 83 88 01 00 00  - movss xmm0,[rbx+00000188]
eldenring.exe+456835: 0F 57 F6                 - xorps xmm6,xmm6
eldenring.exe+456838: F3 0F 10 93 84 01 00 00  - movss xmm2,[rbx+00000184]
eldenring.exe+456840: F3 0F 10 A3 80 01 00 00  - movss xmm4,[rbx+00000180]
// ---------- INJECTING HERE ----------
eldenring.exe+456848: 0F 10 5B 70              - movups xmm3,[rbx+70]
// ---------- DONE INJECTING  ----------
eldenring.exe+45684C: 0F 14 E0                 - unpcklps xmm4,xmm0
eldenring.exe+45684F: F3 0F 10 83 08 01 00 00  - movss xmm0,[rbx+00000108]
eldenring.exe+456857: 0F 2F C6                 - comiss xmm0,xmm6
eldenring.exe+45685A: 0F 14 D6                 - unpcklps xmm2,xmm6
eldenring.exe+45685D: 0F 14 E2                 - unpcklps xmm4,xmm2
eldenring.exe+456860: 0F 58 E3                 - addps xmm4,xmm3
eldenring.exe+456863: 0F 29 65 B0              - movaps [rbp-50],xmm4
eldenring.exe+456867: 73 08                    - jae eldenring.exe+456871
eldenring.exe+456869: F3 0F 10 83 04 01 00 00  - movss xmm0,[rbx+00000104]
eldenring.exe+456871: 80 BB F1 03 00 00 00     - cmp byte ptr [rbx+000003F1],00
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>160</ID>
                  <Description>"自动汇编脚本"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,F3 0F 58 4B 70) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  addss xmm1,[rbx+70]
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 58 4B 70

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+4584CE

eldenring.exe+45849A: F3 0F 10 4C 24 40  - movss xmm1,[rsp+40]
eldenring.exe+4584A0: F3 0F 10 54 24 44  - movss xmm2,[rsp+44]
eldenring.exe+4584A6: F3 0F 10 5C 24 48  - movss xmm3,[rsp+48]
eldenring.exe+4584AC: F3 0F 10 64 24 4C  - movss xmm4,[rsp+4C]
eldenring.exe+4584B2: F3 0F 5C 4B 70     - subss xmm1,[rbx+70]
eldenring.exe+4584B7: F3 0F 5C 53 74     - subss xmm2,[rbx+74]
eldenring.exe+4584BC: F3 0F 5C 5B 78     - subss xmm3,[rbx+78]
eldenring.exe+4584C1: F3 0F 5C 63 7C     - subss xmm4,[rbx+7C]
eldenring.exe+4584C6: F3 0F 59 C8        - mulss xmm1,xmm0
eldenring.exe+4584CA: F3 0F 59 D0        - mulss xmm2,xmm0
// ---------- INJECTING HERE ----------
eldenring.exe+4584CE: F3 0F 58 4B 70     - addss xmm1,[rbx+70]
// ---------- DONE INJECTING  ----------
eldenring.exe+4584D3: F3 0F 59 D8        - mulss xmm3,xmm0
eldenring.exe+4584D7: F3 0F 58 53 74     - addss xmm2,[rbx+74]
eldenring.exe+4584DC: F3 0F 59 E0        - mulss xmm4,xmm0
eldenring.exe+4584E0: F3 0F 58 5B 78     - addss xmm3,[rbx+78]
eldenring.exe+4584E5: F3 0F 11 4C 24 40  - movss [rsp+40],xmm1
eldenring.exe+4584EB: F3 0F 58 63 7C     - addss xmm4,[rbx+7C]
eldenring.exe+4584F0: F3 0F 11 54 24 44  - movss [rsp+44],xmm2
eldenring.exe+4584F6: F3 0F 11 5C 24 48  - movss [rsp+48],xmm3
eldenring.exe+4584FC: F3 0F 11 64 24 4C  - movss [rsp+4C],xmm4
eldenring.exe+458502: 0F 84 BC 00 00 00  - je eldenring.exe+4585C4
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>161</ID>
                  <Description>"自动汇编脚本"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,0F 11 43 70 C7 43 7C 00 00 80 3F) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  movups [rbx+70],xmm0
  mov [rbx+7C],3F800000
  jmp return

INJECT:
  jmp newmem
  nop 6
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 0F 11 43 70 C7 43 7C 00 00 80 3F

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+4585C9

eldenring.exe+458593: C7 44 24 34 00 00 80 3F  - mov [rsp+34],3F800000
eldenring.exe+45859B: E8 E0 59 FD FF           - call eldenring.exe+42DF80
eldenring.exe+4585A0: 41 B0 01                 - mov r8l,01
eldenring.exe+4585A3: 48 8D 54 24 20           - lea rdx,[rsp+20]
eldenring.exe+4585A8: 48 8B 48 58              - mov rcx,[rax+58]
eldenring.exe+4585AC: 48 8B 89 E0 00 00 00     - mov rcx,[rcx+000000E0]
eldenring.exe+4585B3: E8 B8 F0 F7 FF           - call eldenring.exe+3D7670
eldenring.exe+4585B8: 8B 83 18 04 00 00        - mov eax,[rbx+00000418]
eldenring.exe+4585BE: 89 83 1C 04 00 00        - mov [rbx+0000041C],eax
eldenring.exe+4585C4: 0F 28 44 24 40           - movaps xmm0,[rsp+40]
// ---------- INJECTING HERE ----------
eldenring.exe+4585C9: 0F 11 43 70              - movups [rbx+70],xmm0
// ---------- DONE INJECTING  ----------
eldenring.exe+4585CD: C7 43 7C 00 00 80 3F     - mov [rbx+7C],3F800000
eldenring.exe+4585D4: 48 8B 4C 24 50           - mov rcx,[rsp+50]
eldenring.exe+4585D9: 48 33 CC                 - xor rcx,rsp
eldenring.exe+4585DC: E8 AF 85 FE 01           - call eldenring.exe+2440B90
eldenring.exe+4585E1: 48 83 C4 60              - add rsp,60
eldenring.exe+4585E5: 5B                       - pop rbx
eldenring.exe+4585E6: C3                       - ret 
eldenring.exe+4585E7: 48 8D 4D A0              - lea rcx,[rbp-60]
eldenring.exe+4585EB: E9 57 F2 EF FF           - jmp eldenring.exe+357847
eldenring.exe+4585F0: 48 8B C4                 - mov rax,rsp
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>159</ID>
                  <Description>"自动汇编脚本"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,F3 0F 5C 4B 70 F3 0F 5C) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  subss xmm1,[rbx+70]
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 5C 4B 70

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+4584B2

eldenring.exe+458477: 0F 29 44 24 40           - movaps [rsp+40],xmm0
eldenring.exe+45847C: EB 0D                    - jmp eldenring.exe+45848B
eldenring.exe+45847E: 0F 28 05 2B 77 65 03     - movaps xmm0,[eldenring.exe+3AAFBB0]
eldenring.exe+458485: 66 0F 7F 44 24 40        - movdqa [rsp+40],xmm0
eldenring.exe+45848B: 80 BB E6 03 00 00 00     - cmp byte ptr [rbx+000003E6],00
eldenring.exe+458492: F3 0F 10 83 C4 01 00 00  - movss xmm0,[rbx+000001C4]
eldenring.exe+45849A: F3 0F 10 4C 24 40        - movss xmm1,[rsp+40]
eldenring.exe+4584A0: F3 0F 10 54 24 44        - movss xmm2,[rsp+44]
eldenring.exe+4584A6: F3 0F 10 5C 24 48        - movss xmm3,[rsp+48]
eldenring.exe+4584AC: F3 0F 10 64 24 4C        - movss xmm4,[rsp+4C]
// ---------- INJECTING HERE ----------
eldenring.exe+4584B2: F3 0F 5C 4B 70           - subss xmm1,[rbx+70]
// ---------- DONE INJECTING  ----------
eldenring.exe+4584B7: F3 0F 5C 53 74           - subss xmm2,[rbx+74]
eldenring.exe+4584BC: F3 0F 5C 5B 78           - subss xmm3,[rbx+78]
eldenring.exe+4584C1: F3 0F 5C 63 7C           - subss xmm4,[rbx+7C]
eldenring.exe+4584C6: F3 0F 59 C8              - mulss xmm1,xmm0
eldenring.exe+4584CA: F3 0F 59 D0              - mulss xmm2,xmm0
eldenring.exe+4584CE: F3 0F 58 4B 70           - addss xmm1,[rbx+70]
eldenring.exe+4584D3: F3 0F 59 D8              - mulss xmm3,xmm0
eldenring.exe+4584D7: F3 0F 58 53 74           - addss xmm2,[rbx+74]
eldenring.exe+4584DC: F3 0F 59 E0              - mulss xmm4,xmm0
eldenring.exe+4584E0: F3 0F 58 5B 78           - addss xmm3,[rbx+78]
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>192</ID>
          <Description>"自动汇编脚本"</Description>
          <Color>808080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : eldenring.exe
  Version: 
  Date   : 2022-02-24
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,eldenring.exe,4C 8D 05 C8 68 05 02 48 8B D0 E8 88) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  lea r8,[eldenring.exe+2A79328]
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 4C 8D 05 C8 68 05 02

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: eldenring.exe+A22A59

eldenring.exe+A22A23: E8 C8 61 B9 01        - call eldenring.exe+25B8BF0
eldenring.exe+A22A28: 48 8B 45 40           - mov rax,[rbp+40]
eldenring.exe+A22A2C: 48 8D 88 98 02 00 00  - lea rcx,[rax+00000298]
eldenring.exe+A22A33: 66 C7 41 20 01 01     - mov word ptr [rcx+20],0101
eldenring.exe+A22A39: 4C 8D 05 C0 68 05 02  - lea r8,[eldenring.exe+2A79300]
eldenring.exe+A22A40: 48 8B D0              - mov rdx,rax
eldenring.exe+A22A43: E8 A8 61 B9 01        - call eldenring.exe+25B8BF0
eldenring.exe+A22A48: 48 8B 45 40           - mov rax,[rbp+40]
eldenring.exe+A22A4C: 48 8D 88 E0 02 00 00  - lea rcx,[rax+000002E0]
eldenring.exe+A22A53: 66 C7 41 20 01 01     - mov word ptr [rcx+20],0101
// ---------- INJECTING HERE ----------
eldenring.exe+A22A59: 4C 8D 05 C8 68 05 02  - lea r8,[eldenring.exe+2A79328]
// ---------- DONE INJECTING  ----------
eldenring.exe+A22A60: 48 8B D0              - mov rdx,rax
eldenring.exe+A22A63: E8 88 61 B9 01        - call eldenring.exe+25B8BF0
eldenring.exe+A22A68: 48 8B 45 40           - mov rax,[rbp+40]
eldenring.exe+A22A6C: 48 8D 88 28 03 00 00  - lea rcx,[rax+00000328]
eldenring.exe+A22A73: 66 C7 41 20 01 01     - mov word ptr [rcx+20],0101
eldenring.exe+A22A79: 4C 8D 05 C8 68 05 02  - lea r8,[eldenring.exe+2A79348]
eldenring.exe+A22A80: 48 8B D0              - mov rdx,rax
eldenring.exe+A22A83: E8 68 61 B9 01        - call eldenring.exe+25B8BF0
eldenring.exe+A22A88: 48 8B 45 40           - mov rax,[rbp+40]
eldenring.exe+A22A8C: 48 8D 88 70 03 00 00  - lea rcx,[rax+00000370]
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
