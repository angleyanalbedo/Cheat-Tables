<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="38">
  <CheatEntries>
    <CheatEntry>
      <ID>28</ID>
      <Description>"/"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>18</ID>
          <Description>"tools"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>29</ID>
              <Description>"基本"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>17</ID>
                  <Description>"无精力损耗"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : guigubahuang.exe
  Version: 
  Date   : 2022-01-18
  Author : DELL-adminangleyan

  没有灵力损耗
}

define(address,"GameAssembly.dll"+168A302)
define(bytes,89 5F 64 85 DB)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"GameAssembly.dll"+168A302)

label(code)
label(return)

newmem:

code:

  test ebx,ebx
  jmp return

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // mov [rdi+64],ebx
  // test ebx,ebx

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+168A302

GameAssembly.dll+168A2DE: 49 8B D6           - mov rdx,r14
GameAssembly.dll+168A2E1: 48 8B CD           - mov rcx,rbp
GameAssembly.dll+168A2E4: E8 E7 FA 80 01     - call GameAssembly.dll+2E99DD0
GameAssembly.dll+168A2E9: 8B 77 64           - mov esi,[rdi+64]
GameAssembly.dll+168A2EC: 48 85 DB           - test rbx,rbx
GameAssembly.dll+168A2EF: 0F 84 75 01 00 00  - je GameAssembly.dll+168A46A
GameAssembly.dll+168A2F5: 33 D2              - xor edx,edx
GameAssembly.dll+168A2F7: 48 8B CB           - mov rcx,rbx
GameAssembly.dll+168A2FA: E8 B1 A2 A6 00     - call GameAssembly.dll+20F45B0
GameAssembly.dll+168A2FF: 8D 1C 30           - lea ebx,[rax+rsi]
// ---------- INJECTING HERE ----------
GameAssembly.dll+168A302: 89 5F 64           - mov [rdi+64],ebx
// ---------- DONE INJECTING  ----------
GameAssembly.dll+168A305: 85 DB              - test ebx,ebx
GameAssembly.dll+168A307: 79 05              - jns GameAssembly.dll+168A30E
GameAssembly.dll+168A309: 33 DB              - xor ebx,ebx
GameAssembly.dll+168A30B: 89 5F 64           - mov [rdi+64],ebx
GameAssembly.dll+168A30E: 48 8B 4F 78        - mov rcx,[rdi+78]
GameAssembly.dll+168A312: 48 85 C9           - test rcx,rcx
GameAssembly.dll+168A315: 0F 84 4F 01 00 00  - je GameAssembly.dll+168A46A
GameAssembly.dll+168A31B: 33 D2              - xor edx,edx
GameAssembly.dll+168A31D: E8 8E A2 A6 00     - call GameAssembly.dll+20F45B0
GameAssembly.dll+168A322: 3B D8              - cmp ebx,eax
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>2</ID>
                  <Description>"0精力"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"GameAssembly.dll"+127144D) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,0
originalcode:
mov [rax+0000009C],edx

exit:
jmp returnhere

"GameAssembly.dll"+127144D:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"GameAssembly.dll"+127144D:
mov [rax+0000009C],edx
//Alt: db 89 90 9C 00 00 00
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4</ID>
                  <Description>"无敌"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"GameAssembly.dll"+1689FC5) 
label(returnhere)
label(originalcode)
label(exit)
label(fun)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [rdi+18],1
je fun
mov ebx,0
originalcode:
mov [rdi+60],ebx
fun:
test ebx,ebx

exit:
jmp returnhere

"GameAssembly.dll"+1689FC5:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"GameAssembly.dll"+1689FC5:
mov [rdi+60],ebx
test ebx,ebx
//Alt: db 89 5F 60 85 DB
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>5</ID>
                  <Description>"加精力"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"GameAssembly.dll"+127144D) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,100
originalcode:
mov [rax+0000009C],edx

exit:
jmp returnhere

"GameAssembly.dll"+127144D:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"GameAssembly.dll"+127144D:
mov [rax+0000009C],edx
//Alt: db 89 90 9C 00 00 00
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>6</ID>
                  <Description>"锁血"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"GameAssembly.dll"+1689FC5) 
label(returnhere)
label(originalcode)
label(exit)
label(fun)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [rdi+18],1
je fun
mov ebx,0
originalcode:
mov [rdi+60],ebx
fun:
test ebx,ebx

exit:
jmp returnhere

"GameAssembly.dll"+1689FC5:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"GameAssembly.dll"+1689FC5:
mov [rdi+60],ebx
test ebx,ebx
//Alt: db 89 5F 60 85 DB
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>9</ID>
                  <Description>"加心情"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"GameAssembly.dll"+20F3DF6) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [rbp+00000080],100

exit:
jmp returnhere

"GameAssembly.dll"+20F3DF6:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"GameAssembly.dll"+20F3DF6:
mov [rbp+00000080],r15d
//Alt: db 44 89 BD 80 00 00 00
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>12</ID>
                  <Description>"增加资源"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : guigubahuang.exe
  Version: 
  Date   : 2022-01-18
  Author : DELL-adminangleyan

  增加资源
}

define(address,"GameAssembly.dll"+152D333)
define(bytes,8B 40 28 48 83 C4 28)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"GameAssembly.dll"+152D333)

label(code)
label(return)

newmem:
  mov [rax+28],9999999
code:
  mov eax,[rax+28]
  add rsp,28
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[rax+28]
  // add rsp,28

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+152D333

GameAssembly.dll+152D31C: CC              - int 3 
GameAssembly.dll+152D31D: CC              - int 3 
GameAssembly.dll+152D31E: CC              - int 3 
GameAssembly.dll+152D31F: CC              - int 3 
GameAssembly.dll+152D320: 48 83 EC 28     - sub rsp,28
GameAssembly.dll+152D324: 48 8B 41 18     - mov rax,[rcx+18]
GameAssembly.dll+152D328: 48 85 C0        - test rax,rax
GameAssembly.dll+152D32B: 74 0E           - je GameAssembly.dll+152D33B
GameAssembly.dll+152D32D: 83 78 18 02     - cmp dword ptr [rax+18],02
GameAssembly.dll+152D331: 76 0E           - jna GameAssembly.dll+152D341
// ---------- INJECTING HERE ----------
GameAssembly.dll+152D333: 8B 40 28        - mov eax,[rax+28]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+152D336: 48 83 C4 28     - add rsp,28
GameAssembly.dll+152D33A: C3              - ret 
GameAssembly.dll+152D33B: E8 20 4D BB FE  - call GameAssembly.dll+E2060
GameAssembly.dll+152D340: CC              - int 3 
GameAssembly.dll+152D341: E8 3A 49 BB FE  - call GameAssembly.dll+E1C80
GameAssembly.dll+152D346: 48 8B C8        - mov rcx,rax
GameAssembly.dll+152D349: 33 D2           - xor edx,edx
GameAssembly.dll+152D34B: E8 E0 4C BB FE  - call GameAssembly.dll+E2030
GameAssembly.dll+152D350: CC              - int 3 
GameAssembly.dll+152D351: CC              - int 3 
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>15</ID>
              <Description>"修改内存"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>24</ID>
                  <Description>"人物状态与无敌"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : guigubahuang.exe
  Version: 
  Date   : 2022-01-18
  Author : DELL

  显示人物状态基地址并且无敌
}

define(address,"GameAssembly.dll"+1689FC5)
define(bytes,89 5F 60 85 DB)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"GameAssembly.dll"+1689FC5)

label(code)
label(return)
label(stutas)
label(fun)
registerSymbol(stutas)
newmem:
mov qword ptr [stutas],rdi
cmp [rdi+18],1
je fun
mov ebx,0
code:
  mov [rdi+60],ebx
fun:
  test ebx,ebx
  jmp return
stutas:
  dd 0
  dd 0
  dd 0
  dd 0
address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // mov [rdi+60],ebx
  // test ebx,ebx

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+1689FC5

GameAssembly.dll+1689FA3: 48 85 DB              - test rbx,rbx
GameAssembly.dll+1689FA6: 0F 84 29 02 00 00     - je GameAssembly.dll+168A1D5
GameAssembly.dll+1689FAC: 45 33 C9              - xor r9d,r9d
GameAssembly.dll+1689FAF: 4C 8B C5              - mov r8,rbp
GameAssembly.dll+1689FB2: 49 8B D6              - mov rdx,r14
GameAssembly.dll+1689FB5: 48 8B CB              - mov rcx,rbx
GameAssembly.dll+1689FB8: E8 13 FE 80 01        - call GameAssembly.dll+2E99DD0
GameAssembly.dll+1689FBD: 8B 5E 28              - mov ebx,[rsi+28]
GameAssembly.dll+1689FC0: 8B 6F 60              - mov ebp,[rdi+60]
GameAssembly.dll+1689FC3: 03 DD                 - add ebx,ebp
// ---------- INJECTING HERE ----------
GameAssembly.dll+1689FC5: 89 5F 60              - mov [rdi+60],ebx
// ---------- DONE INJECTING  ----------
GameAssembly.dll+1689FC8: 85 DB                 - test ebx,ebx
GameAssembly.dll+1689FCA: 7F 29                 - jg GameAssembly.dll+1689FF5
GameAssembly.dll+1689FCC: 48 8B 4F 10           - mov rcx,[rdi+10]
GameAssembly.dll+1689FD0: 44 89 7F 60           - mov [rdi+60],r15d
GameAssembly.dll+1689FD4: 48 85 C9              - test rcx,rcx
GameAssembly.dll+1689FD7: 0F 84 F8 01 00 00     - je GameAssembly.dll+168A1D5
GameAssembly.dll+1689FDD: 48 8B 01              - mov rax,[rcx]
GameAssembly.dll+1689FE0: 4C 8B C6              - mov r8,rsi
GameAssembly.dll+1689FE3: B2 01                 - mov dl,01
GameAssembly.dll+1689FE5: 4C 8B 88 E0 01 00 00  - mov r9,[rax+000001E0]
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>26</ID>
                      <Description>"人物灵力"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>stutas</Address>
                      <Offsets>
                        <Offset>64</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>27</ID>
                      <Description>"人物念力"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>stutas</Address>
                      <Offsets>
                        <Offset>68</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>25</ID>
                      <Description>"人物血量"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>stutas</Address>
                      <Offsets>
                        <Offset>60</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>20</ID>
                  <Description>"精力的基地址"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : guigubahuang.exe
  Version: 
  Date   : 2022-01-18
  Author : DELL

  可以提供人物状态的基地址
}

define(address,"GameAssembly.dll"+127144D)
define(bytes,89 90 9C 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"GameAssembly.dll"+127144D)

label(code)
label(return)
label(jingli)
registerSymbol(jingli)

newmem:

code:
  mov qword ptr [jingli],edx
  mov [rax+0000009C],edx
  jmp return
jingli:
  dd 0
  dd 0
  dd 0
  dd 0
address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [rax+0000009C],edx

dealloc(newmem)
unregisterSymbol(jingli)
{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+127144D

GameAssembly.dll+127143A: CC                 - int 3 
GameAssembly.dll+127143B: CC                 - int 3 
GameAssembly.dll+127143C: CC                 - int 3 
GameAssembly.dll+127143D: CC                 - int 3 
GameAssembly.dll+127143E: CC                 - int 3 
GameAssembly.dll+127143F: CC                 - int 3 
GameAssembly.dll+1271440: 48 83 EC 28        - sub rsp,28
GameAssembly.dll+1271444: 48 8B 41 10        - mov rax,[rcx+10]
GameAssembly.dll+1271448: 48 85 C0           - test rax,rax
GameAssembly.dll+127144B: 74 0B              - je GameAssembly.dll+1271458
// ---------- INJECTING HERE ----------
GameAssembly.dll+127144D: 89 90 9C 00 00 00  - mov [rax+0000009C],edx
// ---------- DONE INJECTING  ----------
GameAssembly.dll+1271453: 48 83 C4 28        - add rsp,28
GameAssembly.dll+1271457: C3                 - ret 
GameAssembly.dll+1271458: E8 03 0C E7 FE     - call GameAssembly.dll+E2060
GameAssembly.dll+127145D: CC                 - int 3 
GameAssembly.dll+127145E: CC                 - int 3 
GameAssembly.dll+127145F: CC                 - int 3 
GameAssembly.dll+1271460: 48 83 EC 28        - sub rsp,28
GameAssembly.dll+1271464: 48 8B 41 10        - mov rax,[rcx+10]
GameAssembly.dll+1271468: 48 85 C0           - test rax,rax
GameAssembly.dll+127146B: 74 0B              - je GameAssembly.dll+1271478
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>21</ID>
                      <Description>"精力"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>jingli</Address>
                      <Offsets>
                        <Offset>9c</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>13</ID>
                  <Description>"城主令基地址"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : guigubahuang.exe
  Version: 
  Date   : 2022-01-18
  Author : DELL

  本来应该展现各种与钱的资源但是只有城主令
}

define(address,"GameAssembly.dll"+152D333)
define(bytes,8B 40 28 48 83 C4 28)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"GameAssembly.dll"+152D333)

label(code)
label(return)
label(data)
registerSYmbol(data)
newmem:

code:
  mov qword ptr [data],rax

  mov eax,[rax+28]
  add rsp,28
  jmp return
data:
  dd 0
  dd 0
  dd 0
  dd 0
address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[rax+28]
  // add rsp,28

dealloc(newmem)
unregisterSymbol(data)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+152D333

GameAssembly.dll+152D31C: CC              - int 3 
GameAssembly.dll+152D31D: CC              - int 3 
GameAssembly.dll+152D31E: CC              - int 3 
GameAssembly.dll+152D31F: CC              - int 3 
GameAssembly.dll+152D320: 48 83 EC 28     - sub rsp,28
GameAssembly.dll+152D324: 48 8B 41 18     - mov rax,[rcx+18]
GameAssembly.dll+152D328: 48 85 C0        - test rax,rax
GameAssembly.dll+152D32B: 74 0E           - je GameAssembly.dll+152D33B
GameAssembly.dll+152D32D: 83 78 18 02     - cmp dword ptr [rax+18],02
GameAssembly.dll+152D331: 76 0E           - jna GameAssembly.dll+152D341
// ---------- INJECTING HERE ----------
GameAssembly.dll+152D333: 8B 40 28        - mov eax,[rax+28]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+152D336: 48 83 C4 28     - add rsp,28
GameAssembly.dll+152D33A: C3              - ret 
GameAssembly.dll+152D33B: E8 20 4D BB FE  - call GameAssembly.dll+E2060
GameAssembly.dll+152D340: CC              - int 3 
GameAssembly.dll+152D341: E8 3A 49 BB FE  - call GameAssembly.dll+E1C80
GameAssembly.dll+152D346: 48 8B C8        - mov rcx,rax
GameAssembly.dll+152D349: 33 D2           - xor edx,edx
GameAssembly.dll+152D34B: E8 E0 4C BB FE  - call GameAssembly.dll+E2030
GameAssembly.dll+152D350: CC              - int 3 
GameAssembly.dll+152D351: CC              - int 3 
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14</ID>
                      <Description>"城主令"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>data</Address>
                      <Offsets>
                        <Offset>0x28</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>113</ID>
      <Description>"位置不能修改"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : guigubahuang.exe
  Version: 
  Date   : 2022-01-19
  Author : DELL

  This script does blah blah blah
}

define(address,"GameAssembly.dll"+193E78D)
define(bytes,F2 0F 11 81 20 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"GameAssembly.dll"+193E78D)
label(baseofpeo)
label(code)
label(return)
registerSymbol(baseofpeo)

newmem:
  mov qword ptr [baseofpeo],rcx
code:
  movsd [rcx+00000120],xmm0
  jmp return
baseofpeo:
  dd 0
  dd 0
  dd 0
  dd 0
address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // movsd [rcx+00000120],xmm0

dealloc(newmem)
unregisterSymbol(baseofpeo)
{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+193E78D

GameAssembly.dll+193E75D: F3 0F 11 4D C4           - movss [rbp-3C],xmm1
GameAssembly.dll+193E762: E8 79 C2 8E 01           - call GameAssembly.dll+322A9E0
GameAssembly.dll+193E767: 48 8B 4E 10              - mov rcx,[rsi+10]
GameAssembly.dll+193E76B: F3 0F 11 75 C0           - movss [rbp-40],xmm6
GameAssembly.dll+193E770: F3 0F 11 7D C4           - movss [rbp-3C],xmm7
GameAssembly.dll+193E775: C7 45 C8 00 00 00 00     - mov [rbp-38],00000000
GameAssembly.dll+193E77C: 48 85 C9                 - test rcx,rcx
GameAssembly.dll+193E77F: 0F 84 3A 01 00 00        - je GameAssembly.dll+193E8BF
GameAssembly.dll+193E785: F2 0F 10 45 C0           - movsd xmm0,[rbp-40]
GameAssembly.dll+193E78A: 8B 45 C8                 - mov eax,[rbp-38]
// ---------- INJECTING HERE ----------
GameAssembly.dll+193E78D: F2 0F 11 81 20 01 00 00  - movsd [rcx+00000120],xmm0
// ---------- DONE INJECTING  ----------
GameAssembly.dll+193E795: 89 81 28 01 00 00        - mov [rcx+00000128],eax
GameAssembly.dll+193E79B: 48 8B 4E 10              - mov rcx,[rsi+10]
GameAssembly.dll+193E79F: 48 85 C9                 - test rcx,rcx
GameAssembly.dll+193E7A2: 0F 84 17 01 00 00        - je GameAssembly.dll+193E8BF
GameAssembly.dll+193E7A8: 48 8B 49 28              - mov rcx,[rcx+28]
GameAssembly.dll+193E7AC: 45 33 C0                 - xor r8d,r8d
GameAssembly.dll+193E7AF: 33 D2                    - xor edx,edx
GameAssembly.dll+193E7B1: E8 8A C5 90 00           - call GameAssembly.dll+224AD40
GameAssembly.dll+193E7B6: 48 8B 46 10              - mov rax,[rsi+10]
GameAssembly.dll+193E7BA: 48 85 C0                 - test rax,rax
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>112</ID>
          <Description>"x"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>baseofpeo</Address>
          <Offsets>
            <Offset>120</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>114</ID>
          <Description>"y"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>baseofpeo</Address>
          <Offsets>
            <Offset>124</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>141</ID>
      <Description>"位置基地址"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : guigubahuang.exe
  Version: 
  Date   : 2022-01-20
  Author : DELL

  This script does blah blah blah
}

define(address,"UnityPlayer.dll"+7F7686)
define(bytes,0F 11 12 A8 07)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"UnityPlayer.dll"+7F7686)

label(code)
label(return)
label(baseloc)
label(tmp)
registersymbol(baseloc)

newmem:

  cmp [rdx+98],(float)1
  jle code
  mov qword ptr [baseloc],rdx
code:
  movups [rdx],xmm2
  test al,07
  jmp return
baseloc:
  dd 0
  dd 0
  dd 0
tmp:
  dd 0
  dd 0
  dd 0
address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // movups [rdx],xmm2
  // test al,07

dealloc(newmem)
unregistersymbol(baseloc)
{
// ORIGINAL CODE - INJECTION POINT: UnityPlayer.dll+7F7686

UnityPlayer.dll+7F765E: 66 0F 6F C1           - movdqa xmm0,xmm1
UnityPlayer.dll+7F7662: 66 0F 73 D8 08        - psrldq xmm0,08
UnityPlayer.dll+7F7667: 66 0F 7E C0           - movd eax,xmm0
UnityPlayer.dll+7F766B: 48 8D 14 40           - lea rdx,[rax+rax*2]
UnityPlayer.dll+7F766F: 66 48 0F 7E C8        - movq rax,xmm1
UnityPlayer.dll+7F7674: 48 C1 E2 04           - shl rdx,04
UnityPlayer.dll+7F7678: 48 03 50 18           - add rdx,[rax+18]
UnityPlayer.dll+7F767C: 0F 10 02              - movups xmm0,[rdx]
UnityPlayer.dll+7F767F: 0F C2 C2 04           - cmpps xmm0,xmm2,04
UnityPlayer.dll+7F7683: 0F 50 C0              - movmskps eax,xmm0
// ---------- INJECTING HERE ----------
UnityPlayer.dll+7F7686: 0F 11 12              - movups [rdx],xmm2
// ---------- DONE INJECTING  ----------
UnityPlayer.dll+7F7689: A8 07                 - test al,07
UnityPlayer.dll+7F768B: 0F 84 8E 00 00 00     - je UnityPlayer.dll+7F771F
UnityPlayer.dll+7F7691: 4C 8B 15 30 79 20 01  - mov r10,[UnityPlayer.dll+19FEFC8]
UnityPlayer.dll+7F7698: 66 49 0F 7E C9        - movq r9,xmm1
UnityPlayer.dll+7F769D: 48 8B 0D 0C 79 20 01  - mov rcx,[UnityPlayer.dll+19FEFB0]
UnityPlayer.dll+7F76A4: 66 0F 6F C1           - movdqa xmm0,xmm1
UnityPlayer.dll+7F76A8: 49 0B CA              - or rcx,r10
UnityPlayer.dll+7F76AB: 66 0F 73 D8 08        - psrldq xmm0,08
UnityPlayer.dll+7F76B0: 66 41 0F 7E C0        - movd r8d,xmm0
UnityPlayer.dll+7F76B5: 49 8B 41 50           - mov rax,[r9+50]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>142</ID>
          <Description>"位置"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>baseloc</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>143</ID>
          <Description>"y轴位置"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>baseloc</Address>
          <Offsets>
            <Offset>4</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
    <Structure Name="unnamed structure" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="Float" Bytesize="4" OffsetHex="00000000" DisplayMethod="Signed Integer"/>
        <Element Offset="4" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000004" DisplayMethod="Signed Integer"/>
        <Element Offset="8" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000008" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16" Vartype="Float" Bytesize="4" OffsetHex="00000010" Description="134" DisplayMethod="Signed Integer"/>
        <Element Offset="24" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000018" DisplayMethod="Signed Integer"/>
        <Element Offset="32" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000020" DisplayMethod="Signed Integer"/>
        <Element Offset="40" Vartype="Float" Bytesize="4" OffsetHex="00000028" DisplayMethod="Signed Integer"/>
        <Element Offset="48" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000030" DisplayMethod="Signed Integer"/>
        <Element Offset="56" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00000038" DisplayMethod="Unsigned Integer"/>
        <Element Offset="80" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000050" DisplayMethod="Signed Integer"/>
        <Element Offset="88" Vartype="Pointer" Bytesize="8" RLECount="39" OffsetHex="00000058" DisplayMethod="Unsigned Integer"/>
        <Element Offset="400" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000190" DisplayMethod="Unsigned Integer"/>
        <Element Offset="404" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000194" DisplayMethod="Hexadecimal"/>
        <Element Offset="408" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000198" DisplayMethod="Unsigned Integer"/>
        <Element Offset="424" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000001A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="432" Vartype="Pointer" Bytesize="8" RLECount="5" OffsetHex="000001B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="472" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000001D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="480" Vartype="Pointer" Bytesize="8" OffsetHex="000001E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="488" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000001E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="512" Vartype="Pointer" Bytesize="8" RLECount="35" OffsetHex="00000200" DisplayMethod="Unsigned Integer"/>
        <Element Offset="792" Vartype="4 Bytes" Bytesize="4" RLECount="66" OffsetHex="00000318" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1056" Vartype="Pointer" Bytesize="8" OffsetHex="00000420" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1064" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000428" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1088" Vartype="Pointer" Bytesize="8" RLECount="35" OffsetHex="00000440" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1368" Vartype="4 Bytes" Bytesize="4" RLECount="66" OffsetHex="00000558" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1632" Vartype="Pointer" Bytesize="8" OffsetHex="00000660" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1640" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000668" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1664" Vartype="Pointer" Bytesize="8" RLECount="34" OffsetHex="00000680" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1936" Vartype="4 Bytes" Bytesize="4" RLECount="68" OffsetHex="00000790" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2208" Vartype="Pointer" Bytesize="8" OffsetHex="000008A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2216" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000008A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2240" Vartype="Pointer" Bytesize="8" RLECount="34" OffsetHex="000008C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2512" Vartype="4 Bytes" Bytesize="4" RLECount="84" OffsetHex="000009D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2848" Vartype="Pointer" Bytesize="8" OffsetHex="00000B20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2856" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2864" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000B30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2880" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000B40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2896" Vartype="Pointer" Bytesize="8" OffsetHex="00000B50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2904" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2912" Vartype="Pointer" Bytesize="8" OffsetHex="00000B60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2920" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000B68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2944" Vartype="Pointer" Bytesize="8" OffsetHex="00000B80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2952" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2960" Vartype="Pointer" Bytesize="8" OffsetHex="00000B90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2968" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000B98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2992" Vartype="Pointer" Bytesize="8" OffsetHex="00000BB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3000" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000BB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3008" Vartype="Pointer" Bytesize="8" OffsetHex="00000BC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3016" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000BC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3040" Vartype="Pointer" Bytesize="8" OffsetHex="00000BE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3048" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000BE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3056" Vartype="Pointer" Bytesize="8" OffsetHex="00000BF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3064" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000BF8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3088" Vartype="Pointer" Bytesize="8" OffsetHex="00000C10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3096" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000C18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3104" Vartype="Pointer" Bytesize="8" OffsetHex="00000C20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3112" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000C28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3136" Vartype="Pointer" Bytesize="8" OffsetHex="00000C40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3144" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000C48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3152" Vartype="Pointer" Bytesize="8" OffsetHex="00000C50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3160" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000C58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3184" Vartype="Pointer" Bytesize="8" OffsetHex="00000C70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3192" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000C78" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3200" Vartype="Pointer" Bytesize="8" OffsetHex="00000C80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3208" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000C88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3232" Vartype="Pointer" Bytesize="8" OffsetHex="00000CA0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3240" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000CA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3248" Vartype="Pointer" Bytesize="8" OffsetHex="00000CB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3256" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000CB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3280" Vartype="Pointer" Bytesize="8" OffsetHex="00000CD0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3288" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000CD8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3296" Vartype="Pointer" Bytesize="8" OffsetHex="00000CE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3304" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000CE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3328" Vartype="Pointer" Bytesize="8" OffsetHex="00000D00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3336" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3344" Vartype="Pointer" Bytesize="8" OffsetHex="00000D10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3352" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000D18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3376" Vartype="Pointer" Bytesize="8" OffsetHex="00000D30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3384" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D38" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3392" Vartype="Pointer" Bytesize="8" OffsetHex="00000D40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3400" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000D48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3424" Vartype="Pointer" Bytesize="8" OffsetHex="00000D60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3432" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3440" Vartype="Pointer" Bytesize="8" OffsetHex="00000D70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3448" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000D78" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3472" Vartype="Pointer" Bytesize="8" OffsetHex="00000D90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3480" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3488" Vartype="Pointer" Bytesize="8" OffsetHex="00000DA0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3496" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000DA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3520" Vartype="Pointer" Bytesize="8" OffsetHex="00000DC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3528" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3536" Vartype="Pointer" Bytesize="8" OffsetHex="00000DD0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3544" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000DD8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3568" Vartype="Pointer" Bytesize="8" OffsetHex="00000DF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3576" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DF8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3584" Vartype="Pointer" Bytesize="8" OffsetHex="00000E00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3592" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000E08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3616" Vartype="Pointer" Bytesize="8" OffsetHex="00000E20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3624" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3632" Vartype="Pointer" Bytesize="8" OffsetHex="00000E30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3640" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000E38" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3664" Vartype="Pointer" Bytesize="8" OffsetHex="00000E50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3672" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3680" Vartype="Pointer" Bytesize="8" OffsetHex="00000E60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3688" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000E68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3712" Vartype="Pointer" Bytesize="8" OffsetHex="00000E80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3720" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3728" Vartype="Pointer" Bytesize="8" OffsetHex="00000E90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3736" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000E98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3760" Vartype="Pointer" Bytesize="8" OffsetHex="00000EB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3768" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000EB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3776" Vartype="Pointer" Bytesize="8" OffsetHex="00000EC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3784" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000EC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3808" Vartype="Pointer" Bytesize="8" OffsetHex="00000EE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3816" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000EE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3824" Vartype="Pointer" Bytesize="8" OffsetHex="00000EF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3832" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000EF8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3856" Vartype="Pointer" Bytesize="8" OffsetHex="00000F10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3864" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3872" Vartype="Pointer" Bytesize="8" OffsetHex="00000F20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3880" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000F28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3904" Vartype="Pointer" Bytesize="8" OffsetHex="00000F40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3912" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3920" Vartype="Pointer" Bytesize="8" OffsetHex="00000F50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3928" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000F58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3952" Vartype="Pointer" Bytesize="8" OffsetHex="00000F70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3960" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F78" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3968" Vartype="Pointer" Bytesize="8" OffsetHex="00000F80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3976" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000F88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4000" Vartype="Pointer" Bytesize="8" OffsetHex="00000FA0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4008" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000FA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4016" Vartype="Pointer" Bytesize="8" OffsetHex="00000FB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4024" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000FB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4048" Vartype="Pointer" Bytesize="8" OffsetHex="00000FD0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4056" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000FD8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4064" Vartype="Pointer" Bytesize="8" OffsetHex="00000FE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4072" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000FE8" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
  </Structures>
  <Comments>偏移 db8 0 如果是 位置是0</Comments>
</CheatTable>
