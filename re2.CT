<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="29">
  <CheatEntries>
    <CheatEntry>
      <ID>12997</ID>
      <Description>"enable .2a"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(damageHandle1AOB,re2.exe,8B 43 7C 89 46 7C 48 8B 47 50)
registersymbol(damageHandle1AOB)
aobscanmodule(totalGameTimeWriteAOB,re2.exe,E8 ** ** ** ** EB 08 48 ** ** ** 48 ** ** ** 48 ** ** ** 4C ** ** ** 0F 85 ** ** ** ** 44 ** ** ** 0F 85)
registersymbol(totalGameTimeWriteAOB)

///*******************************************///
//current ammo clip read on fine aim / on reload / after rload until next exit fine aim
aobscanmodule(ammoClipReadOnAimReloadAOB,re2.exe,48 ** ** A0 00 00 00 48 ** ** 74 ** 48 ** ** ** 48 ** ** 74 ** 48 ** ** ** 48 ** ** 74 ** 8B ** 20 48 ** ** ** ** 48 ** ** ** 5F C3)
registersymbol(ammoClipReadOnAimReloadAOB)

label(pAmmo)
registersymbol(pAmmo)
label(dAmmoClipMax)
registersymbol(dAmmoClipMax)

alloc(newmem,2048,ammoClipReadOnAimReloadAOB+1e) //"re2.exe"+E993E19)
label(returnhere)
label(originalcode_ammoClipReadOnAimReloadAOB)
registersymbol(originalcode_ammoClipReadOnAimReloadAOB)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rcx
mov rcx,pAmmo
mov [rcx],rax
mov byte ptr [rcx+8],1
cmp byte ptr [rcx+c],0
je end
//mov byte ptr [rcx+c],0
mov rbx,dAmmoClipMax
mov ebx,[rbx]
test ebx,ebx
jg @f
mov ebx,2
@@:
cmp [rax+20],ebx
jge end
cmp dword ptr [rax+14],9 //SLS 60
jne @f
//mov ebx,5
//mov edi,[rax+18]
//shr edi,1
//test dil,dil             //Quick Loader
mov edi,[rax+18]
and edi,2
cmp edi,2                  //Quick Loader
jne doinc
@@:
cmp dword ptr [rax+14],4 //Quickdraw Army
je doinc
@@:
cmp dword ptr [rax+14],b //W-870
jne @f
mov edi,[rax+18]
and edi,1
cmp edi,1
jne doinc
inc [rax+20]
jmp doinc
@@:
jmp customammoclipassign

doinc:
cmp byte ptr [rcx+c],1
jne end
inc [rax+20]
cmp [rax+20],ebx
jle end

customammoclipassign:
mov [rax+20],ebx

end:
mov byte ptr [rcx+c],0
pop rcx

originalcode_ammoClipReadOnAimReloadAOB:
readmem(ammoClipReadOnAimReloadAOB+1e,8)
//mov eax,[rax+20]
//mov rbx,[rsp+30]

exit:
jmp returnhere

///
pAmmo:
dq 0
dq 0
dAmmoClipMax:
dq 1
dq 0
dq 0
///

ammoClipReadOnAimReloadAOB+1e: //"re2.exe"+E993E19:
jmp newmem
nop
nop
nop
returnhere:

///*******************************************///
//current ammo clip chk max
aobscanmodule(ammoClipMaxCChkAOB,re2.exe,74 0C 48 ** ** 10 48 ** ** 74 03 8B ** ** ** ** 48 ** ** ** ** 0F 9E)
registersymbol(ammoClipMaxCChkAOB)

alloc(newmem2,2048,ammoClipMaxCChkAOB+e) //"re2.exe"+B8BE4D2)
label(returnhere2)
label(originalcode2_ammoClipMaxCChkAOB)
registersymbol(originalcode2_ammoClipMaxCChkAOB)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov rsi,dAmmoClipMax
mov [rsi],edx

originalcode2_ammoClipMaxCChkAOB:
readmem(ammoClipMaxCChkAOB+e,7)
//cmp edx,ebx
//mov rbx,[rsp+30]

exit2:
jmp returnhere2

///

ammoClipMaxCChkAOB+e: //"re2.exe"+B8BE4D2:
jmp newmem2
nop
nop
returnhere2:

///*******************************************///
//player health read 4 bytes, start: 1200
aobscanmodule(playerHealthCReadAOB,re2.exe,8B ** ** 48 ** ** ** ** 48 ** ** ** 5F C3 48 ** ** ** ** B8 01)
registersymbol(playerHealthCReadAOB)

label(pPlayer)
registersymbol(pPlayer)
label(pPlayerBase)
registersymbol(pPlayerBase)

alloc(newmem6,2048,playerHealthCReadAOB) //"re2.exe"+8F11DE3)
label(returnhere6)
label(originalcode6_playerHealthCReadAOB)
registersymbol(originalcode6_playerHealthCReadAOB)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov rbx,pPlayer
mov [rbx],rax
mov [rbx+8],rdi

originalcode6_playerHealthCReadAOB:
readmem(playerHealthCReadAOB,8)
//mov eax,[rax+58]
//mov rbx,[rsp+30]

exit6:
jmp returnhere6

///
pPlayer:
dq 0
pPlayerBase:
dq 0
///

playerHealthCReadAOB: //"re2.exe"+8F11DE3:
jmp newmem6
nop
nop
nop
returnhere6:

///*******************************************///
aobscanmodule(someItemQWrite3AOB,re2.exe,41 ** ** ** 48 ** ** ** ** 48 ** ** ** ** 48 ** ** ** 5F E9 ** ** ** ** 89 ** ** 48 ** 74 ** ** 48 ** ** ** ** 48 ** ** ** 5F C3)
registersymbol(someItemQWrite3AOB)

alloc(newmem3,2048,someItemQWrite3AOB+18) //"re2.exe"+B8BC63A)
label(returnhere3)
label(originalcode3_someItemQWrite3AOB)
registersymbol(originalcode3_someItemQWrite3AOB)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
mov rsi,pAmmo
cmp byte ptr [rsi+c],1
jne @f
inc byte ptr [rsi+c]

originalcode3_someItemQWrite3AOB:
readmem(someItemQWrite3AOB+18,8)
//mov [rax+20],ebx
//mov rsi,[rsp+30]

exit3:
jmp returnhere3

///

someItemQWrite3AOB+18: //"re2.exe"+B8BC63A:
jmp newmem3
nop
nop
nop
returnhere3:

///*******************************************///
aobscanmodule(readiedWeaponChkAOB,re2.exe,44 ** ** ** ** ** ** 75 ** 44 ** ** ** ** ** ** 75 ** 40)
registersymbol(readiedWeaponChkAOB)

label(pReadiedWeapon)
registersymbol(pReadiedWeapon)
label(dCusFCamZOffset)
registersymbol(dCusFCamZOffset)

alloc(newmem7,2048,readiedWeaponChkAOB+9) //"re2.exe"+B45CCE1)
label(returnhere7)
label(originalcode7_readiedWeaponChkAOB)
registersymbol(originalcode7_readiedWeaponChkAOB)
label(exit7)

newmem7: //this is allocated memory, you have read,write,execute access
//place your code here
mov rdx,pReadiedWeapon
db 48 8D 8F
readmem(readiedWeaponChkAOB+c,4)
//lea rcx,[rdi+198]
mov [rdx],rcx

originalcode7_readiedWeaponChkAOB:
readmem(readiedWeaponChkAOB+9,7)
//cmp [rdi+00000198],r12d

exit7:
jmp returnhere7

///
pReadiedWeapon:
dq 0
dCusFCamZOffset:
dd (float)-0.18 //+0  //current fcam z
dd (float)-0.18 //+4  //dest fcam z
dd (float)-0.18 //+8  //cust fcam z
dd (float)0.012 //+c  //interval
dd (float)15    //+10 //# of intervals
dd (float)-1    //+14 //neg
dd 0            //+18 //
dd (float)-0.2  //+1c //cust fcam aim z
///

readiedWeaponChkAOB+9: //"re2.exe"+B45CCE1:
jmp newmem7
nop
nop
returnhere7:

///*******************************************///
label(pSomeGameStatus)
registersymbol(pSomeGameStatus)

alloc(newmem8,2048,totalGameTimeWriteAOB+1d) //"re2.exe"+AD9D90B)
label(returnhere8)
label(originalcode8_totalGameTimeWriteAOB)
registersymbol(originalcode8_totalGameTimeWriteAOB)
label(exit8)

newmem8: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
mov rax,pSomeGameStatus
mov [rax],rdi
pop rax
readmem(totalGameTimeWriteAOB+1d,4)
reassemble(totalGameTimeWriteAOB+21)
jmp exit8

originalcode8_totalGameTimeWriteAOB:
readmem(totalGameTimeWriteAOB+1d,10)
//cmp [rdi+53],r14l
//jne re2.exe+AD9D9AE

exit8:
jmp returnhere8

///
pSomeGameStatus:
///

totalGameTimeWriteAOB+1d: //"re2.exe"+AD9D90B:
jmp newmem8
nop
nop
nop
nop
nop
returnhere8:

///*******************************************///




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammoClipReadOnAimReloadAOB+1e: //"re2.exe"+E993E19:
readmem(originalcode_ammoClipReadOnAimReloadAOB,8)
//db 8B 40 20 48 8B 5C 24 30
//Alt: mov eax,[rax+20]
//Alt: mov rbx,[rsp+30]
unregistersymbol(originalcode_ammoClipReadOnAimReloadAOB)

unregistersymbol(pAmmo)
unregistersymbol(dAmmoClipMax)

///*******************************************///
dealloc(newmem2)
ammoClipMaxCChkAOB+e: //"re2.exe"+B8BE4D2:
readmem(originalcode2_ammoClipMaxCChkAOB,7)
//db 39 DA 48 8B 5C 24 30
//Alt: cmp edx,ebx
//Alt: mov rbx,[rsp+30]
unregistersymbol(originalcode2_ammoClipMaxCChkAOB)

///*******************************************///
dealloc(newmem6)
playerHealthCReadAOB: //"re2.exe"+8F11DE3:
readmem(originalcode6_playerHealthCReadAOB,8)
//db 8B 40 58 48 8B 5C 24 30
//Alt: mov eax,[rax+58]
//Alt: mov rbx,[rsp+30]
unregistersymbol(originalcode6_playerHealthCReadAOB)


unregistersymbol(pPlayer)
unregistersymbol(pPlayerBase)

///*******************************************///
dealloc(newmem3)
someItemQWrite3AOB+18: //"re2.exe"+B8BC63A:
readmem(originalcode3_someItemQWrite3AOB,8)
//db 89 58 20 48 8B 74 24 30
//Alt: mov [rax+20],ebx
//Alt: mov rsi,[rsp+30]
unregistersymbol(originalcode3_someItemQWrite3AOB)

///*******************************************///
dealloc(newmem7)
readiedWeaponChkAOB+9: //"re2.exe"+B45CCE1:
readmem(originalcode7_readiedWeaponChkAOB,7)
//db 44 39 A7 98 01 00 00
//Alt: cmp [rdi+00000198],r12d
unregistersymbol(originalcode7_readiedWeaponChkAOB)

unregistersymbol(pReadiedWeapon)
unregistersymbol(dCusFCamZOffset)

///*******************************************///
dealloc(newmem8)
totalGameTimeWriteAOB+1d: //"re2.exe"+AD9D90B:
readmem(originalcode8_totalGameTimeWriteAOB,10)
db 44 38 77 53 0F 85 99 00 00 00
//Alt: cmp [rdi+53],r14l
//Alt: jne re2.exe+AD9D9AE
unregistersymbol(originalcode8_totalGameTimeWriteAOB)

unregistersymbol(pSomeGameStatus)

///*******************************************///
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>12998</ID>
          <Description>"undead .5"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
define(dminhealthdefault,#360)

label(pPlayerJustHit)
registersymbol(pPlayerJustHit)
label(pPAttackedInfo)
registersymbol(pPAttackedInfo)
label(pPAttackedInfo2)
registersymbol(pPAttackedInfo2)
label(dMinHealth)
registersymbol(dMinHealth)

alloc(newmem8,2048,damageHandle1AOB) //"re2.exe"+B9766D3)
label(returnhere8)
label(originalcode8_damageHandle1AOB)
registersymbol(originalcode8_damageHandle1AOB)
label(exit8)

newmem8: //this is allocated memory, you have read,write,execute access
//place your code here
push r14
push rdx
mov rax,pPlayer
mov rdx,[rbp+b8]
cmp [rax],rdx
jne notplayer8

mov rax,pPlayerJustHit
mov [rax],rbp
mov rax,pPAttackedInfo
mov [rax],rbx
mov rax,pPAttackedInfo2
mov [rax],rcx


mov r14,dMinHealth
mov eax,[rdx+58]
sub eax,[rbx+7c]
cmp eax,[r14+4]
jg @f
mov byte ptr [rdx+5c],1 //god flag
@@:
cmp eax,[r14]
jg @f
xor eax,eax
mov [rbx+7c],eax
mov eax,[r14]
mov [rdx+58],eax
@@:
jmp end8

notplayer8:

end8:
pop rdx
pop r14

originalcode8_damageHandle1AOB:
readmem(damageHandle1AOB,6)
//mov eax,[rbx+7C]
//mov [rsi+7C],eax

exit8:
jmp returnhere8

///
pPlayerJustHit:
dq 0
pPAttackedInfo:
dq 0
pPAttackedInfo2:
dq 0
dMinHealth:
dd dminhealthdefault
dd #360
///

damageHandle1AOB: //"re2.exe"+B9766D3:
jmp newmem8
nop
returnhere8:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem8)
damageHandle1AOB: //"re2.exe"+B9766D3:
readmem(originalcode8_damageHandle1AOB,6)
//db 8B 43 7C 89 46 7C
//Alt: mov eax,[rbx+7C]
//Alt: mov [rsi+7C],eax
unregistersymbol(originalcode8_damageHandle1AOB)


unregistersymbol(pPlayerJustHit)
unregistersymbol(pPAttackedInfo)
unregistersymbol(pPAttackedInfo2)
unregistersymbol(dMinHealth)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>13060</ID>
              <Description>"min health"</Description>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>dMinHealth</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>13061</ID>
                  <Description>"don't set lower than 360"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>13062</ID>
          <Description>"damage mod"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
define(ddamagemultiplierdefault,(float)1)

label(pEnemyJustHit)
registersymbol(pEnemyJustHit)
label(pAttackInfo)
registersymbol(pAttackInfo)
label(pAttackInfo2)
registersymbol(pAttackInfo2)
label(bIsEnemy)
registersymbol(bIsEnemy)
label(dDamageMultiplier)
registersymbol(dDamageMultiplier)
label(bWeakLimbsKey)
registersymbol(bWeakLimbsKey)
label(bWeakLimbs)
registersymbol(bWeakLimbs)

alloc(newmem2,2048,damageHandle1AOB+6) //"re2.exe"+B9766D9)
label(returnhere2)
label(originalcode2_damageHandle1AOB)
registersymbol(originalcode2_damageHandle1AOB)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push rdx
mov rax,pPlayer
mov rdx,[rbp+b8]
cmp [rax],rdx
pop rdx
je @f
mov rax,pEnemyJustHit
mov [rax],rbp
mov rax,pAttackInfo
mov [rax],rbx
mov rax,pAttackInfo2
mov [rax],rcx

mov rax,bIsEnemy
mov byte ptr [rax],1

mov rax,dDamageMultiplier
fild dword ptr [rbx+7c]
fmul dword ptr [rax]
fist dword ptr [rsi+7c]
fistp dword ptr [rbx+7c]
//fld1
//fst dword ptr [rbx+80]
//fst dword ptr [rbx+8c]
//fstp dword ptr [rbx+90]

originalcode2_damageHandle1AOB:
readmem(damageHandle1AOB+6,9)
//mov rax,[rdi+50]
//cmp qword ptr [rax+18],00

exit2:
jmp returnhere2

///
pEnemyJustHit:
dq 0
pAttackInfo:
dq 0
pAttackInfo2:
dq 0
bIsEnemy:
dd 0
dDamageMultiplier:
dd ddamagemultiplierdefault
bWeakLimbsKey:
dd 14
bWeakLimbs:
dd 0
dd 0
///

damageHandle1AOB+6: //"re2.exe"+B9766D9:
jmp newmem2
nop
nop
nop
nop
returnhere2:

///*******************************************///
aobscanmodule(cJmpIfNormalAttackAOB,re2.exe,48 ** ** ** 00 0F 85 ** ** ** ** 48 ** ** 74 ** 83 ** ** 00 7E)
registersymbol(cJmpIfNormalAttackAOB)

alloc(newmem6,2048,cJmpIfNormalAttackAOB+10) //"re2.exe"+6940E6)
label(returnhere6)
label(originalcode6_cJmpIfNormalAttackAOB)
registersymbol(originalcode6_cJmpIfNormalAttackAOB)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov rdi,bIsEnemy
cmp byte ptr [rdi],1
jne end6
inc byte ptr [rdi]

mov rdi,bWeakLimbs
cmp byte ptr [rdi],1
je @f

cmp byte ptr [rdi+4],1
jne end6

@@:
readmem(cJmpIfNormalAttackAOB+10,4)
//cmp dword ptr [rax+1C],00
jg @f
db C7 40
readmem(cJmpIfNormalAttackAOB+12,1)
db 01 00 00 00
//mov dword ptr [rax+1c],1

end6:
readmem(cJmpIfNormalAttackAOB+10,4)
reassemble(cJmpIfNormalAttackAOB+14)
jmp exit6

originalcode6_cJmpIfNormalAttackAOB:
readmem(cJmpIfNormalAttackAOB+10,6)
//cmp dword ptr [rax+1C],00
//jle re2.exe+694138

exit6:
jmp returnhere6

///

cJmpIfNormalAttackAOB+10: //"re2.exe"+6940E6:
jmp newmem6
nop
returnhere6:

///*******************************************///
aobscanmodule(dsmageSpecialEffectReadAOB,re2.exe,8B ** ** ** ** 00 02 00 00 0F 8E ** ** ** ** ** 00 00 02 00)
registersymbol(dsmageSpecialEffectReadAOB)

alloc(newmem12,2048,dsmageSpecialEffectReadAOB) //"re2.exe"+A3DDB96)
label(returnhere12)
label(originalcode12_dsmageSpecialEffectReadAOB)
registersymbol(originalcode12_dsmageSpecialEffectReadAOB)
label(exit12)

newmem12: //this is allocated memory, you have read,write,execute access
//place your code here
push rdi
mov rdi,bIsEnemy
cmp byte ptr [rdi],2
jne end12
xor eax,eax
mov [rdi],eax

mov rdi,bWeakLimbs
cmp byte ptr [rdi],1
je @f

cmp byte ptr [rdi+4],1
jne end12

@@:
mov eax,40
db 89
readmem(dsmageSpecialEffectReadAOB+1,3)
//mov [rbx+rsi*4+20],eax

end12:
pop rdi

originalcode12_dsmageSpecialEffectReadAOB:
readmem(dsmageSpecialEffectReadAOB,9)
//mov eax,[rbx+rsi*4+20]
//cmp eax,00000200

exit12:
jmp returnhere12

///

dsmageSpecialEffectReadAOB: //"re2.exe"+A3DDB96:
jmp newmem12
nop
nop
nop
nop
returnhere12:

///*******************************************///


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
damageHandle1AOB+6: //"re2.exe"+B9766D9:
readmem(originalcode2_damageHandle1AOB,9)
//db 48 8B 47 50 48 83 78 18 00
//Alt: mov rax,[rdi+50]
//Alt: cmp qword ptr [rax+18],00
unregistersymbol(originalcode2_damageHandle1AOB)

unregistersymbol(pEnemyJustHit)
unregistersymbol(pAttackInfo)
unregistersymbol(pAttackInfo2)
unregistersymbol(bIsEnemy)
unregistersymbol(dDamageMultiplier)
unregistersymbol(bWeakLimbsKey)
unregistersymbol(bWeakLimbs)

///*******************************************///
dealloc(newmem6)
cJmpIfNormalAttackAOB+10: //"re2.exe"+6940E6:
readmem(originalcode6_cJmpIfNormalAttackAOB,6)
//db 83 78 1C 00 7E 4C
//Alt: cmp dword ptr [rax+1C],00
//Alt: jle re2.exe+694138
unregistersymbol(originalcode6_cJmpIfNormalAttackAOB)

///*******************************************///
dealloc(newmem12)
dsmageSpecialEffectReadAOB: //"re2.exe"+A3DDB96:
readmem(originalcode12_dsmageSpecialEffectReadAOB,9)
//db 8B 44 B3 20 3D 00 02 00 00
//Alt: mov eax,[rbx+rsi*4+20]
//Alt: cmp eax,00000200
unregistersymbol(originalcode12_dsmageSpecialEffectReadAOB)

///*******************************************///
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>13693</ID>
              <Description>"damage multiplier"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
dDamageMultiplier:
dd (float)2


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dDamageMultiplier:
dd (float)1
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>13063</ID>
                  <Description>"x?"</Description>
                  <Options moHideChildren="1"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>dDamageMultiplier</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>13580</ID>
                      <Description>"enemy base"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>000080</Color>
                      <VariableType>Array of byte</VariableType>
                      <ByteLength>0</ByteLength>
                      <Address>pEnemyJustHit</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>13614</ID>
                          <Description>"+120"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>000080</Color>
                          <VariableType>Array of byte</VariableType>
                          <ByteLength>0</ByteLength>
                          <Address>+120</Address>
                          <Offsets>
                            <Offset>0</Offset>
                          </Offsets>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>13613</ID>
                              <Description>"+28"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <Color>000080</Color>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>0</ByteLength>
                              <Address>+28</Address>
                              <Offsets>
                                <Offset>0</Offset>
                              </Offsets>
                              <CheatEntries>
                                <CheatEntry>
                                  <ID>13615</ID>
                                  <Description>"+60"</Description>
                                  <LastState Value="" RealAddress="00000000"/>
                                  <Color>000080</Color>
                                  <VariableType>Array of byte</VariableType>
                                  <ByteLength>0</ByteLength>
                                  <Address>+60</Address>
                                  <Offsets>
                                    <Offset>0</Offset>
                                  </Offsets>
                                  <CheatEntries>
                                    <CheatEntry>
                                      <ID>13617</ID>
                                      <Description>"+10"</Description>
                                      <ShowAsHex>1</ShowAsHex>
                                      <Color>0000FF</Color>
                                      <VariableType>4 Bytes</VariableType>
                                      <Address>+10</Address>
                                    </CheatEntry>
                                  </CheatEntries>
                                </CheatEntry>
                                <CheatEntry>
                                  <ID>13616</ID>
                                  <Description>"+68"</Description>
                                  <LastState Value="" RealAddress="00000000"/>
                                  <Color>000080</Color>
                                  <VariableType>Array of byte</VariableType>
                                  <ByteLength>0</ByteLength>
                                  <Address>+68</Address>
                                  <Offsets>
                                    <Offset>0</Offset>
                                  </Offsets>
                                  <CheatEntries>
                                    <CheatEntry>
                                      <ID>13618</ID>
                                      <Description>"+10"</Description>
                                      <ShowAsHex>1</ShowAsHex>
                                      <Color>0000FF</Color>
                                      <VariableType>4 Bytes</VariableType>
                                      <Address>+10</Address>
                                    </CheatEntry>
                                  </CheatEntries>
                                </CheatEntry>
                                <CheatEntry>
                                  <ID>13621</ID>
                                  <Description>"+98 enemy health"</Description>
                                  <LastState Value="" RealAddress="00000000"/>
                                  <Color>000080</Color>
                                  <VariableType>Array of byte</VariableType>
                                  <ByteLength>0</ByteLength>
                                  <Address>+98</Address>
                                  <Offsets>
                                    <Offset>0</Offset>
                                  </Offsets>
                                </CheatEntry>
                              </CheatEntries>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13581</ID>
                          <Description>"enemy health"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>000080</Color>
                          <VariableType>Array of byte</VariableType>
                          <ByteLength>0</ByteLength>
                          <Address>+b8</Address>
                          <Offsets>
                            <Offset>0</Offset>
                          </Offsets>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>13582</ID>
                              <Description>"h"</Description>
                              <Color>0000FF</Color>
                              <VariableType>4 Bytes</VariableType>
                              <Address>+58</Address>
                              <CheatEntries>
                                <CheatEntry>
                                  <ID>13583</ID>
                                  <Description>"h max"</Description>
                                  <Color>0000FF</Color>
                                  <VariableType>4 Bytes</VariableType>
                                  <Address>-4</Address>
                                </CheatEntry>
                                <CheatEntry>
                                  <ID>13584</ID>
                                  <Description>"god (auto reset)"</Description>
                                  <Color>0000FF</Color>
                                  <VariableType>Byte</VariableType>
                                  <Address>+4</Address>
                                </CheatEntry>
                                <CheatEntry>
                                  <ID>13585</ID>
                                  <Description>"god"</Description>
                                  <Color>0000FF</Color>
                                  <VariableType>Byte</VariableType>
                                  <Address>+5</Address>
                                </CheatEntry>
                              </CheatEntries>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>13586</ID>
                              <Description>"+a0"</Description>
                              <Color>0000FF</Color>
                              <VariableType>Float</VariableType>
                              <Address>+a0</Address>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13587</ID>
                      <Description>"ai 1"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>000080</Color>
                      <VariableType>Array of byte</VariableType>
                      <ByteLength>0</ByteLength>
                      <Address>pAttackInfo</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>13592</ID>
                          <Description>"damage"</Description>
                          <Color>0000FF</Color>
                          <VariableType>Float</VariableType>
                          <Address>+7c</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13593</ID>
                          <Description>"+70"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>0000FF</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>+70</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13612</ID>
                          <Description>"+74"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>0000FF</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>+74</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13611</ID>
                          <Description>"+78"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>0000FF</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>+78</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13610</ID>
                          <Description>"+7c damage"</Description>
                          <Color>0000FF</Color>
                          <VariableType>Float</VariableType>
                          <Address>+7c</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13609</ID>
                          <Description>"+80"</Description>
                          <Color>0000FF</Color>
                          <VariableType>Float</VariableType>
                          <Address>+80</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13598</ID>
                          <Description>"+84"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>0000FF</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>+84</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13597</ID>
                          <Description>"+88"</Description>
                          <Color>0000FF</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>+88</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13599</ID>
                          <Description>"+8c"</Description>
                          <Color>0000FF</Color>
                          <VariableType>Float</VariableType>
                          <Address>+8c</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13600</ID>
                          <Description>"+90"</Description>
                          <Color>0000FF</Color>
                          <VariableType>Float</VariableType>
                          <Address>+90</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13602</ID>
                          <Description>"+94"</Description>
                          <Color>0000FF</Color>
                          <VariableType>Float</VariableType>
                          <Address>+94</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13603</ID>
                          <Description>"+98"</Description>
                          <Color>0000FF</Color>
                          <VariableType>Float</VariableType>
                          <Address>+98</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13604</ID>
                          <Description>"+9c"</Description>
                          <Color>0000FF</Color>
                          <VariableType>Float</VariableType>
                          <Address>+9c</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13594</ID>
                          <Description>"+a0 impact angle"</Description>
                          <Color>0000FF</Color>
                          <VariableType>Float</VariableType>
                          <Address>+a0</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13595</ID>
                          <Description>"+a4 impact angle"</Description>
                          <Color>0000FF</Color>
                          <VariableType>Float</VariableType>
                          <Address>+a4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13596</ID>
                          <Description>"+a8 impact angle"</Description>
                          <Color>0000FF</Color>
                          <VariableType>Float</VariableType>
                          <Address>+a8</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13605</ID>
                          <Description>"+ac"</Description>
                          <Color>0000FF</Color>
                          <VariableType>Float</VariableType>
                          <Address>+ac</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13601</ID>
                          <Description>"+b0"</Description>
                          <Color>0000FF</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>+b0</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13606</ID>
                          <Description>"+b4"</Description>
                          <Color>0000FF</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>+b4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13607</ID>
                          <Description>"+b8"</Description>
                          <Color>0000FF</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>+b8</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13608</ID>
                          <Description>"+bc"</Description>
                          <Color>0000FF</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>+bc</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13619</ID>
                      <Description>"ai 2"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>000080</Color>
                      <VariableType>Array of byte</VariableType>
                      <ByteLength>0</ByteLength>
                      <Address>pAttackInfo2</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>13622</ID>
                          <Description>"+60"</Description>
                          <Options moHideChildren="1"/>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>000080</Color>
                          <VariableType>Array of byte</VariableType>
                          <ByteLength>0</ByteLength>
                          <Address>+60</Address>
                          <Offsets>
                            <Offset>0</Offset>
                          </Offsets>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>13623</ID>
                              <Description>"+40"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <Color>0000FF</Color>
                              <VariableType>4 Bytes</VariableType>
                              <Address>+40</Address>
                              <CheatEntries>
                                <CheatEntry>
                                  <ID>13624</ID>
                                  <Description>"+3a0"</Description>
                                  <ShowAsHex>1</ShowAsHex>
                                  <Color>0000FF</Color>
                                  <VariableType>4 Bytes</VariableType>
                                  <Address>+3a0</Address>
                                </CheatEntry>
                                <CheatEntry>
                                  <ID>13625</ID>
                                  <Description>"+690"</Description>
                                  <ShowAsHex>1</ShowAsHex>
                                  <Color>0000FF</Color>
                                  <VariableType>4 Bytes</VariableType>
                                  <Address>+690</Address>
                                </CheatEntry>
                                <CheatEntry>
                                  <ID>13627</ID>
                                  <Description>"+6f0"</Description>
                                  <ShowAsHex>1</ShowAsHex>
                                  <Color>0000FF</Color>
                                  <VariableType>4 Bytes</VariableType>
                                  <Address>+6f0</Address>
                                </CheatEntry>
                                <CheatEntry>
                                  <ID>13626</ID>
                                  <Description>"+720"</Description>
                                  <ShowAsHex>1</ShowAsHex>
                                  <Color>0000FF</Color>
                                  <VariableType>4 Bytes</VariableType>
                                  <Address>+720</Address>
                                </CheatEntry>
                                <CheatEntry>
                                  <ID>13628</ID>
                                  <Description>"+790"</Description>
                                  <ShowAsHex>1</ShowAsHex>
                                  <Color>0000FF</Color>
                                  <VariableType>4 Bytes</VariableType>
                                  <Address>+790</Address>
                                </CheatEntry>
                                <CheatEntry>
                                  <ID>13629</ID>
                                  <Description>"+7c0 *"</Description>
                                  <ShowAsHex>1</ShowAsHex>
                                  <Color>0000FF</Color>
                                  <VariableType>4 Bytes</VariableType>
                                  <Address>+7c0</Address>
                                </CheatEntry>
                                <CheatEntry>
                                  <ID>13630</ID>
                                  <Description>"+8d0"</Description>
                                  <ShowAsHex>1</ShowAsHex>
                                  <Color>0000FF</Color>
                                  <VariableType>4 Bytes</VariableType>
                                  <Address>+8d0</Address>
                                </CheatEntry>
                                <CheatEntry>
                                  <ID>13631</ID>
                                  <Description>"+b00"</Description>
                                  <ShowAsHex>1</ShowAsHex>
                                  <Color>0000FF</Color>
                                  <VariableType>4 Bytes</VariableType>
                                  <Address>+b00</Address>
                                </CheatEntry>
                                <CheatEntry>
                                  <ID>13632</ID>
                                  <Description>"+b40"</Description>
                                  <ShowAsHex>1</ShowAsHex>
                                  <Color>0000FF</Color>
                                  <VariableType>4 Bytes</VariableType>
                                  <Address>+b40</Address>
                                </CheatEntry>
                              </CheatEntries>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>13694</ID>
              <Description>"piercing ammo .2"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
//modified from TheyCallMeTim13's lua keylistener script
//http://fearlessrevolution.com/viewtopic.php?f=4&amp;t=6041&amp;start=60#p62657
{$lua}
local function weaklimbskeyLuaThread(thread)
	while WeakLimbskeyLuaThreadLoop do
        sleep(100)
		addrwl = getAddress('bWeakLimbs')
		if addrwl then
            if ( isKeyPressed( readInteger('bWeakLimbsKey') ) and readBytes(addrwl) == 2  ) then
			    writeBytes(addrwl+4, 1)
            else
                writeBytes(addrwl+4, 0)
            end
		else
			addrwl = getAddress('bWeakLimbs')
		end
	end
	thread.terminate()
--    while WeakLimbskeyLuaThreadLoop do
--          if ( isKeyPressed(VK_CAPITAL) ) then
--              writeBytes("bWeakLimbs" ,1)
--          else
--              writeBytes("bWeakLimbs" ,0)
--          end
--    end
--    thread.terminate()
end
----------------------------------
if syntaxcheck then return end
WeakLimbskeyLuaThreadLoop = true
createThread(weaklimbskeyLuaThread)
{$asm}

///*****************************************///
bWeakLimbs:
db 2
dd 0




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
{$lua}
if syntaxcheck then return end
WeakLimbskeyLuaThreadLoop = false
{$asm}

///*****************************************///
bWeakLimbs:
dd 0
dd 0
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>13637</ID>
                  <Description>"method"</Description>
                  <Options moHideChildren="1"/>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:no
2:hold key
1:always
</DropDownList>
                  <Color>008000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bWeakLimbs</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>13744</ID>
                      <Description>"+4"</Description>
                      <Options moHideChildren="1"/>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:not pressing
1:pressing
</DropDownList>
                      <Color>008000</Color>
                      <VariableType>Byte</VariableType>
                      <Address>+4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13634</ID>
                      <Description>""</Description>
                      <LastState/>
                      <Color>FFFFFF</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem11,2048,"re2.exe"+A9EA0BD)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
mov r8d,3
mov [rdx+10],r8d

originalcode11:
mov r8d,[rdx+10]
mov rbx,rcx

exit11:
jmp returnhere11

///

"re2.exe"+A9EA0BD:
jmp newmem11
nop
nop
returnhere11:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem11)
"re2.exe"+A9EA0BD:
db 44 8B 42 10 48 89 CB
//Alt: mov r8d,[rdx+10]
//Alt: mov rbx,rcx
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13635</ID>
                      <Description>""</Description>
                      <LastState/>
                      <Color>FFFFFF</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem17,2048,"re2.exe"+BE144BE)
label(returnhere17)
label(originalcode17)
label(exit17)

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here
xor rax,rax
test r10,r10
jz @f
mov dword ptr [r10+8],ffffffff

originalcode17:
mov r8,rax
mov rdx,rdi

exit17:
jmp returnhere17

///

"re2.exe"+BE144BE:
jmp newmem17
nop
returnhere17:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem17)
"re2.exe"+BE144BE:
db 49 89 C0 48 89 FA
//Alt: mov r8,rax
//Alt: mov rdx,rdi
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13633</ID>
                      <Description>"+"</Description>
                      <LastState/>
                      <Color>FFFFFF</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfNormalAttackAOB,re2.exe,48 ** ** ** 00 0F 85 ** ** ** ** 48 ** ** 74 ** 83 ** ** 00 7E)
registersymbol(cJmpIfNormalAttackAOB)

alloc(newmem6,2048,cJmpIfNormalAttackAOB+10) //"re2.exe"+6940E6)
label(returnhere6)
label(originalcode6_cJmpIfNormalAttackAOB)
registersymbol(originalcode6_cJmpIfNormalAttackAOB)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov rdi,bIsEnemy
cmp byte ptr [rdi],1
jne @f
inc byte ptr [rdi]

mov rdi,bWeakLimbs
cmp byte ptr [rdi],1
jne @f

readmem(cJmpIfNormalAttackAOB+10,4)
//cmp dword ptr [rax+1C],00
jg @f
db C7 40
readmem(cJmpIfNormalAttackAOB+12,1)
db 01 00 00 00
//mov dword ptr [rax+1c],1

@@:
readmem(cJmpIfNormalAttackAOB+10,4)
reassemble(cJmpIfNormalAttackAOB+14)
jmp exit6

originalcode6_cJmpIfNormalAttackAOB:
readmem(cJmpIfNormalAttackAOB+10,6)
//cmp dword ptr [rax+1C],00
//jle re2.exe+694138

exit6:
jmp returnhere6

///

cJmpIfNormalAttackAOB+10: //"re2.exe"+6940E6:
jmp newmem6
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
cJmpIfNormalAttackAOB+10: //"re2.exe"+6940E6:
readmem(originalcode6_cJmpIfNormalAttackAOB,6)
//db 83 78 1C 00 7E 4C
//Alt: cmp dword ptr [rax+1C],00
//Alt: jle re2.exe+694138
unregistersymbol(originalcode6_cJmpIfNormalAttackAOB)
</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>13636</ID>
                          <Description>"++"</Description>
                          <LastState/>
                          <Color>FFFFFF</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(dsmageSpecialEffectReadAOB,re2.exe,8B ** ** ** ** 00 02 00 00 0F 8E ** ** ** ** ** 00 00 02 00)
registersymbol(dsmageSpecialEffectReadAOB)

alloc(newmem12,2048,dsmageSpecialEffectReadAOB) //"re2.exe"+A3DDB96)
label(returnhere12)
label(originalcode12_dsmageSpecialEffectReadAOB)
registersymbol(originalcode12_dsmageSpecialEffectReadAOB)
label(exit12)

newmem12: //this is allocated memory, you have read,write,execute access
//place your code here
push rdi
mov rdi,bIsEnemy
cmp byte ptr [rdi],2
jne @f
xor eax,eax
mov [rdi],eax

mov rdi,bWeakLimbs
cmp byte ptr [rdi],1
jne @f

mov eax,40
db 89
readmem(dsmageSpecialEffectReadAOB+1,3)
//mov [rbx+rsi*4+20],eax

@@:
pop rdi

originalcode12_dsmageSpecialEffectReadAOB:
readmem(dsmageSpecialEffectReadAOB,9)
//mov eax,[rbx+rsi*4+20]
//cmp eax,00000200

exit12:
jmp returnhere12

///

dsmageSpecialEffectReadAOB: //"re2.exe"+A3DDB96:
jmp newmem12
nop
nop
nop
nop
returnhere12:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem12)
dsmageSpecialEffectReadAOB: //"re2.exe"+A3DDB96:
readmem(originalcode12_dsmageSpecialEffectReadAOB,9)
//db 8B 44 B3 20 3D 00 02 00 00
//Alt: mov eax,[rbx+rsi*4+20]
//Alt: cmp eax,00000200
unregistersymbol(originalcode12_dsmageSpecialEffectReadAOB)
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>13746</ID>
                  <Description>"mod key"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">10:SHIFT key
11:CTRL key
12:ALT key
14:CAPS LOCK key
04:Middle Mouse Button
05:X1 Mouse Button
06:X2 Moust Button
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bWeakLimbsKey</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>13747</ID>
                      <Description>"ignore if method is set to always"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>808080</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>13001</ID>
          <Description>"no reload .2a"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
//ammo clip read on fire 1
aobscanmodule(ammoClipReadOnFire1AOB,re2.exe,74 0C 48 ** ** ** 48 ** ** 74 03 8B ** ** 48 ** ** 48 ** ** E8)
registersymbol(ammoClipReadOnFire1AOB)

alloc(newmem,2048,ammoClipReadOnFire1AOB+e) //"re2.exe"+BFBB04E)
label(returnhere)
label(originalcode_ammoClipReadOnFire1AOB)
registersymbol(originalcode_ammoClipReadOnFire1AOB)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov rdx,pAmmo
cmp [rdx],rcx
jne @f
cmp byte ptr [rdx+8],1
jne @f
inc byte ptr [rdx+8]
test esi,esi
jg @f
mov esi,1
//mov [rcx+20],esi

originalcode_ammoClipReadOnFire1AOB:
readmem(ammoClipReadOnFire1AOB+e,6)
//mov rdx,rdi
//mov rcx,rbx

exit:
jmp returnhere

///

ammoClipReadOnFire1AOB+e: //"re2.exe"+BFBB04E:
jmp newmem
nop
returnhere:

///****************************************///
//ammo clip const read 1 (chk zero), accessed twice after "ammo clip read on fire 1"
aobscanmodule(ammoClipZeroCChkAOB,re2.exe,74 0C 48 ** ** ** 48 ** ** 74 03 8B ** ** 85 DB 48)
registersymbol(ammoClipZeroCChkAOB)

label(bHideEmptyClipAppearance)
registersymbol(bHideEmptyClipAppearance)

alloc(newmem2,2048,ammoClipZeroCChkAOB+e) //"re2.exe"+B8BE2C8)
label(returnhere2)
label(originalcode2_ammoClipZeroCChkAOB)
registersymbol(originalcode2_ammoClipZeroCChkAOB)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov rsi,pAmmo
cmp [rsi],rcx
jne end2
cmp byte ptr [rsi+8],2
je @f
cmp byte ptr [rsi+8],3
je @f

mov rsi,bHideEmptyClipAppearance
cmp byte ptr [rsi],1
je fakenoemptyclip2
jmp end2

@@:
inc byte ptr [rsi+8]

fakenoemptyclip2:
test ebx,ebx //
jg @f        //
mov ebx,1    //

end2:

originalcode2_ammoClipZeroCChkAOB:
readmem(ammoClipZeroCChkAOB+e,7)
//test ebx,ebx
//mov rbx,[rsp+30]

exit2:
jmp returnhere2

///
bHideEmptyClipAppearance:
dd 1
///

ammoClipZeroCChkAOB+e: //"re2.exe"+B8BE2C8:
jmp newmem2
nop
nop
returnhere2:

///****************************************///
aobscanmodule(lastClipChkOnFireAOB,re2.exe,74 0B 83 FE 01 0F 94 ** E8 ** ** ** ** 48)
registersymbol(lastClipChkOnFireAOB)

label(bMuteEmptyClipSound)
registersymbol(bMuteEmptyClipSound)

alloc(newmem6,2048,lastClipChkOnFireAOB+2) //"re2.exe"+D244CE0)
label(returnhere6)
label(originalcode6_lastClipChkOnFireAOB)
registersymbol(originalcode6_lastClipChkOnFireAOB)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
readmem(lastClipChkOnFireAOB+2,6)
//cmp esi,01
//sete dl
mov rax,bMuteEmptyClipSound
mov al,[rax]
test al,al
jz @f
xor dl,dl
@@:
jmp exit6

originalcode6_lastClipChkOnFireAOB:
readmem(lastClipChkOnFireAOB+2,6)
//cmp esi,01
//sete dl

exit6:
jmp returnhere6

///
bMuteEmptyClipSound:
dd 1
///

lastClipChkOnFireAOB+2: //"re2.exe"+D244CE0:
jmp newmem6
nop
returnhere6:

///****************************************///




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammoClipReadOnFire1AOB+e: //"re2.exe"+BFBB04E:
readmem(originalcode_ammoClipReadOnFire1AOB,6)
//db 48 89 FA 48 89 D9
//Alt: mov rdx,rdi
//Alt: mov rcx,rbx
unregistersymbol(originalcode_ammoClipReadOnFire1AOB)

///****************************************///
dealloc(newmem2)
ammoClipZeroCChkAOB+e: //"re2.exe"+B8BE2C8:
readmem(originalcode2_ammoClipZeroCChkAOB,7)
//db 85 DB 48 8B 5C 24 30
//Alt: test ebx,ebx
//Alt: mov rbx,[rsp+30]
unregistersymbol(originalcode2_ammoClipZeroCChkAOB)

unregistersymbol(bHideEmptyClipAppearance)

///****************************************///
dealloc(newmem6)
lastClipChkOnFireAOB+2: //"re2.exe"+D244CE0:
db 83 FE 01 0F 94 D2
//Alt: cmp esi,01
//Alt: sete dl
unregistersymbol(originalcode6_lastClipChkOnFireAOB)

unregistersymbol(bMuteEmptyClipSound)

///****************************************///
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>14134</ID>
              <Description>"hide empty clip appearance?"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:no
1:yes
</DropDownList>
              <Color>008000</Color>
              <VariableType>Byte</VariableType>
              <Address>bHideEmptyClipAppearance</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>14135</ID>
              <Description>"mute empty clip sound?"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:no
1:yes
</DropDownList>
              <Color>008000</Color>
              <VariableType>Byte</VariableType>
              <Address>bMuteEmptyClipSound</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>13004</ID>
          <Description>"ignore ammo pouch .5a"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
//have ammo pouch to reload flag fetchED, const
aobscanmodule(ammoPouchReadCallerForReloadFlagFetchCAOB,re2.exe,74 0D 48 ** ** ** 48 ** ** 74 04 44 ** ** ** 45 ** ** 48 ** ** 48 ** ** E8 ** ** ** ** 0F B6 C8 48 ** ** ** 48 ** ** ** 00)
registersymbol(ammoPouchReadCallerForReloadFlagFetchCAOB)

alloc(newmem,2048,ammoPouchReadCallerForReloadFlagFetchCAOB+1d) //"re2.exe"+C30F42D)
label(returnhere)
label(originalcode_ammoPouchReadCallerForReloadFlagFetchCAOB)
registersymbol(originalcode_ammoPouchReadCallerForReloadFlagFetchCAOB)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov al,1

originalcode_ammoPouchReadCallerForReloadFlagFetchCAOB:
readmem(ammoPouchReadCallerForReloadFlagFetchCAOB+1d,7)
//movzx ecx,al
//mov rax,[rbx+50]

exit:
jmp returnhere

///

ammoPouchReadCallerForReloadFlagFetchCAOB+1d: //"re2.exe"+C30F42D:
jmp newmem
nop
nop
returnhere:

///**************************************///
//cjmp1 to skip ammo/ammopouch chk on ammo/ammopouch cal after reload, before 1st ammopouch read after reload
//aobscanmodule(haveAmmoPouchChkBeforeAmmoAPouchCallAfterReloadAOB,re2.exe,F2 ** ** ** ** ** 0F 11 ** ** ** E8 ** ** ** ** 0F B6 D0 48 ** ** ** 48 ** ** ** 48 ** ** 0F 85 ** ** ** ** 49 BC FF FF FF FF FF FF FF 7F 85 ** 0F 84)
aobscanmodule(haveAmmoPouchChkBeforeAmmoAPouchCallAfterReloadAOB,re2.exe,F2 ** ** ** ** ** 0F 11 ** ** ** E8 ** ** ** ** 0F B6 D0 48 ** ** ** 48 ** ** ** 48 ** ** 0F 85 ** ** ** ** 49 BC FF FF FF FF FF FF FF 7F 85 ** 0F 84 ** ** ** ** 48 ** ** 0F 85 ** ** ** ** 48 ** ** ** ** ** ** ** ** ** ** ** ** ** ** 0F 84)
registersymbol(haveAmmoPouchChkBeforeAmmoAPouchCallAfterReloadAOB)

alloc(newmem2,2048,haveAmmoPouchChkBeforeAmmoAPouchCallAfterReloadAOB+24) //"re2.exe"+C30FC4B)
label(returnhere2)
label(originalcode2_haveAmmoPouchChkBeforeAmmoAPouchCallAfterReloadAOB)
registersymbol(originalcode2_haveAmmoPouchChkBeforeAmmoAPouchCallAfterReloadAOB)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push rbx
mov rbx,pAmmo
mov byte ptr [rbx+c],1
test edx,edx
jnz @f
mov edx,1
//inc byte ptr [rbx+c]
@@:
pop rbx

originalcode2_haveAmmoPouchChkBeforeAmmoAPouchCallAfterReloadAOB:
readmem(haveAmmoPouchChkBeforeAmmoAPouchCallAfterReloadAOB+24,10)
//mov r12,7FFFFFFFFFFFFFFF

exit2:
jmp returnhere2

///

haveAmmoPouchChkBeforeAmmoAPouchCallAfterReloadAOB+24: //"re2.exe"+C30FC4B:
jmp newmem2
nop
nop
nop
nop
nop
returnhere2:

///**************************************///
aobscanmodule(itemIDsReadForAltAmmoPresenceAOB,re2.exe,8B ** ** EB 02 ** C0 48 ** ** 75 ** 41 ** ** 18 0F 94)
registersymbol(itemIDsReadForAltAmmoPresenceAOB)

itemIDsReadForAltAmmoPresenceAOB+10: //"re2.exe"+B9F3E92:
db 90 B0 01

///**************************************///
aobscanmodule(cJmpIfNoAltAmmoPouchForChangeAfterAlrAmmoChangeAOB,re2.exe,48 ** ** ** 75 ** 48 ** ** 74 ** 39 ** ** 0F 84)
registersymbol(cJmpIfNoAltAmmoPouchForChangeAfterAlrAmmoChangeAOB)

alloc(originalcode6_cJmpIfNoAltAmmoPouchForChangeAfterAlrAmmoChangeAOB,8,re2.exe)
registersymbol(originalcode6_cJmpIfNoAltAmmoPouchForChangeAfterAlrAmmoChangeAOB)

originalcode6_cJmpIfNoAltAmmoPouchForChangeAfterAlrAmmoChangeAOB:
readmem(cJmpIfNoAltAmmoPouchForChangeAfterAlrAmmoChangeAOB+e,6)

///

cJmpIfNoAltAmmoPouchForChangeAfterAlrAmmoChangeAOB+e: //"re2.exe"+C311C6D:
db 90 90 90 90 90 90

///**************************************///




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammoPouchReadCallerForReloadFlagFetchCAOB+1d: //"re2.exe"+C30F42D:
readmem(originalcode_ammoPouchReadCallerForReloadFlagFetchCAOB,7)
//db 0F B6 C8 48 8B 43 50
//Alt: movzx ecx,al
//Alt: mov rax,[rbx+50]
unregistersymbol(originalcode_ammoPouchReadCallerForReloadFlagFetchCAOB)

///**************************************///
dealloc(newmem2)
haveAmmoPouchChkBeforeAmmoAPouchCallAfterReloadAOB+24: //"re2.exe"+C30FC4B:
readmem(originalcode2_haveAmmoPouchChkBeforeAmmoAPouchCallAfterReloadAOB,10)
//db 49 BC FF FF FF FF FF FF FF 7F
//Alt: mov r12,7FFFFFFFFFFFFFFF
unregistersymbol(originalcode2_haveAmmoPouchChkBeforeAmmoAPouchCallAfterReloadAOB)

///**************************************///
itemIDsReadForAltAmmoPresenceAOB+10: //"re2.exe"+B9F3E92:
db 0F 94 D0
//Alt: sete al

///**************************************///
cJmpIfNoAltAmmoPouchForChangeAfterAlrAmmoChangeAOB+e: //"re2.exe"+C311C6D:
readmem(originalcode6_cJmpIfNoAltAmmoPouchForChangeAfterAlrAmmoChangeAOB,6)
//db 0F 84 09 02 00 00
//Alt: je re2.exe+C311E7C

///**************************************///
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>13030</ID>
          <Description>"inf. sub-weapons .2"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
//aobscanmodule(subWeaponsDurationQuantityCalOnUseCounterAOB,re2.exe,0F 84 ** ** ** ** 48 ** ** ** 48 ** ** 0F 84 ** ** ** ** 8B ** ** E9)
aobscanmodule(subWeaponsDurationQuantityCalOnUseCounterAOB,re2.exe,0F 84 ** ** ** ** 48 ** ** ** 48 ** ** 0F 84 ** ** ** ** 8B ** ** E9 ** ** ** ** 48)
registersymbol(subWeaponsDurationQuantityCalOnUseCounterAOB)

alloc(newmem,2048,subWeaponsDurationQuantityCalOnUseCounterAOB+13) //"re2.exe"+B8C3A02)
label(returnhere)
label(originalcode_subWeaponsDurationQuantityCalOnUseCounterAOB)
registersymbol(originalcode_subWeaponsDurationQuantityCalOnUseCounterAOB)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [rcx+14],2e //knife
jne @f
db 01 79
readmem(subWeaponsDurationQuantityCalOnUseCounterAOB+15,1)
//add [rcx+20],edi
jmp fakeoriginalcode

@@:
cmp dword ptr [rcx+14],42 //flash grenade
jne @f
cmp [rcx+20],edi
jg fakeoriginalcode
mov [rcx+20],edi
inc dword ptr [rcx+20]
jmp fakeoriginalcode

@@:
cmp dword ptr [rcx+14],41 //hand grenade
jne @f
cmp [rcx+20],edi
jg fakeoriginalcode
mov [rcx+20],edi
inc dword ptr [rcx+20]
jmp fakeoriginalcode

@@:

fakeoriginalcode:
readmem(subWeaponsDurationQuantityCalOnUseCounterAOB+13,3)
//mov ebx,[rcx+20]
reassemble(subWeaponsDurationQuantityCalOnUseCounterAOB+16)
//jmp re2.exe+B8C3947

originalcode_subWeaponsDurationQuantityCalOnUseCounterAOB:
readmem(subWeaponsDurationQuantityCalOnUseCounterAOB+13,8)
//mov ebx,[rcx+20]
//jmp re2.exe+B8C3947

exit:
jmp returnhere

///

subWeaponsDurationQuantityCalOnUseCounterAOB+13: //"re2.exe"+B8C3A02:
jmp newmem
nop
nop
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
subWeaponsDurationQuantityCalOnUseCounterAOB+13: //"re2.exe"+B8C3A02:
readmem(originalcode_subWeaponsDurationQuantityCalOnUseCounterAOB,8)
//db 8B 59 20 E9 3D FF FF FF
//Alt: mov ebx,[rcx+20]
//Alt: jmp re2.exe+B8C3947
unregistersymbol(originalcode_subWeaponsDurationQuantityCalOnUseCounterAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>14823</ID>
          <Description>"∞ mod"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
luaCall(lua_aobscan("infAmmoPouchFlagChkAOB","re2.exe","EB ** 48 ** ** 45 ** ** 48 ** ** E8 ** ** ** ** 0F B6 ** 48 ** ** ** 48 ** ** ** 00 75",2))
luaCall(lua_aobscan("infAmmoClipFlagChkAOB","re2.exe","EB ** 48 ** ** 45 ** ** 48 ** ** E8 ** ** ** ** 0F B6 ** 48 ** ** ** 48 ** ** ** 00 75",1))

alloc(aForceInfAmmoPouchFlag,1048,infAmmoPouchFlagChkAOB)
registersymbol(aForceInfAmmoPouchFlag)

///
aForceInfAmmoPouchFlag:
///

alloc(aForceInfAmmoClipFlag,1048,infAmmoClipFlagChkAOB)
registersymbol(aForceInfAmmoClipFlag)

///
aForceInfAmmoClipFlag:
///


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(aForceInfAmmoPouchFlag)
unregistersymbol(aForceInfAmmoPouchFlag)
dealloc(aForceInfAmmoClipFlag)
unregistersymbol(aForceInfAmmoClipFlag)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>14824</ID>
              <Description>"∞ ammo clip &amp; sub-weapons mod .2"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(dWeaponIDForInfAmmoClipFlagChk)
registersymbol(dWeaponIDForInfAmmoClipFlagChk)

alloc(newmem,2048,infAmmoClipFlagChkAOB+5) //"re2.exe"+9BFBC20)
label(returnhere)
label(originalcode_infAmmoClipFlagChkAOB)
registersymbol(originalcode_infAmmoClipFlagChkAOB)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov rcx,dWeaponIDForInfAmmoClipFlagChk
mov [rcx],r8d

originalcode_infAmmoClipFlagChkAOB:
readmem(infAmmoClipFlagChkAOB+5,6)
//mov r8d,r9d
//mov rcx,rbx

exit:
jmp returnhere

///
dWeaponIDForInfAmmoClipFlagChk:
dd ffffffff
///

infAmmoClipFlagChkAOB+5: //"re2.exe"+9BFBC20:
jmp newmem
nop
returnhere:

///**************************************///
label(bForceInfAmmoClipFlag)
registersymbol(bForceInfAmmoClipFlag)

alloc(newmem2,2048,infAmmoClipFlagChkAOB+10) //"re2.exe"+9BFBC2B)
label(returnhere2)
label(originalcode2_infAmmoClipFlagChkAOB)
registersymbol(originalcode2_infAmmoClipFlagChkAOB)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push rdi

readmem(infAmmoClipFlagChkAOB+10,3)
//movzx ecx,al

mov rax,bForceInfAmmoClipFlag
mov eax,[rax]
test eax,eax
jge @f

{mov rax,[rdi+18]
test rax,rax
jz end2
mov rax,[rax+10]
test rax,rax
jz end2
xor rdi,rdi
mov edi,[rax+14]
movsx rdi,edi
test edi,edi
jl end2
cmp edi,fc
jg end2}
mov rax,dWeaponIDForInfAmmoClipFlagChk
xor rdi,rdi
mov edi,[rax]
test rdi,rdi
jl end2
cmp rdi,fc
jg end2

mov rax,aForceInfAmmoClipFlag
mov eax,[rax+rdi*4]
test eax,eax
@@:
cmovge ecx,eax

end2:
pop rdi
readmem(infAmmoClipFlagChkAOB+13,4)
//mov rax,[rbx+50]
jmp exit2

originalcode2_infAmmoClipFlagChkAOB:
readmem(infAmmoClipFlagChkAOB+10,7)
//movzx ecx,al
//mov rax,[rbx+50]

exit2:
jmp returnhere2

///
bForceInfAmmoClipFlag:
dd ffffffff
///

infAmmoClipFlagChkAOB+10: //"re2.exe"+9BFBC2B:
jmp newmem2
nop
nop
returnhere2:

///
aForceInfAmmoClipFlag+1*4:
dd ffffffff //Matilda
dd ffffffff //M19
dd ffffffff //JMP Hp3
dd ffffffff //Quickdraw Army Revolver
aForceInfAmmoClipFlag+7*4:
dd ffffffff //MUP
dd ffffffff //Brrom Hc
dd ffffffff //SLS 60
aForceInfAmmoClipFlag+b*4:
dd ffffffff //W-870
aForceInfAmmoClipFlag+15*4:
dd ffffffff //MQ 11
aForceInfAmmoClipFlag+17*4:
dd ffffffff //LE 5
aForceInfAmmoClipFlag+1f*4:
dd ffffffff //Lightning Hawk
aForceInfAmmoClipFlag+2a*4:
dd ffffffff //GM 79
dd ffffffff //Flamethrower
dd ffffffff //Spark Shot
dd ffffffff //ATM-4
dd ffffffff //Combat Knife
dd ffffffff //Combat knife (Infinite)
aForceInfAmmoClipFlag+31*4:
dd ffffffff //Anti-tank Rocket
dd ffffffff //Minigun
aForceInfAmmoClipFlag+41*4:
dd ffffffff //Hand Grenade
dd ffffffff //Flash Grenade
aForceInfAmmoClipFlag+52*4:
dd ffffffff //Samurai Edge (Original Model)
dd ffffffff //Samurai Edge (Chris Model)
dd ffffffff //Samurai Edge (Jill Model)
dd ffffffff //Samurai Edge (Albert
aForceInfAmmoClipFlag+de*4:
dd ffffffff //ATM-4 (Infinite)
aForceInfAmmoClipFlag+f2*4:
dd ffffffff //Anti-tank Rocket (Infinite)
aForceInfAmmoClipFlag+fc*4:
dd ffffffff //Minigun (Infinite)
///

///**************************************///




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
infAmmoClipFlagChkAOB+5: //"re2.exe"+9BFBC20:
readmem(originalcode_infAmmoClipFlagChkAOB,6)
//db 45 89 C8 48 89 D9
//Alt: mov r8d,r9d
//Alt: mov rcx,rbx
unregistersymbol(originalcode_infAmmoClipFlagChkAOB)

unregistersymbol(dWeaponIDForInfAmmoClipFlagChk)

///**************************************///
dealloc(newmem2)
infAmmoClipFlagChkAOB+10: //"re2.exe"+9BFBC2B:
readmem(originalcode2_infAmmoClipFlagChkAOB,7)
//db 0F B6 C8 48 8B 43 50
//Alt: movzx ecx,al
//Alt: mov rax,[rbx+50]
unregistersymbol(originalcode2_infAmmoClipFlagChkAOB)

unregistersymbol(bForceInfAmmoClipFlag)

///**************************************///
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>14825</ID>
                  <Description>"status"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:use individual
00000001:all ∞
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>bForceInfAmmoClipFlag</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14826</ID>
                  <Description>"[individual weapons]"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>000080</Color>
                  <VariableType>Array of byte</VariableType>
                  <ByteLength>0</ByteLength>
                  <Address>aForceInfAmmoClipFlag</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14827</ID>
                      <Description>"Matilda"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+1*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14828</ID>
                      <Description>"M19"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+2*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14829</ID>
                      <Description>"JMB Hp3"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+3*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14830</ID>
                      <Description>"Quickdraw Revolver"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+4*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14831</ID>
                      <Description>"MUP"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+7*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14832</ID>
                      <Description>"Broom Hc"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+8*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14833</ID>
                      <Description>"SLS 60"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+9*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14834</ID>
                      <Description>"W-870"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+b*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14835</ID>
                      <Description>"MQ 11"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+15*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14836</ID>
                      <Description>"LE 5"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+17*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14837</ID>
                      <Description>"Lightning Hawk"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+1f*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14838</ID>
                      <Description>"GM 79"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+2a*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14839</ID>
                      <Description>"Flamethrower"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+2b*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14840</ID>
                      <Description>"Spark Shot"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+2c*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14841</ID>
                      <Description>"ATM-4"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+2d*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14842</ID>
                      <Description>"ATM-4 (Infinite)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+de*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14843</ID>
                      <Description>"Anti-tank Rocket"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+31*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14844</ID>
                      <Description>"Anti-tank Rocket (Infinite)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+f2*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14845</ID>
                      <Description>"Minigun"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+32*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14846</ID>
                      <Description>"Minigun (Infinite)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+fc*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14847</ID>
                      <Description>"Samurai Edge (Original)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+52*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14848</ID>
                      <Description>"Samurai Edge (Chris)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+53*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14849</ID>
                      <Description>"Samurai Edge (Jill)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+54*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14850</ID>
                      <Description>"Samurai Edge (Albert)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+55*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14851</ID>
                      <Description>"Combat Knife"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+2e*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14852</ID>
                      <Description>"Combat knife (Infinite)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+2f*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14853</ID>
                      <Description>"Hand Grenade"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+41*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14854</ID>
                      <Description>"Flash Grenade"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+42*4</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14855</ID>
              <Description>"∞ ammo pouch mod .2"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(bForceInfAmmoPouchFlag)
registersymbol(bForceInfAmmoPouchFlag)

alloc(newmem2,2048,infAmmoPouchFlagChkAOB+10) //"re2.exe"+9FB8ACB)
label(returnhere2)
label(originalcode2_infAmmoPouchFlagChkAOB)
registersymbol(originalcode2_infAmmoPouchFlagChkAOB)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
readmem(infAmmoPouchFlagChkAOB+10,3)
//movzx ecx,al

mov rax,bForceInfAmmoPouchFlag
mov eax,[rax]
test eax,eax
jge @f
test rbp,rbp
jl end2
cmp rbp,55
jg end2
mov rax,aForceInfAmmoPouchFlag
mov eax,[rax+rbp*4]
test eax,eax
@@:
cmovge ecx,eax

end2:

readmem(infAmmoPouchFlagChkAOB+13,4)
//mov rax,[rbx+50]
jmp exit2

originalcode2_infAmmoPouchFlagChkAOB:
readmem(infAmmoPouchFlagChkAOB+10,7)
//movzx ecx,al
//mov rax,[rbx+50]

exit2:
jmp returnhere2

///
bForceInfAmmoPouchFlag:
dd ffffffff
///

infAmmoPouchFlagChkAOB+10: //"re2.exe"+9FB8ACB:
jmp newmem2
nop
nop
returnhere2:

///
aForceInfAmmoPouchFlag+1*4:
dd ffffffff //Matilda
dd ffffffff //M19
dd ffffffff //JMP Hp3
dd ffffffff //Quickdraw Army Revolver
aForceInfAmmoPouchFlag+7*4:
dd ffffffff //MUP
dd ffffffff //Brrom Hc
dd ffffffff //SLS 60
aForceInfAmmoPouchFlag+b*4:
dd ffffffff //W-870
aForceInfAmmoPouchFlag+15*4:
dd ffffffff //MQ 11
aForceInfAmmoPouchFlag+17*4:
dd ffffffff //LE 5
aForceInfAmmoPouchFlag+1f*4:
dd ffffffff //Lightning Hawk
aForceInfAmmoPouchFlag+2a*4:
dd ffffffff //GM 79
dd ffffffff //Flamethrower
dd ffffffff //Spark Shot
aForceInfAmmoPouchFlag+52*4:
dd ffffffff //Samurai Edge (Original Model)
dd ffffffff //Samurai Edge (Chris Model)
dd ffffffff //Samurai Edge (Jill Model)
dd ffffffff //Samurai Edge (Albert
///




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
infAmmoPouchFlagChkAOB+10: //"re2.exe"+9FB8ACB:
readmem(originalcode2_infAmmoPouchFlagChkAOB,7)
//db 0F B6 C8 48 8B 43 50
//Alt: movzx ecx,al
//Alt: mov rax,[rbx+50]
unregistersymbol(originalcode2_infAmmoPouchFlagChkAOB)

unregistersymbol(bForceInfAmmoPouchFlag)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>14856</ID>
                  <Description>"status"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:use individual
00000000:all no ∞
00000001:all ∞
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>bForceInfAmmoPouchFlag</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14857</ID>
                  <Description>"[individual guns]"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>000080</Color>
                  <VariableType>Array of byte</VariableType>
                  <ByteLength>0</ByteLength>
                  <Address>aForceInfAmmoPouchFlag</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14858</ID>
                      <Description>"Matilda"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+1*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14859</ID>
                      <Description>"M19"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+2*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14860</ID>
                      <Description>"JMB Hp3"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+3*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14861</ID>
                      <Description>"Quickdraw Revolver"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+4*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14862</ID>
                      <Description>"MUP"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+7*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14863</ID>
                      <Description>"Broom Hc"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+8*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14864</ID>
                      <Description>"SLS 60"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+9*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14865</ID>
                      <Description>"W-870"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+b*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14866</ID>
                      <Description>"MQ 11"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+15*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14867</ID>
                      <Description>"LE 5"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+17*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14868</ID>
                      <Description>"Lightning Hawk"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+1f*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14869</ID>
                      <Description>"GM 79"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+2a*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14870</ID>
                      <Description>"Flamethrower"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+2b*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14871</ID>
                      <Description>"Spark Shot"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+2c*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14872</ID>
                      <Description>"Samurai Edge (Original)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+52*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14873</ID>
                      <Description>"Samurai Edge (Chris)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+53*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14874</ID>
                      <Description>"Samurai Edge (Jill)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+54*4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14875</ID>
                      <Description>"Samurai Edge (Albert)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:no ∞
00000001:∞
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+55*4</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>14721</ID>
          <Description>"custom pick up item key .1a"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(itemIDChkOnPickUpCallerAOB,re2.exe,** ** ** E8 ** ** ** ** 0F B6 C8 48 ** ** ** 48 ** ** ** 75 ** 48 ** ** ** ** ** ** ** 4C ** ** ** ** ** ** ** 49 ** FF FF FF FF FF FF FF 7F)
registersymbol(itemIDChkOnPickUpCallerAOB)

label(pPickUpItem)
registersymbol(pPickUpItem)
label(bCustPickUpKeyID)
registersymbol(bCustPickUpKeyID)
label(bCustPickUpKeyPressed)
registersymbol(bCustPickUpKeyPressed)
label(dCustPickUpItemID)
registersymbol(dCustPickUpItemID)
label(dCustPickUpWeaponID)
registersymbol(dCustPickUpWeaponID)

alloc(newmem,2048,itemIDChkOnPickUpCallerAOB+8) //"re2.exe"+DC5B66C)
label(returnhere)
label(originalcode_itemIDChkOnPickUpCallerAOB)
registersymbol(originalcode_itemIDChkOnPickUpCallerAOB)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov rcx,bCustPickUpKeyPressed
cmp byte ptr [rcx],1
jne @f
mov rcx,dCustPickUpItemID
cmp dword ptr [rcx],fffffffe
je @f
cmp dword ptr [rcx+4],fffffffe
je @f
mov ecx,[rcx]
mov [r8+10],ecx
mov rcx,dCustPickUpWeaponID
mov ecx,[rcx]
mov [r8+14],ecx

originalcode_itemIDChkOnPickUpCallerAOB:
readmem(itemIDChkOnPickUpCallerAOB+8,7)
//movzx ecx,al
//mov rax,[rbx+50]

exit:
jmp returnhere

///
pPickUpItem:
dq 0
bCustPickUpKeyID:
dd 04
bCustPickUpKeyPressed:
dd 0
dCustPickUpItemID:
dd fffffffe
dCustPickUpWeaponID:
dd fffffffe
///

itemIDChkOnPickUpCallerAOB+8: //"re2.exe"+DC5B66C:
jmp newmem
nop
nop
returnhere:

///*****************************************///
//modified from TheyCallMeTim13's lua keylistener script
//http://fearlessrevolution.com/viewtopic.php?f=4&amp;t=6041&amp;start=60#p62657
{$lua}
local function custpickupkeyLuaThread(threadCPUK)
	local addrCPUK = getAddressSafe('bCustPickUpKeyPressed')
	while CustPickUpKeyThreadLoop do
        sleep(100)
		if addrCPUK then
            if ( isKeyPressed( readInteger('bCustPickUpKeyID') ) ) then
			    writeBytes(addrCPUK, 1)
            else
                writeBytes(addrCPUK, 0)
            end
		else
			addrCPUK = getAddressSafe('bCustPickUpKeyPressed')
		end
	end
	threadCPUK.terminate()
--    while CustPickUpKeyThreadLoop do
--          if ( isKeyPressed(VK_CAPITAL) ) then
--              writeBytes("bCustPickUpKeyPressed" ,1)
--          else
--              writeBytes("bCustPickUpKeyPressed" ,0)
--          end
--    end
--    threadCPUK.terminate()
end
----------------------------------
if syntaxcheck then return end
CustPickUpKeyThreadLoop = true
createThread(custpickupkeyLuaThread)
{$asm}

///*****************************************///


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
{$lua}
if syntaxcheck then return end
CustPickUpKeyThreadLoop = false
{$asm}

///*****************************************///
dealloc(newmem)
itemIDChkOnPickUpCallerAOB+8: //"re2.exe"+DC5B66C:
readmem(originalcode_itemIDChkOnPickUpCallerAOB,7)
//db 0F B6 C8 48 8B 43 50
//Alt: movzx ecx,al
//Alt: mov rax,[rbx+50]
unregistersymbol(originalcode_itemIDChkOnPickUpCallerAOB)

unregistersymbol(pPickUpItem)
unregistersymbol(bCustPickUpKeyID)
unregistersymbol(bCustPickUpKeyPressed)
unregistersymbol(dCustPickUpItemID)
unregistersymbol(dCustPickUpWeaponID)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>14724</ID>
              <Description>"set ids, then hold key and pick up"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>14727</ID>
              <Description>"remember to set the proper ammo type afterwards"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>14725</ID>
              <Description>"key"</Description>
              <Options moHideChildren="1"/>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">10:SHIFT key
11:CTRL key
12:ALT key
14:CAPS LOCK key
20:Spacebar
04:Middle Mouse Button
05:X1 Mouse Button
06:X2 Moust Button
</DropDownList>
              <ShowAsHex>1</ShowAsHex>
              <Color>008000</Color>
              <VariableType>Byte</VariableType>
              <Address>bCustPickUpKeyID</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>14726</ID>
                  <Description>""</Description>
                  <Color>008000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+4</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14722</ID>
              <Description>"item id"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">fffffffe:set an id first
00000000:is weapon
00000001:First Aid Spray
00000002:Green Herb
00000003:Red Herb
00000004:Blue Herb
00000005:Mixed Herb (G+G)
00000006:Mixed Herb (G+R)
00000007:Mixed Herb (G+B)
00000008:Mixed Herb (G+G+B)
00000009:Mixed Herb (G+G+G)
0000000A:Mixed Herb (G+R+B)
0000000B:Mixed Herb (R+B)
0000000C:Green Herb
0000000D:Red Herb
0000000E:Blue Herb
0000000F:Handgun Ammo
00000010:Shotgun Shells
00000011:Submachine Gun Ammo
00000012:MAG Ammo
00000016:Acid Rounds
00000017:Flame Rounds
00000018:Needle Cartridges
00000019:Fuel
0000001A:Large-caliber Handgun Ammo
0000001B:High-Powered Rounds (SLS 60)
0000001F:Detonator
00000020:Ink Ribbon
00000021:Wooden Board
00000022:Electronic Gadget
00000023:Battery (9-volt)
00000024:Gunpowder
00000025:Gunpowder (Large)
00000026:High-Grade Gunpowder (Yellow)
00000027:High-Grade Gunpowder (White)
00000030:High-Capacity Mag. (Matilda)
00000031:Muzzle Brake (Matilda)
00000032:Gun Stock(Matilda)
00000033:Speed Loader (SLS 60)
00000034:Laser Sight (JMB Hp3)
00000035:Reinforced Frame (SLS 60)
00000036:High-Capacity Mag. (JMB Hp3)
00000037:Shotgun Stock (W-870)
00000038:Long Barrel (W-870)
0000003A:High-Capacity Mag. (MQ 11)
0000003C:Suppressor (MQ 11)
0000003D:Red Dot Sight (Lightning Hawk)
0000003E:Long Barrel (Lightning Hawk)
00000040:Shoulder Stock (GM 79)
00000041:Regulator (Flamethrower)
00000042:High Voltage Condenser (Spark Shot)
00000048:Film "Hiding Place"
00000049:Film "Rising Rookie"
0000004A:Film "Commemorative"
0000004B:Film "3F Locker"
0000004C:Film "Lion Statue"
0000004D:Storage Room Key
0000004F:Mechanic Jack Handle
00000050:Square Crank
00000051:Unicorn Medallion
00000052:Spade Key
00000053:Parking Garage Key Card
00000054:Weapons Locker Key Card
00000056:Valve Handle
00000057:S.T.A.R.S. Badge
00000058:Scepter
0000005A:Red Jewel
0000005B:Bejeweled Box
0000005D:Bishop Plug
0000005E:Rook Plug
0000005F:King Plug
00000062:Picture Block
00000066:USB Dongle Key
00000070:Spare Key (key pad)
00000072:Red Book (Art Object)
00000073:Statue's Left Arm
00000074:Left Arm with Book
00000076:Lion Medallion
00000077:Diamond Key
00000078:Car Key
0000007C:Maiden Medallion
0000007E:Power Panel Part
0000007F:Power Panel Part
00000080:Lovers Relief
00000081:Small Gear
00000082:Large Gear
00000083:Courtyard Key
00000084:Knight Plug
00000085:Pawn Plug
00000086:Queen Plug
00000087:Boxed Electronic Part
00000088:Boxed Electronic Part
0000009F:Orphanage Key
000000A0:Club Key
000000A9:Heart Key
000000AA:U.S.S. Digital Video Cassette
000000B0:T-Bar Valve Handle
000000B3:Dispersal Cartridge (Empty)
000000B4:Dispersal Cartridge (Solution)
000000B5:Dispersal Cartridge (Herbicide)
000000B7:Joint Plug
000000BA:Upgrade Chip (Admin)
000000BB:ID Wristband (Admin)
000000BC:Electronic Chip
000000BD:Signal Modulator
000000BE:Trophy
000000BF:Trophy
000000C2:Sewers Key
000000C3:ID Wristband (Visitor)
000000C4:ID Wristband (General Staff)
000000C5:ID Wristband (Senior Staff)
000000C6:Upgrade Chip (General Staff)
000000C7:Upgrade Chip (Senior Staff)
000000C8:ID Wristband (Visitor)
000000C9:ID Wristband (General Staff)
000000CA:ID Wristband (Senior Staff)
000000CB:Lab Digital Video Cassette
000000E6:Briefcase
000000F0:Fuse (Main Hall)
000000F1:Fuse (Break Room Hallway)
000000F3:Scissors
000000F4:Bolt Cutter
000000F5:Stuffed Doll
00000106:Hip Pouch
0000011e:Old Key (Ghost Survivour)
00000123:Portable Safe
00000125:Tin Storage Box
00000126:Wooden Box
00000127:Wooden Box
00000128:Tin Storage Box

</DropDownList>
              <ShowAsHex>1</ShowAsHex>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>dCustPickUpItemID</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>14723</ID>
              <Description>"weapon id"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">fffffffe:set an id first
FFFFFFFF:not weapon
00000001:Handgun - Matilda
00000002:Handgun - M19
00000003:Handgun - JMB Hp3
00000004:Handgun - Quickdraw Army Revolver
00000007:Handgun - MUP
00000008:Handgun - Broom Hc
00000009:Handgun - SLS 60
0000000B:Shotgun - W-870
00000015:Sub Gun - MQ 11
00000017:Sub Gun - LE 5 (Infinite)
0000001F:MAG - Lightning Hawk
00000029:EMF Visualizer
0000002A:Grenade Launcher - GM 79
0000002B:Chemical Flamethrower
0000002C:Stun Gun - Spark Shot
0000002D:ATM-4
0000002E:Combat Knife
0000002F:Combat knife (Infinite)
00000031:Anti-tank Rocket
00000032:Minigun
00000041:Hand Grenade
00000042:Flash Grenade
00000052:Handgun - Samurai Edge (Infinite)
00000053:Handgun - Samurai Edge (Chris Model)
00000054:Handgun - Samurai Edge (Jill Model)
00000055:Handgun - Samurai Edge (Albert Model)
000000DE:ATM-4 (Infinite)
000000F2:Anti-tank Rocket (Infinite)
000000FC:Minigun (Infinite)

</DropDownList>
              <ShowAsHex>1</ShowAsHex>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>dCustPickUpWeaponID</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>13013</ID>
          <Description>"universal item key .2a"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
define(universalitemkeyiddefault,14)

aobscanmodule(itemIDChkOnWObjectInteractViaInvClickAOB,re2.exe,EB 02 ** ** 39 50 10 74 ** 48)
registersymbol(itemIDChkOnWObjectInteractViaInvClickAOB)

label(bUniversalItemKeyID)
registersymbol(bUniversalItemKeyID)
label(bUniversalItemKeyPressed)
registersymbol(bUniversalItemKeyPressed)

alloc(newmem,2048,itemIDChkOnWObjectInteractViaInvClickAOB+4) //"re2.exe"+E9A08EF)
label(returnhere)
label(originalcode_itemIDChkOnWObjectInteractViaInvClickAOB)
registersymbol(originalcode_itemIDChkOnWObjectInteractViaInvClickAOB)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rcx
mov rcx,bUniversalItemKeyPressed
cmp byte ptr [rcx],1
pop rcx
je @f

readmem(itemIDChkOnWObjectInteractViaInvClickAOB+4,3)
//cmp [rax+10],edx
@@:
reassemble(itemIDChkOnWObjectInteractViaInvClickAOB+7)
//je re2.exe+E9A0927
jmp exit

originalcode_itemIDChkOnWObjectInteractViaInvClickAOB:
readmem(itemIDChkOnWObjectInteractViaInvClickAOB+4,5)
//cmp [rax+10],edx
//je re2.exe+E9A0927

exit:
jmp returnhere

///
bUniversalItemKeyID:
dd universalitemkeyiddefault
bUniversalItemKeyPressed:
dd 0
///

itemIDChkOnWObjectInteractViaInvClickAOB+4: //"re2.exe"+E9A08EF:
jmp newmem
returnhere:

///*****************************************///
//item id chk on use with world object interact
aobscanmodule(itemIDChkOnWObjectInteractViaInvUseAOB,re2.exe,74 0E 48 ** ** ** 48 ** ** 74 05 8B ** ** EB 02 ** ** 39 ** ** 74 ** 48)
registersymbol(itemIDChkOnWObjectInteractViaInvUseAOB)

alloc(newmem2,2048,itemIDChkOnWObjectInteractViaInvUseAOB+12) //"re2.exe"+E9A0D77)
label(returnhere2)
label(originalcode2_itemIDChkOnWObjectInteractViaInvUseAOB)
registersymbol(originalcode2_itemIDChkOnWObjectInteractViaInvUseAOB)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push rbx
mov rbx,bUniversalItemKeyPressed
cmp byte ptr [rbx],1
pop rbx
je @f

readmem(itemIDChkOnWObjectInteractViaInvUseAOB+12,3)
//cmp [rax+10],ecx
@@:
reassemble(itemIDChkOnWObjectInteractViaInvUseAOB+15)
//je re2.exe+E9A0DB1
jmp exit2

originalcode2_itemIDChkOnWObjectInteractViaInvUseAOB:
readmem(itemIDChkOnWObjectInteractViaInvUseAOB+12,5)
//cmp [rax+10],ecx
//je re2.exe+E9A0DB1

exit2:
jmp returnhere2

///

itemIDChkOnWObjectInteractViaInvUseAOB+12: //"re2.exe"+E9A0D77:
jmp newmem2
returnhere2:

///*****************************************///
//modified from TheyCallMeTim13's lua keylistener script
//http://fearlessrevolution.com/viewtopic.php?f=4&amp;t=6041&amp;start=60#p62657
{$lua}
local function universalitemkeyLuaThread(thread)
	local addr = getAddressSafe('bUniversalItemKeyPressed')
	while UniversalItemkeyLuaThreadLoop do
        sleep(100)
		if addr then
            if ( isKeyPressed( readInteger('bUniversalItemKeyID') ) ) then
			    writeBytes(addr, 1)
            else
                writeBytes(addr, 0)
            end
		else
			addr = getAddressSafe('bUniversalItemKeyPressed')
		end
	end
	thread.terminate()
--    while UniversalItemkeyLuaThreadLoop do
--          if ( isKeyPressed(VK_CAPITAL) ) then
--              writeBytes("bUniversalItemKeyPressed" ,1)
--          else
--              writeBytes("bUniversalItemKeyPressed" ,0)
--          end
--    end
--    thread.terminate()
end
----------------------------------
if syntaxcheck then return end
UniversalItemkeyLuaThreadLoop = true
createThread(universalitemkeyLuaThread)
{$asm}

///*****************************************///





[DISABLE]
//code from here till the end of the code will be used to disable the cheat
{$lua}
if syntaxcheck then return end
UniversalItemkeyLuaThreadLoop = false
{$asm}

///*****************************************///
dealloc(newmem)
itemIDChkOnWObjectInteractViaInvClickAOB+4: //"re2.exe"+E9A08EF:
readmem(originalcode_itemIDChkOnWObjectInteractViaInvClickAOB,5)
//db 39 50 10 74 33
//Alt: cmp [rax+10],edx
//Alt: je re2.exe+E9A0927
unregistersymbol(originalcode_itemIDChkOnWObjectInteractViaInvClickAOB)

unregistersymbol(bUniversalItemKeyID)
unregistersymbol(bUniversalItemKeyPressed)

///*****************************************///
dealloc(newmem2)
itemIDChkOnWObjectInteractViaInvUseAOB+12: //"re2.exe"+E9A0D77:
readmem(originalcode2_itemIDChkOnWObjectInteractViaInvUseAOB,5)
//db 39 48 10 74 35
//Alt: cmp [rax+10],ecx
//Alt: je re2.exe+E9A0DB1
unregistersymbol(originalcode2_itemIDChkOnWObjectInteractViaInvUseAOB)

///*****************************************///
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>13019</ID>
              <Description>"key"</Description>
              <Options moHideChildren="1"/>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">10:SHIFT key
11:CTRL key
12:ALT key
14:CAPS LOCK key
04:Middle Mouse Button
05:X1 Mouse Button
06:X2 Moust Button
</DropDownList>
              <ShowAsHex>1</ShowAsHex>
              <Color>008000</Color>
              <VariableType>Byte</VariableType>
              <Address>bUniversalItemKeyID</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>13020</ID>
                  <Description>""</Description>
                  <Color>008000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+4</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>13021</ID>
                      <Description>""</Description>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>+4</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>13005</ID>
          <Description>"slow walk key .2"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
//move float read, 0&lt;&gt;1, r8==b
define(walkkeyiddefault,14)

aobscanmodule(someFloatRead1AOB,re2.exe,E8 ** ** ** ** 48 ** ** ** 5B C3 0F 57 C0 48 ** ** ** 5B C3 F3 ** ** ** ** 48 ** ** ** 5B C3)
registersymbol(someFloatRead1AOB)

label(bWalkKeyID)
registersymbol(bWalkKeyID)
label(bWalkKeyPressed)
registersymbol(bWalkKeyPressed)

alloc(newmem,2048,someFloatRead1AOB+14) //"re2.exe"+F58320D)
label(returnhere)
label(originalcode_someFloatRead1AOB)
registersymbol(originalcode_someFloatRead1AOB)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp r8,b
jne @f

mov rbx,bWalkKeyPressed
cmp byte ptr [rbx],1
jne @f

mov rbx,dCustMoveSpeed
movss xmm0,[rbx]
jmp exit

originalcode_someFloatRead1AOB:
readmem(someFloatRead1AOB+14,5)
//movss xmm0,[rcx+10]

exit:
jmp returnhere

///
bWalkKeyID:
dd walkkeyiddefault
bWalkKeyPressed:
dd 0
dCustMoveSpeed:
dd (float)0.73
///

someFloatRead1AOB+14: //"re2.exe"+F58320D:
jmp newmem
returnhere:

///*****************************************///
//modified from TheyCallMeTim13's lua keylistener script
//http://fearlessrevolution.com/viewtopic.php?f=4&amp;t=6041&amp;start=60#p62657
{$lua}
local function walkkeyLuaThread(thread2)
	local addr2 = getAddressSafe('bWalkKeyPressed')
	while RunWalkkeyLuaThreadLoop do
        sleep(100)
		if addr2 then
            if ( isKeyPressed( readInteger('bWalkKeyID') ) ) then
			    writeBytes(addr2, 1)
            else
                writeBytes(addr2, 0)
            end
		else
			addr2 = getAddressSafe('bWalkKeyPressed')
		end
	end
	thread2.terminate()
--    while RunWalkkeyLuaThreadLoop do
--          if ( isKeyPressed(VK_CAPITAL) ) then
--              writeBytes("bWalkKeyPressed" ,1)
--          else
--              writeBytes("bWalkKeyPressed" ,0)
--          end
--    end
--    thread2.terminate()
end
----------------------------------
if syntaxcheck then return end
RunWalkkeyLuaThreadLoop = true
createThread(walkkeyLuaThread)
{$asm}

///*****************************************///




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
{$lua}
if syntaxcheck then return end
RunWalkkeyLuaThreadLoop = false
{$asm}

///*****************************************///
dealloc(newmem)
someFloatRead1AOB+14: //"re2.exe"+F58320D:
readmem(originalcode_someFloatRead1AOB,5)
//db F3 0F 10 41 10
//Alt: movss xmm0,[rcx+10]
unregistersymbol(originalcode_someFloatRead1AOB)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>13006</ID>
              <Description>"key"</Description>
              <Options moHideChildren="1"/>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">10:SHIFT key
11:CTRL key
12:ALT key
14:CAPS LOCK key
04:Middle Mouse Button
05:X1 Mouse Button
06:X2 Moust Button
</DropDownList>
              <ShowAsHex>1</ShowAsHex>
              <Color>008000</Color>
              <VariableType>Byte</VariableType>
              <Address>bWalkKeyID</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>13007</ID>
                  <Description>""</Description>
                  <Color>008000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+4</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>13008</ID>
                      <Description>""</Description>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>+4</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>17258</ID>
          <Description>"slow motion .4c (speedhack)"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(slowmokeys,1024,re2.exe)

label(bKeyCombMethod)
registersymbol(bKeyCombMethod)
label(dSlowMoKey1)
registersymbol(dSlowMoKey1)
label(dSlowMoKey2)
registersymbol(dSlowMoKey2)
label(dCustSpeedhackSpeed)
registersymbol(dCustSpeedhackSpeed)

///
slowmokeys:
bKeyCombMethod:
dd 0    //0: and, 1: or
dSlowMoKey1:
dd 05
dSlowMoKey2:
dd 02
dCustSpeedhackSpeed:
dd (float)0.4
///


{$lua}

lastSpeed=speedhack_getSpeed();
bSpeedKeyReleased=1;
combmethod=0;
local function slowmokeyLuaThread(thread3)
	while SlowMokeyLuaThreadLoop do
        sleep(100)
        addrga = readPointer(getAddress('pSomeGameStatus'))
--        addrga = readPointer(getAddress('pSomeGameStatus'))
--        addrga = getAddress('pSomeGameStatus')
--        print(readBytes('bKeyCombMethod'))
		if ((getAddressSafe('dCustSpeedhackSpeed')) and (getAddressSafe('bKeyCombMethod')))then
            combmethod = readBytes('bKeyCombMethod')
            if ( ( ( combmethod ==0 and (isKeyPressed(readInteger('dSlowMoKey1'))) and (isKeyPressed(readInteger('dSlowMoKey2'))) ) or ( combmethod==1 and ( (isKeyPressed(readInteger('dSlowMoKey1'))) or (isKeyPressed(readInteger('dSlowMoKey2'))) ) ) )  and not( readBytes(addrga+0x51)==1 or readBytes(addrga+0x53)==1) ) then
--            if ( (isKeyPressed(readInteger('dSlowMoKey1'))) and (isKeyPressed(readInteger('dSlowMoKey2'))) ) then
               if bSpeedKeyReleased == 1 then
                   if speedhack_getSpeed() ~= readFloat("dCustSpeedhackSpeed") then
--                      print("pressing: ", lastSpeed)
                     lastSpeed=speedhack_getSpeed()
                     speedhack_setSpeed(readFloat("dCustSpeedhackSpeed"))
                     bSpeedKeyReleased=0
                   end
               end

            else

               if bSpeedKeyReleased == 0 then
                 bSpeedKeyReleased=1
--                 print(lastSpeed)
                 if speedhack_getSpeed() ~= lastSpeed then
                   speedhack_setSpeed(lastSpeed)
                 end
               end

            end
		end
	end
	thread3.terminate()
end
----------------------------------
if syntaxcheck then return end
SlowMokeyLuaThreadLoop = true
createThread(slowmokeyLuaThread)
{$asm}


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
{$lua}
if syntaxcheck then return end
SlowMokeyLuaThreadLoop = false
{$asm}

///*****************************************///
dealloc(newmem)
unregistersymbol(bKeyCombMethod)
unregistersymbol(dSlowMoKey1)
unregistersymbol(dSlowMoKey2)
unregistersymbol(dCustSpeedhackSpeed)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>17259</ID>
              <Description>"key 1"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">10:SHIFT key
11:CTRL key
12:ALT key
14:CAPS LOCK key
02:Right Mouse Button
04:Middle Mouse Button
05:X1 Mouse Button
06:X2 Moust Button
</DropDownList>
              <ShowAsHex>1</ShowAsHex>
              <Color>008000</Color>
              <VariableType>Byte</VariableType>
              <Address>dSlowMoKey1</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>16232</ID>
              <Description>"and/or?"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:and
1:or
</DropDownList>
              <Color>008000</Color>
              <VariableType>Byte</VariableType>
              <Address>bKeyCombMethod</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>17260</ID>
              <Description>"key 2"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">10:SHIFT key
11:CTRL key
12:ALT key
14:CAPS LOCK key
02:Right Mouse Button
04:Middle Mouse Button
05:X1 Mouse Button
06:X2 Moust Button
</DropDownList>
              <ShowAsHex>1</ShowAsHex>
              <Color>008000</Color>
              <VariableType>Byte</VariableType>
              <Address>dSlowMoKey2</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>17261</ID>
              <Description>"slow motion speed"</Description>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>dCustSpeedhackSpeed</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>13179</ID>
          <Description>"game play time mod .2"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
define(qmaxgameplaytime_default,#7123) //1:58:43

//aobscanmodule(totalGameTimeWriteAOB,re2.exe,E8 ** ** ** ** EB 08 48 ** ** ** 48 ** ** ** 48 ** ** ** 4C ** ** ** 0F 85 ** ** ** ** 44 ** ** ** 0F 85)
//registersymbol(totalGameTimeWriteAOB)

label(pGameTime)
registersymbol(pGameTime)
label(qMaxGamePlayTime)
registersymbol(qMaxGamePlayTime)

alloc(newmem,2048,totalGameTimeWriteAOB+7) //"re2.exe"+AD9D8F5)
label(returnhere)
label(originalcode_totalGameTimeWriteAOB)
registersymbol(originalcode_totalGameTimeWriteAOB)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rbx
mov rbx,pGameTime
mov [rbx],rcx
mov rbx,qMaxGamePlayTime
mov rbx,[rbx]
imul rbx,rbx,#1000000
lea rax,[rdx+rbp]
sub rax,[rcx+20]
sub rax,[rcx+30]
cmp rax,rbx
jbe @f
mov rax,rbx
add rax,[rcx+20]
add rax,[rcx+30]
sub rax,#60000000
mov rdx,rax
xor rbp,ebp

end:
pop rbx

originalcode_totalGameTimeWriteAOB:
readmem(totalGameTimeWriteAOB+7,8)
//lea rax,[rdx+rbp]
//mov [rcx+18],rax

exit:
jmp returnhere

///
pGameTime:
dq 0
qMaxGamePlayTime:
dq qmaxgameplaytime_default
///

totalGameTimeWriteAOB+7: //"re2.exe"+AD9D8F5:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
totalGameTimeWriteAOB+7: //"re2.exe"+AD9D8F5:
readmem(originalcode_totalGameTimeWriteAOB,8)
//db 48 8D 04 2A 48 89 41 18
//Alt: lea rax,[rdx+rbp]
//Alt: mov [rcx+18],rax
unregistersymbol(originalcode_totalGameTimeWriteAOB)

unregistersymbol(pGameTime)
unregistersymbol(qMaxGamePlayTime)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>13180</ID>
              <Description>"stop at:"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>808080</Color>
              <VariableType>Array of byte</VariableType>
              <ByteLength>0</ByteLength>
              <Address>qMaxGamePlayTime</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>13181</ID>
                  <Description>"hour"</Description>
                  <Color>008000</Color>
                  <VariableType>Custom</VariableType>
                  <CustomType>RE2_Hrs</CustomType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>13182</ID>
                  <Description>"minute"</Description>
                  <Color>008000</Color>
                  <VariableType>Custom</VariableType>
                  <CustomType>RE2_Mins</CustomType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>13183</ID>
                  <Description>"second"</Description>
                  <Color>008000</Color>
                  <VariableType>Custom</VariableType>
                  <CustomType>RE2_Secs</CustomType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>13184</ID>
                  <Description>"total in secs"</Description>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>13185</ID>
              <Description>""</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>13186</ID>
                  <Description>"total"</Description>
                  <Color>0000FF</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pGameTime</Address>
                  <Offsets>
                    <Offset>18</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>13187</ID>
                      <Description>"cut-scene"</Description>
                      <Color>0000FF</Color>
                      <VariableType>8 Bytes</VariableType>
                      <Address>+8</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>13188</ID>
                          <Description>"pause"</Description>
                          <Color>0000FF</Color>
                          <VariableType>8 Bytes</VariableType>
                          <Address>+10</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>13025</ID>
          <Description>"highlighted item"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(itemIDReadOnHighlightedInInvAOB,re2.exe,4C ** ** ** 45 ** ** 4D ** ** 74 ** 45 ** ** ** 75)
registersymbol(itemIDReadOnHighlightedInInvAOB)

label(bSpecialChangeAa)
registersymbol(bSpecialChangeAa)
label(bSpecialChangeAb)
registersymbol(bSpecialChangeAb)
label(bSpecialChangeB)
registersymbol(bSpecialChangeB)
label(bSpecialChangeC)
registersymbol(bSpecialChangeC)
label(bSpecialChangeD)
registersymbol(bSpecialChangeD)
label(pHighlightedItem)
registersymbol(pHighlightedItem)

alloc(newmem,2048,itemIDReadOnHighlightedInInvAOB+c) //"re2.exe"+9868BBC)
label(returnhere)
label(originalcode_itemIDReadOnHighlightedInInvAOB)
registersymbol(originalcode_itemIDReadOnHighlightedInInvAOB)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov rax,pHighlightedItem
mov [rax],r8
mov rax,bSpecialChangeAa

ncaa:
cmp byte ptr [rax],1
jne @f
cmp dword ptr [r8+10],f
jne @f
mov dword ptr [r8+10],1a

ncab:
mov rax,bSpecialChangeAb
cmp byte ptr [rax],1
jne @f
cmp dword ptr [r8+10],1a
jne @f
mov dword ptr [r8+10],f

ncb:
cmp byte ptr [rax+4],1
jne ncc
cmp dword ptr [r8+10],16
je @f
cmp dword ptr [r8+10],17
je @f
cmp dword ptr [r8+10],18
je @f
jmp ncc
@@:
mov dword ptr [r8+10],1b

ncc:
cmp byte ptr [rax+8],1
jne @f
cmp dword ptr [r8+10],20
jne @f
mov dword ptr [r8+10],1a
fild dword ptr [r8+20]
fimul dword ptr [rax+c]
fistp dword ptr [r8+20]

ncd:
mov rax,bSpecialChangeD
cmp byte ptr [rax],1
jne @f
cmp dword ptr [r8+10],12
jne @f
mov dword ptr [r8+10],f

@@:
readmem(itemIDReadOnHighlightedInInvAOB+c,4)
reassemble(itemIDReadOnHighlightedInInvAOB+10)
jmp exit

originalcode_itemIDReadOnHighlightedInInvAOB:
readmem(itemIDReadOnHighlightedInInvAOB+c,6)
//cmp [r8+10],r9d
//jne re2.exe+9868BDE

exit:
jmp returnhere

///
bSpecialChangeAa: //Handgun Ammo &gt; Large-caliber Handgun Ammo
dd 0
bSpecialChangeAb: //Large-caliber Handgun Ammo &gt; Handgun Ammo
dd 0
bSpecialChangeB: //Rounds+Needles &gt; High-Powered Rounds (SLS 60)
dd 0
bSpecialChangeC: //Ribbon &gt; 20 Large-caliber Handgun Ammo
dd 0
dd #10
bSpecialChangeD: //MAG Ammo &gt; Handgun Ammo
dd 0
pHighlightedItem:
///

itemIDReadOnHighlightedInInvAOB+c: //"re2.exe"+9868BBC:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
itemIDReadOnHighlightedInInvAOB+c: //"re2.exe"+9868BBC:
readmem(originalcode_itemIDReadOnHighlightedInInvAOB,6)
//db 45 39 48 10 75 1C
//Alt: cmp [r8+10],r9d
//Alt: jne re2.exe+9868BDE
unregistersymbol(originalcode_itemIDReadOnHighlightedInInvAOB)

unregistersymbol(bSpecialChangeAa)
unregistersymbol(bSpecialChangeAb)
unregistersymbol(bSpecialChangeB)
unregistersymbol(bSpecialChangeC)
unregistersymbol(bSpecialChangeD)
unregistersymbol(pHighlightedItem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>13026</ID>
              <Description>""</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FFFFFF</Color>
              <VariableType>Array of byte</VariableType>
              <ByteLength>0</ByteLength>
              <Address>pHighlightedItem</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>13130</ID>
                  <Description>"item id"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">00000000:-is weapon
00000001:First Aid Spray
00000002:Green Herb
00000003:Red Herb
00000004:Blue Herb
00000005:Mixed Herb (G+G)
00000006:Mixed Herb (G+R)
00000007:Mixed Herb (G+B)
00000008:Mixed Herb (G+G+B)
00000009:Mixed Herb (G+G+G)
0000000A:Mixed Herb (G+R+B)
0000000B:Mixed Herb (R+B)
0000000C:Green Herb
0000000D:Red Herb
0000000E:Blue Herb
0000000F:Handgun Ammo
00000010:Shotgun Shells
00000011:Submachine Gun Ammo
00000012:MAG Ammo
00000016:Acid Rounds
00000017:Flame Rounds
00000018:Needle Cartridges
00000019:Fuel
0000001A:Large-caliber Handgun Ammo
0000001B:High-Powered Rounds (SLS 60)
0000001F:Detonator
00000020:Ink Ribbon
00000021:Wooden Board
00000022:Electronic Gadget
00000023:Battery (9-volt)
00000024:Gunpowder
00000025:Gunpowder (Large)
00000026:High-Grade Gunpowder (Yellow)
00000027:High-Grade Gunpowder (White)
00000030:High-Capacity Mag. (Matilda)
00000031:Muzzle Brake (Matilda)
00000032:Gun Stock(Matilda)
00000033:Speed Loader (SLS 60)
00000034:Laser Sight (JMB Hp3)
00000035:Reinforced Frame (SLS 60)
00000036:High-Capacity Mag. (JMB Hp3)
00000037:Shotgun Stock (W-870)
00000038:Long Barrel (W-870)
0000003A:High-Capacity Mag. (MQ 11)
0000003C:Suppressor (MQ 11)
0000003D:Red Dot Sight (Lightning Hawk)
0000003E:Long Barrel (Lightning Hawk)
00000040:Shoulder Stock (GM 79)
00000041:Regulator (Flamethrower)
00000042:High Voltage Condenser (Spark Shot)
00000048:Film "Hiding Place"
00000049:Film "Rising Rookie"
0000004A:Film "Commemorative"
0000004B:Film "3F Locker"
0000004C:Film "Lion Statue"
0000004D:Storage Room Key
0000004F:Mechanic Jack Handle
00000050:Square Crank
00000051:Unicorn Medallion
00000052:Spade Key
00000053:Parking Garage Key Card
00000054:Weapons Locker Key Card
00000056:Valve Handle
00000057:S.T.A.R.S. Badge
00000058:Scepter
0000005A:Red Jewel
0000005B:Bejeweled Box
0000005D:Bishop Plug
0000005E:Rook Plug
0000005F:King Plug
00000062:Picture Block
00000066:USB Dongle Key
00000070:Spare Key (key pad)
00000072:Red Book (Art Object)
00000073:Statue's Left Arm
00000074:Left Arm with Book
00000076:Lion Medallion
00000077:Diamond Key
00000078:Car Key
0000007C:Maiden Medallion
0000007E:Power Panel Part
0000007F:Power Panel Part
00000080:Lovers Relief
00000081:Small Gear
00000082:Large Gear
00000083:Courtyard Key
00000084:Knight Plug
00000085:Pawn Plug
00000086:Queen Plug
00000087:Boxed Electronic Part
00000088:Boxed Electronic Part
0000009F:Orphanage Key
000000A0:Club Key
000000A9:Heart Key
000000AA:U.S.S. Digital Video Cassette
000000B0:T-Bar Valve Handle
000000B3:Dispersal Cartridge (Empty)
000000B4:Dispersal Cartridge (Solution)
000000B5:Dispersal Cartridge (Herbicide)
000000B7:Joint Plug
000000BA:Upgrade Chip (Admin)
000000BB:ID Wristband (Admin)
000000BC:Electronic Chip
000000BD:Signal Modulator
000000BE:Trophy
000000BF:Trophy
000000C2:Sewers Key
000000C3:ID Wristband (Visitor)
000000C4:ID Wristband (General Staff)
000000C5:ID Wristband (Senior Staff)
000000C6:Upgrade Chip (General Staff)
000000C7:Upgrade Chip (Senior Staff)
000000C8:ID Wristband (Visitor)
000000C9:ID Wristband (General Staff)
000000CA:ID Wristband (Senior Staff)
000000CB:Lab Digital Video Cassette
000000E6:Briefcase
000000F0:Fuse (Main Hall)
000000F1:Fuse (Break Room Hallway)
000000F3:Scissors
000000F4:Bolt Cutter
000000F5:Stuffed Doll
00000106:Hip Pouch
0000011e:Old Key (Ghost Survivour)
00000123:Portable Safe
00000125:Tin Storage Box
00000126:Wooden Box
00000127:Wooden Box
00000128:Tin Storage Box

</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+10</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>13131</ID>
                  <Description>"weapon id"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:-not weapon
00000001:Handgun - Matilda
00000002:Handgun - M19
00000003:Handgun - JMB Hp3
00000004:Handgun - Quickdraw Army Revolver
00000007:Handgun - MUP
00000008:Handgun - Broom Hc
00000009:Handgun - SLS 60
0000000B:Shotgun - W-870
00000015:Sub Gun - MQ 11
00000017:Sub Gun - LE 5 (Infinite)
0000001F:MAG - Lightning Hawk
00000029:EMF Visualizer
0000002A:Grenade Launcher - GM 79
0000002B:Chemical Flamethrower
0000002C:Stun Gun - Spark Shot
0000002D:ATM-4
0000002E:Combat Knife
0000002F:Combat knife (Infinite)
00000031:Anti-tank Rocket
00000032:Minigun
00000041:Hand Grenade
00000042:Flash Grenade
00000052:Handgun - Samurai Edge (Infinite)
00000053:Handgun - Samurai Edge (Chris Model)
00000054:Handgun - Samurai Edge (Jill Model)
00000055:Handgun - Samurai Edge (Albert Model)
000000DE:ATM-4 (Infinite)
000000F2:Anti-tank Rocket (Infinite)
000000FC:Minigun (Infinite)

</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+14</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>13074</ID>
                  <Description>"upgrade"</Description>
                  <DropDownList DisplayValueAsItem="1">00000000:Nothing
00000001:Upgrade 1
00000002:Upgrade 2
00000003:Upgrade 1 + 2
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+18</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>13143</ID>
                      <Description>"1"</Description>
                      <Color>0000FF</Color>
                      <VariableType>Binary</VariableType>
                      <BitStart>0</BitStart>
                      <BitLength>1</BitLength>
                      <ShowAsBinary>0</ShowAsBinary>
                      <Address>+0</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13144</ID>
                      <Description>"2"</Description>
                      <Color>0000FF</Color>
                      <VariableType>Binary</VariableType>
                      <BitStart>1</BitStart>
                      <BitLength>1</BitLength>
                      <ShowAsBinary>0</ShowAsBinary>
                      <Address>+0</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13145</ID>
                      <Description>"3"</Description>
                      <Color>0000FF</Color>
                      <VariableType>Binary</VariableType>
                      <BitStart>2</BitStart>
                      <BitLength>1</BitLength>
                      <ShowAsBinary>0</ShowAsBinary>
                      <Address>+0</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13146</ID>
                      <Description>"4"</Description>
                      <Color>0000FF</Color>
                      <VariableType>Binary</VariableType>
                      <BitStart>3</BitStart>
                      <BitLength>1</BitLength>
                      <ShowAsBinary>0</ShowAsBinary>
                      <Address>+0</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13147</ID>
                      <Description>"5"</Description>
                      <Color>0000FF</Color>
                      <VariableType>Binary</VariableType>
                      <BitStart>4</BitStart>
                      <BitLength>1</BitLength>
                      <ShowAsBinary>0</ShowAsBinary>
                      <Address>+0</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13150</ID>
                      <Description>"6"</Description>
                      <Color>0000FF</Color>
                      <VariableType>Binary</VariableType>
                      <BitStart>5</BitStart>
                      <BitLength>1</BitLength>
                      <ShowAsBinary>0</ShowAsBinary>
                      <Address>+0</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13149</ID>
                      <Description>"7"</Description>
                      <Color>0000FF</Color>
                      <VariableType>Binary</VariableType>
                      <BitStart>6</BitStart>
                      <BitLength>1</BitLength>
                      <ShowAsBinary>0</ShowAsBinary>
                      <Address>+0</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13148</ID>
                      <Description>"8"</Description>
                      <Color>0000FF</Color>
                      <VariableType>Binary</VariableType>
                      <BitStart>7</BitStart>
                      <BitLength>1</BitLength>
                      <ShowAsBinary>0</ShowAsBinary>
                      <Address>+0</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>13132</ID>
                  <Description>"ammo type"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">00000000:N/A
0000000F:Handgun Ammo
00000010:Shotgun Shells
00000011:Submachine Gun Ammo
00000012:MAG Ammo
00000016:Acid Rounds
00000017:Flame Rounds
00000018:Needle Cartridges
00000019:Fuel
0000001A:Large-caliber Handgun Ammo
0000001B:High-Powered Rounds (SLS 60)
0000001C:Rocket
0000001d:Minigun Ammo
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+1C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>13133</ID>
                  <Description>"quantity / durabiliy"</Description>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+20</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>13168</ID>
              <Description>"DO NOT ACTIVATE"</Description>
              <LastState/>
              <Color>FFFFFF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bSpecialChangeAa:
db 1
//bSpecialChangeC:
//db 1
//bSpecialChangeD:
//db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bSpecialChangeAa:
db 0
//bSpecialChangeC:
//db 0
//bSpecialChangeD:
//db 0
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>13189</ID>
              <Description>"DO NOT ACTIVATE"</Description>
              <LastState/>
              <Color>FFFFFF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bSpecialChangeAb:
db 1
//bSpecialChangeB:
//db 1
//bSpecialChangeC:
//db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bSpecialChangeAb:
db 0
//bSpecialChangeB:
//db 0
//bSpecialChangeC:
//db 0
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>13974</ID>
              <Description>"DO NOT ACTIVATE"</Description>
              <LastState/>
              <Color>FFFFFF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{alloc(newmem,2048,"re2.exe"+9B4E3B5)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [rcx+10],1b //SLS 60 hp rounds
jne @f
mov eax,6
mov [rcx+20],eax
jmp fakeoriginalcode

@@:

fakeoriginalcode:
mov eax,[rcx+20]
jmp re2.exe+9B4E3BC

originalcode:
mov eax,[rcx+20]
jmp re2.exe+9B4E3BC

exit:
jmp returnhere

///

"re2.exe"+9B4E3B5:
jmp newmem
returnhere:}




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
{dealloc(newmem)
"re2.exe"+9B4E3B5:
db 8B 41 20 EB 02
//Alt: mov eax,[rcx+20]
//Alt: jmp re2.exe+9B4E3BC}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>13409</ID>
          <Description>"hide weapon upgrade appearance"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(weaponUpgradeFlagsReadForAppearanceAOB,re2.exe,48 ** ** ** ** 00 00 45 ** ** 8B ** ** ** 00 00 48 ** ** 74)
registersymbol(weaponUpgradeFlagsReadForAppearanceAOB)

label(bW870UAppearance)
registersymbol(bW870UAppearance)
label(bMaltildaUAppearance)
registersymbol(bMaltildaUAppearance)
label(bSLS60UAppearance)
registersymbol(bSLS60UAppearance)
label(bJMBHp3UAppearance)
registersymbol(bJMBHp3UAppearance)
label(bFSJMBHp3App)
registersymbol(bFSJMBHp3App)

alloc(newmem,2048,weaponUpgradeFlagsReadForAppearanceAOB+a) //"re2.exe"+C795D26)
label(returnhere)
label(originalcode_weaponUpgradeFlagsReadForAppearanceAOB)
registersymbol(originalcode_weaponUpgradeFlagsReadForAppearanceAOB)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
readmem(weaponUpgradeFlagsReadForAppearanceAOB+a,6)
//mov ebp,[rdi+13c]

db 48 8D 87
readmem(weaponUpgradeFlagsReadForAppearanceAOB+c,4)
//lea rax,[rdi+13c]

cmp word ptr [rax-4],b  //W-870
jne @f
mov rax,bW870UAppearance
mov al,[rax]
movzx eax,al
not eax
and ebp,eax
jmp end

@@:
cmp word ptr [rax-4],1  //Maltilda
jne @f
mov rax,bMaltildaUAppearance
mov al,[rax]
movzx eax,al
not eax
and ebp,eax
jmp end

@@:
cmp word ptr [rax-4],9  //SLS 60
jne @f
mov rax,bSLS60UAppearance
mov al,[rax]
movzx eax,al
not eax
and ebp,eax
jmp end

@@:
cmp word ptr [rax-4],3  //JMB Hp3
jne @f
mov rax,bJMBHp3UAppearance
mov al,[rax]
movzx eax,al
not eax
and ebp,eax

mov rax,bFSJMBHp3App
or bpl,[rax]
jmp end

end:
jmp exit

originalcode_weaponUpgradeFlagsReadForAppearanceAOB:
readmem(weaponUpgradeFlagsReadForAppearanceAOB+a,6)
//mov ebp,[rdi+0000013C]

exit:
jmp returnhere

///
bW870UAppearance:
db 0
bMaltildaUAppearance:
db 0
bSLS60UAppearance:
db 0
bJMBHp3UAppearance:
db 0
bFSJMBHp3App:
db 0
///

weaponUpgradeFlagsReadForAppearanceAOB+a: //"re2.exe"+C795D26:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
weaponUpgradeFlagsReadForAppearanceAOB+a: //"re2.exe"+C795D26:
readmem(originalcode_weaponUpgradeFlagsReadForAppearanceAOB,6)
//db 8B AF 3C 01 00 00
//Alt: mov ebp,[rdi+0000013C]
unregistersymbol(originalcode_weaponUpgradeFlagsReadForAppearanceAOB)

unregistersymbol(bW870UAppearance)
unregistersymbol(bMaltildaUAppearance)
unregistersymbol(bSLS60UAppearance)
unregistersymbol(bJMBHp3UAppearance)
unregistersymbol(bFSJMBHp3App)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>13410</ID>
              <Description>"[Maltilda]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Array of byte</VariableType>
              <ByteLength>0</ByteLength>
              <Address>bMaltildaUAppearance</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>13411</ID>
                  <Description>"Gun Stock"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:as is
1:hide
</DropDownList>
                  <Color>008000</Color>
                  <VariableType>Binary</VariableType>
                  <BitStart>0</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>13412</ID>
                  <Description>"Muzzle Brake"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:as is
1:hide
</DropDownList>
                  <Color>008000</Color>
                  <VariableType>Binary</VariableType>
                  <BitStart>1</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>13975</ID>
                  <Description>"High-Capacity Mag."</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:as is
1:hide
</DropDownList>
                  <Color>008000</Color>
                  <VariableType>Binary</VariableType>
                  <BitStart>2</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>+0</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14234</ID>
              <Description>"[JMB Hp3]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Array of byte</VariableType>
              <ByteLength>0</ByteLength>
              <Address>bJMBHp3UAppearance</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>14236</ID>
                  <Description>"High-Capacity Mag."</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:as is
1:hide
</DropDownList>
                  <Color>008000</Color>
                  <VariableType>Binary</VariableType>
                  <BitStart>1</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14237</ID>
                  <Description>"Laser Pointer"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:as is
1:hide
</DropDownList>
                  <Color>008000</Color>
                  <VariableType>Binary</VariableType>
                  <BitStart>2</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>+0</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>13413</ID>
              <Description>"[SLS 60]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Array of byte</VariableType>
              <ByteLength>0</ByteLength>
              <Address>bSLS60UAppearance</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>13414</ID>
                  <Description>"Reinforced Frame"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:as is
1:hide
</DropDownList>
                  <Color>008000</Color>
                  <VariableType>Binary</VariableType>
                  <BitStart>3</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>+0</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>13415</ID>
              <Description>"[W-870]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Array of byte</VariableType>
              <ByteLength>0</ByteLength>
              <Address>bW870UAppearance</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>13416</ID>
                  <Description>"Long Barrel"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:as is
1:hide
</DropDownList>
                  <Color>008000</Color>
                  <VariableType>Binary</VariableType>
                  <BitStart>0</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>13417</ID>
                  <Description>"Shotgun Stock"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:as is
1:hide
</DropDownList>
                  <Color>008000</Color>
                  <VariableType>Binary</VariableType>
                  <BitStart>1</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>+0</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>13418</ID>
              <Description>"DO NOT ACTIVATE"</Description>
              <LastState/>
              <Color>FFFFFF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bW870UAppearance:
db 1
bMaltildaUAppearance:
db 6
//bSLS60UAppearance:
//db 4
bJMBHp3UAppearance:
db 2
bFSJMBHp3App:
db 4


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bW870UAppearance:
db 0
bMaltildaUAppearance:
db 0
//bSLS60UAppearance:
//db 0
bJMBHp3UAppearance:
db 0
bFSJMBHp3App:
db 0
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>13488</ID>
          <Description>"wet!"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
define(dcuswetamount,(float)0.3)

aobscanmodule(wetFlagReadAOB,re2.exe,48 ** ** 0F 85 ** ** ** ** 8B ** ** ** 00 00 FF ** 83 ** 02)
registersymbol(wetFlagReadAOB)

label(dCusWetAmount)
registersymbol(dCusWetAmount)
label(pSomeFxInfo)
registersymbol(pSomeFxInfo)

alloc(newmem,2048,wetFlagReadAOB+9) //"re2.exe"+AA843B6)
label(returnhere)
label(originalcode_wetFlagReadAOB)
registersymbol(originalcode_wetFlagReadAOB)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rbx
mov rbx,pSomeFxInfo
mov [rbx],rdi
readmem(wetFlagReadAOB+9,6)
//mov eax,[rdi+98]
or eax,1
mov rbx,dCusWetAmount
movss xmm6,[rbx]
maxss xmm6,[rdi+60]
movss [rdi+60],xmm6
pop rbx
jmp exit

originalcode_wetFlagReadAOB:
readmem(wetFlagReadAOB+9,6)
//mov eax,[rdi+00000098]

exit:
jmp returnhere

///
dCusWetAmount:
dd dcuswetamount
pSomeFxInfo:
dq 0
///

wetFlagReadAOB+9: //"re2.exe"+AA843B6:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
wetFlagReadAOB+9: //"re2.exe"+AA843B6:
readmem(originalcode_wetFlagReadAOB,6)
//db 8B 87 98 00 00 00
//Alt: mov eax,[rdi+00000098]
unregistersymbol(originalcode_wetFlagReadAOB)

unregistersymbol(dCusWetAmount)
unregistersymbol(pSomeFxInfo)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>13489</ID>
              <Description>"amount"</Description>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>dCusWetAmount</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>13573</ID>
                  <Description>""</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FFFFFF</Color>
                  <VariableType>Array of byte</VariableType>
                  <ByteLength>0</ByteLength>
                  <Address>pSomeFxInfo</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>13574</ID>
                      <Description>"wet flag"</Description>
                      <Color>0000FF</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+98</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13575</ID>
                      <Description>"wet amount"</Description>
                      <Color>0000FF</Color>
                      <VariableType>Float</VariableType>
                      <Address>+60</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>13551</ID>
          <Description>"follow cam mod .5a"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(folllowCamOffsets2WriteAOB,re2.exe,0F 85 ** ** ** ** 48 ** ** 0F 84 ** ** ** ** F3 0F ** ** ** F3 0F ** ** ** F3 0F ** ** ** C6 ** ** 01 48 ** ** ** 48 ** ** ** 00 0F 85 ** ** ** ** 48 ** ** ** ** 00 00 48)
registersymbol(folllowCamOffsets2WriteAOB)

label(pFCamOffsets)
registersymbol(pFCamOffsets)

alloc(newmem,2048,folllowCamOffsets2WriteAOB+f) //"re2.exe"+7CFB4B)
label(returnhere)
label(originalcode_folllowCamOffsets2WriteAOB)
registersymbol(originalcode_folllowCamOffsets2WriteAOB)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov rax,pFCamOffsets
mov [rax],rbx

originalcode_folllowCamOffsets2WriteAOB:
readmem(folllowCamOffsets2WriteAOB+f,5)
//movss [rbx+50],xmm0

exit:
jmp returnhere

///
pFCamOffsets:
///

folllowCamOffsets2WriteAOB+f: //"re2.exe"+7CFB4B:
jmp newmem
returnhere:

///*****************************************///
aobscanmodule(folllowCamOffsetZ1WriteAOB,re2.exe,F3 ** ** ** ** 0F ** ** ** 0F ** ** ** F3 ** ** ** ** F3 ** ** ** ** 48 ** ** ** E9)
registersymbol(folllowCamOffsetZ1WriteAOB)

label(bAimKey)
registersymbol(bAimKey)
label(bAimKeyPressed)
registersymbol(bAimKeyPressed)

alloc(newmem2,2048,folllowCamOffsetZ1WriteAOB+12) //"re2.exe"+BB83445)
label(returnhere2)
label(originalcode2_folllowCamOffsetZ1WriteAOB)
registersymbol(originalcode2_folllowCamOffsetZ1WriteAOB)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push rcx
mov rax,pFCamOffsets
cmp [rax],rbx
jne end

mov rcx,dCusFCamZOffset
xorps xmm0,xmm0
comiss xmm0,[rcx+8]
movss xmm0,[rcx+8]
jbe @f
mulss xmm0,[rcx+14]
@@:
divss xmm0,[rcx+10]
movss [rcx+c],xmm0

movss xmm0,[rcx+8]
mov rcx,pReadiedWeapon
mov rcx,[rcx]
test rcx,rcx
jz cfczoc
cmp dword ptr [rcx],0
je @f
cmp dword ptr [rcx],2e
je @f
cmp dword ptr [rcx],2f
je @f
//xorps xmm0,xmm0
mov rcx,dCusFCamZOffset
movss xmm0,[rcx+1c]
@@:
mov rcx,dCusFCamZOffset
movss [rcx+4],xmm0

cfczoc:
mov rcx,dCusFCamZOffset
movss xmm0,[rcx]
comiss xmm0,[rcx+4]
ja deccfczo
jb inccfczo
je assigncfczo

inccfczo:
addss xmm0,[rcx+c]
minss xmm0,[rcx+4]
jmp assigncfczo

deccfczo:
subss xmm0,[rcx+c]
maxss xmm0,[rcx+4]
jmp assigncfczo

assigncfczo:
movss [rcx],xmm0
db F3 0F 58 43
readmem(folllowCamOffsets2WriteAOB+18,1)
//addss xmm0,[rbx+54]

end:
pop rcx

originalcode2_folllowCamOffsetZ1WriteAOB:
readmem(folllowCamOffsetZ1WriteAOB+12,5)
//movss [rdx+14],xmm0

exit2:
jmp returnhere2

///
bAimKey:
dd 02
bAimKeyPressed:
dd 0
///

folllowCamOffsetZ1WriteAOB+12: //"re2.exe"+BB83445:
jmp newmem2
returnhere2:

///*****************************************///
dCusFCamZOffset:
dd 0
dCusFCamZOffset+8:
dd (float)-0.14
dCusFCamZOffset+1c:
dd (float)0

///*****************************************///
aobscanmodule(followCamYOffsetWriteAOB,re2.exe,C6 43 ** 01 66 ** ** ** F3 0F 11 ** ** 48 ** ** ** 48 ** ** ** 00 0F 85 ** ** ** ** 4C)
registersymbol(followCamYOffsetWriteAOB)

label(dCustomZoom)
registersymbol(dCustomZoom)
label(pCha)
registersymbol(pCha)

alloc(newmem3,2048,followCamYOffsetWriteAOB+8) //"re2.exe"+B468D2B)
label(returnhere3)
label(originalcode3_followCamYOffsetWriteAOB)
registersymbol(originalcode3_followCamYOffsetWriteAOB)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
mov rax,pCha
mov [rax],rbx
//mov rax,dCustomZoom
//cmp dword ptr [rax],(float)-1
//je @f
//movss xmm0,[rax]
//@@:
mov rax,pReadiedWeapon
mov rax,[rax]
test rax,rax
jz end3
cmp dword ptr [rax],0
je @f
cmp dword ptr [rax],2e
je @f
cmp dword ptr [rax],2f
je @f
mov rax,dCustomZoom
addss xmm0,[rax+4]
jmp end3

@@:
mov rax,dCustomZoom
addss xmm0,[rax]
end3:

originalcode3_followCamYOffsetWriteAOB:
readmem(followCamYOffsetWriteAOB+8,5)
//movss [rbx+34],xmm0

exit3:
jmp returnhere3

///
dCustomZoom:
dd (float)0.18
dd 0 // (float)-0.4 //aim
pCha:
///

followCamYOffsetWriteAOB+8: //"re2.exe"+B468D2B:
jmp newmem3
returnhere3:





[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
folllowCamOffsets2WriteAOB+f: //"re2.exe"+7CFB4B:
readmem(originalcode_folllowCamOffsets2WriteAOB,5)
//db F3 0F 11 43 50
//Alt: movss [rbx+50],xmm0
unregistersymbol(originalcode_folllowCamOffsets2WriteAOB)

unregistersymbol(pFCamOffsets)

///*****************************************///
dealloc(newmem2)
folllowCamOffsetZ1WriteAOB+12: //"re2.exe"+BB83445:
readmem(originalcode2_folllowCamOffsetZ1WriteAOB,5)
//db F3 0F 11 42 14
//Alt: movss [rdx+14],xmm0
unregistersymbol(originalcode2_folllowCamOffsetZ1WriteAOB)

unregistersymbol(bAimKey)
unregistersymbol(bAimKeyPressed)

///*****************************************///
dealloc(newmem3)
followCamYOffsetWriteAOB+8: //"re2.exe"+B468D2B:
readmem(originalcode3_followCamYOffsetWriteAOB,5)
//db F3 0F 11 43 34
//Alt: movss [rbx+34],xmm0
unregistersymbol(originalcode3_followCamYOffsetWriteAOB)

unregistersymbol(dCustomZoom)
unregistersymbol(pCha)

///*****************************************///
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>13562</ID>
              <Description>"custom z"</Description>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>dCusFCamZOffset+8</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>14331</ID>
                  <Description>"custom aim z"</Description>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>+14</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>13966</ID>
              <Description>"custom y"</Description>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>dCustomZoom</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>14260</ID>
                  <Description>"custom aim y"</Description>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>+4</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>13561</ID>
              <Description>""</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14306</ID>
                  <Description>"DO NOT ACTIVATE"</Description>
                  <LastState/>
                  <Color>FFFFFF</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
dCusFCamZOffset+8:
dd (float)-0.14 //-0.1
dCusFCamZOffset+1c:
dd (float)0
dCustomZoom:
dd (float)0.24 //0.28
dd 0




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
{dealloc(newmem)
"re2.exe"+9B4E3B5:
db 8B 41 20 EB 02
//Alt: mov eax,[rcx+20]
//Alt: jmp re2.exe+9B4E3BC}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>13552</ID>
                  <Description>""</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <VariableType>Array of byte</VariableType>
                  <ByteLength>0</ByteLength>
                  <Address>pFCamOffsets</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>13553</ID>
                      <Description>"+50"</Description>
                      <VariableType>Float</VariableType>
                      <Address>+50</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13554</ID>
                      <Description>"+54"</Description>
                      <VariableType>Float</VariableType>
                      <Address>+54</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13555</ID>
                      <Description>"+58"</Description>
                      <VariableType>Float</VariableType>
                      <Address>+58</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>13556</ID>
                  <Description>"+0"</Description>
                  <VariableType>Float</VariableType>
                  <Address>dCusFCamZOffset</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>13557</ID>
                      <Description>"+4"</Description>
                      <VariableType>Float</VariableType>
                      <Address>+4</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>13558</ID>
                          <Description>"+8"</Description>
                          <VariableType>Float</VariableType>
                          <Address>+4</Address>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>13559</ID>
                              <Description>"+c"</Description>
                              <VariableType>Float</VariableType>
                              <Address>+4</Address>
                              <CheatEntries>
                                <CheatEntry>
                                  <ID>13560</ID>
                                  <Description>"+10"</Description>
                                  <VariableType>Float</VariableType>
                                  <Address>+4</Address>
                                  <CheatEntries>
                                    <CheatEntry>
                                      <ID>13565</ID>
                                      <Description>"+14"</Description>
                                      <VariableType>Float</VariableType>
                                      <Address>+4</Address>
                                      <CheatEntries>
                                        <CheatEntry>
                                          <ID>13566</ID>
                                          <Description>"+18"</Description>
                                          <VariableType>Float</VariableType>
                                          <Address>+4</Address>
                                        </CheatEntry>
                                      </CheatEntries>
                                    </CheatEntry>
                                  </CheatEntries>
                                </CheatEntry>
                              </CheatEntries>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>13967</ID>
                  <Description>""</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>Array of byte</VariableType>
                  <ByteLength>0</ByteLength>
                  <Address>pCha</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>13968</ID>
                      <Description>"+10 zoom"</Description>
                      <VariableType>Float</VariableType>
                      <Address>+10</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13969</ID>
                      <Description>"+14"</Description>
                      <VariableType>Float</VariableType>
                      <Address>+14</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13970</ID>
                      <Description>"+34"</Description>
                      <VariableType>Float</VariableType>
                      <Address>+34</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13971</ID>
                      <Description>"+34 zoom"</Description>
                      <VariableType>Float</VariableType>
                      <Address>+34</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13972</ID>
                      <Description>"+3c"</Description>
                      <VariableType>Float</VariableType>
                      <Address>+3c</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13973</ID>
                      <Description>"+40"</Description>
                      <VariableType>Float</VariableType>
                      <Address>+40</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>14630</ID>
          <Description>"character model mod .12b"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(charInvReadOnLodAOB,re2.exe,74 ** 48 ** ** 88 00 ** ** 48 ** ** 75 ** 8D ** ** 45 ** ** 48 ** ** E8 ** ** ** ** ** C0 48 ** ** ** ** 48 ** ** ** 5F C3 8B ** ** 48 ** ** ** ** 48 ** ** ** 5F C3)
registersymbol(charInvReadOnLodAOB)

label(bStart)
registersymbol(bStart)
label(pCurrentCharacter)
registersymbol(pCurrentCharacter)
label(dCurrentCharacter)
registersymbol(dCurrentCharacter)

alloc(newmem23,2048,charInvReadOnLodAOB+29) //"re2.exe"+C2EB9E3)
label(returnhere23)
label(originalcode23_charInvReadOnLodAOB)
registersymbol(originalcode23_charInvReadOnLodAOB)
label(exit23)

newmem23: //this is allocated memory, you have read,write,execute access
//place your code here
xor rdi,rdi //
mov rbx,bStart
mov [rbx],rdi
mov rbx,pCurrentCharacter
mov [rbx],rdi
mov rbx,dCurrentCharacter
//mov eax,[rax+54] //
mov [rbx],edi

originalcode23_charInvReadOnLodAOB:
readmem(charInvReadOnLodAOB+29,8)
//mov eax,[rax+54]
//mov rbx,[rsp+30]

exit23:
jmp returnhere23

///
bStart:
dq 0
pCurrentCharacter:
dq 0
dCurrentCharacter:
dd ffffffff
///

charInvReadOnLodAOB+29: //"re2.exe"+C2EB9E3:
jmp newmem23
nop
nop
nop
returnhere23:

///*************************************///
aobscanmodule(charIDReadOnModelLoadAOB,re2.exe,** C0 48 ** ** ** ** 48 ** ** ** 5F C3 8B ** ** 48 ** ** ** ** 48 ** ** ** 5F C3 8B)
registersymbol(charIDReadOnModelLoadAOB)

//label(pCurrentCharacter)
//registersymbol(pCurrentCharacter)
//label(dCurrentCharacter)
//registersymbol(dCurrentCharacter)
label(pCharacterInfo)
registersymbol(pCharacterInfo)
label(dCustomCharacter)
registersymbol(dCustomCharacter)

alloc(newmem,2048,charIDReadOnModelLoadAOB+d) //"re2.exe"+E4616C3)
label(returnhere)
label(originalcode_charIDReadOnModelLoadAOB)
registersymbol(originalcode_charIDReadOnModelLoadAOB)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//mov rbx,pCharacterInfo
//mov [rbx],rax
xor rbx,rbx
readmem(charIDReadOnModelLoadAOB+d,1)
db 58
readmem(charIDReadOnModelLoadAOB+f,1)
//mov ebx,[rax+54]
test ebx,ebx
jl @f
cmp ebx,2a
jg @f
mov rdi,dCustomCharacter
mov ebx,[rdi+rbx*4]
test ebx,ebx
cmovge eax,ebx                          //
jl @f                                   //
readmem(charIDReadOnModelLoadAOB+10,5)  //
jmp exit                                //
{jl @f
db 89 58
readmem(charIDReadOnModelLoadAOB+f,1)
//mov [rax+54],ebx}

originalcode_charIDReadOnModelLoadAOB:
readmem(charIDReadOnModelLoadAOB+d,8)
//mov eax,[rax+54]
//mov rbx,[rsp+30]

exit:
jmp returnhere

///
//pCurrentCharacter:
//dq 0
//dCurrentCharacter:
//dd ffffffff
pCharacterInfo:
dq 0
dCustomCharacter:
dd ffffffff      //00 //leon
dd ffffffff      //01 //claire
dd ffffffff      //02 //ada
dd ffffffff      //03 //sherry
dd ffffffff      //04 //hunk
dd ffffffff      //05 //tofu
dd ffffffff      //06 //robert kendo
dd ffffffff      //07 //brian irons
dd ffffffff      //08 //ben bertolucci
dd ffffffff      //09 //annette birkin
dd ffffffff      //0a //chris redfield
dd ffffffff      //0b //
dd ffffffff      //0c //
dd ffffffff      //0d //marvin branagh
dd ffffffff      //0e //
dd ffffffff      //0f //
dd ffffffff      //10 //william broken
dd ffffffff      //11 //
dd ffffffff      //12 //
dd ffffffff      //13 //
dd ffffffff      //14 //katherine warren
dd ffffffff      //15 //
dd ffffffff      //16 //
dd ffffffff      //17 //
dd ffffffff      //18 //
dd ffffffff      //19 //
dd ffffffff      //1a //
dd ffffffff      //1b //rpd pilot
dd ffffffff      //1c //
dd ffffffff      //1d //truck driver
dd ffffffff      //1e //woman that truck driver hits
dd ffffffff      //1f //gas station cop
dd ffffffff      //20 //gas station zombie
dd ffffffff      //21 //emma kendo
dd ffffffff      //22 //rpd elliot
dd ffffffff      //23 //
dd ffffffff      //24 //gas station clerk
dd ffffffff      //25 //west hallway officer
dd ffffffff      //26 //
dd ffffffff      //27 //generic zombie
dd ffffffff      //28 //zombie burnt by annette
dd ffffffff      //29 //lab guy
dd ffffffff      //2a //end game truck driver
///

charIDReadOnModelLoadAOB+d: //"re2.exe"+E4616C3:
jmp newmem
nop
nop
nop
returnhere:

///*************************************///
aobscanmodule(costumeWriteOnLoadOrChangeAOB,re2.exe,74 14 E8 ** ** ** ** 48 ** ** ** 48 ** ** ** 00 0F 85 ** ** ** ** 89 ** ** 48)
registersymbol(costumeWriteOnLoadOrChangeAOB)

label(dCustomCostume)
registersymbol(dCustomCostume)

alloc(newmem2,2048,costumeWriteOnLoadOrChangeAOB+16) //"re2.exe"+E46D663)
label(returnhere2)
label(originalcode2_costumeWriteOnLoadOrChangeAOB)
registersymbol(originalcode2_costumeWriteOnLoadOrChangeAOB)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
test eax,eax
jl end2
cmp eax,2a
//jg @f
jg end2
push rcx
mov rcx,dCustomCostume
mov eax,[rcx+rax*4]
pop rcx
test eax,eax
cmovge ebp,eax
jmp end2
//@@:
//xor ebp,ebp

end2:

originalcode2_costumeWriteOnLoadOrChangeAOB:
readmem(costumeWriteOnLoadOrChangeAOB+16,7)
//mov [rdi+54],ebp
//mov rax,[rbx+50]

exit2:
jmp returnhere2

///
dCustomCostume:
dd ffffffff      //00 //leon
dd ffffffff      //01 //claire
dd ffffffff      //02 //ada
dd ffffffff      //03 //sherry
dd ffffffff      //04 //hunk
dd ffffffff      //05 //tofu
dd ffffffff      //06 //robert kendo
dd ffffffff      //07 //brian irons
dd ffffffff      //08 //ben bertolucci
dd ffffffff      //09 //annette birkin
dd ffffffff      //0a //chris redfield
dd ffffffff      //0b //
dd ffffffff      //0c //
dd ffffffff      //0d //marvin branagh
dd ffffffff      //0e //
dd ffffffff      //0f //
dd ffffffff      //10 //william broken
dd ffffffff      //11 //
dd ffffffff      //12 //
dd ffffffff      //13 //
dd ffffffff      //14 //katherine warren
dd ffffffff      //15 //
dd ffffffff      //16 //
dd ffffffff      //17 //
dd ffffffff      //18 //
dd ffffffff      //19 //
dd ffffffff      //1a //
dd ffffffff      //1b //rpd pilot
dd ffffffff      //1c //
dd ffffffff      //1d //truck driver
dd ffffffff      //1e //woman that truck driver hits
dd ffffffff      //1f //gas station cop
dd ffffffff      //20 //gas station zombie
dd ffffffff      //21 //emma kendo
dd ffffffff      //22 //rpd elliot
dd ffffffff      //23 //
dd ffffffff      //24 //gas station clerk
dd ffffffff      //25 //west hallway officer
dd ffffffff      //26 //
dd ffffffff      //27 //generic zombie
dd ffffffff      //28 //zombie burnt by annette
dd ffffffff      //29 //lab guy
dd ffffffff      //2a //end game truck driver
///

costumeWriteOnLoadOrChangeAOB+16: //"re2.exe"+E46D663:
jmp newmem2
nop
nop
returnhere2:

///*************************************///
aobscanmodule(charIDChk1AOB,re2.exe,48 ** ** ** ** ** ** 48 85 C0 0F 84 ** ** ** ** 48 ** ** ** 48 ** ** 0F 84 ** ** ** ** 39 ** ** 0F 85)
registersymbol(charIDChk1AOB)

alloc(newmem4,2048,charIDChk1AOB+1d) //"re2.exe"+D5DDD90)
label(returnhere4)
label(originalcode4_charIDChk1AOB)
registersymbol(originalcode4_charIDChk1AOB)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
//cmp edi,4
//je @f
//push rbx
//mov rbx,pCurrentCharacter
//cmp [rbx],rcx
//pop rbx
//jne @f

cmp rsi,1
jne @f

push rbx
mov rbx,pCurrentCharacter
mov [rbx],rcx

//push rbx
mov rbx,dCurrentCharacter
//mov ebx,[rbx]
//cmp ebx,edi
mov [rbx],edi
pop rbx
//reassemble(charIDChk1AOB+20)
//jmp exit4

@@:
readmem(charIDChk1AOB+1d,3)
reassemble(charIDChk1AOB+20)
jmp exit4

originalcode4_charIDChk1AOB:
readmem(charIDChk1AOB+1d,9)
//cmp [rcx+54],edi
//jne re2.exe+D5DDCA2

exit4:
jmp returnhere4

///
///

charIDChk1AOB+1d: //"re2.exe"+D5DDD90:
jmp newmem4
nop
nop
nop
nop
returnhere4:

///*************************************///
aobscanmodule(charIDReadOnModelLoadForStanceAOB,re2.exe,75 ** 48 ** ** ** 48 ** ** 8B ** ** 48 85 C0 74 ** 8B ** ** E8)
registersymbol(charIDReadOnModelLoadForStanceAOB)

label(dCustomStance)
registersymbol(dCustomStance)

alloc(newmem24,2048,charIDReadOnModelLoadForStanceAOB+11) //"re2.exe"+C23D28A)
label(returnhere24)
label(originalcode24_charIDReadOnModelLoadForStanceAOB)
registersymbol(originalcode24_charIDReadOnModelLoadForStanceAOB)
label(exit24)

newmem24: //this is allocated memory, you have read,write,execute access
//place your code here
//mov rdx,pCharacterInfo
//mov [rdx],rax

mov rdx,pCurrentCharacter
mov [rdx],rax

xor rdx,rdx
readmem(charIDReadOnModelLoadForStanceAOB+11,3)
//mov edx,[rax+54]

mov rax,bStart
//cmp dword ptr [rax+4],0
//je @f
//cmp dword ptr [rax+4],1
//je @f

mov rax,dCurrentCharacter
mov [rax],edx


//test edx,edx
//jl @f
//cmp edx,2a
//jg @f
//mov rax,dCustomStance
//mov eax,[rax+rdx*4]
//test eax,eax
//cmovge edx,eax                          //
//jl @f                                   //



mov rax,dCustomStance
mov eax,[rax]
test eax,eax
cmovge edx,eax

@@:
mov rax,bStart
inc dword ptr [rax+4]
xor rax,rax

end24:
reassemble(charIDReadOnModelLoadForStanceAOB+14)
//call re2.exe+149C610
jmp exit24

originalcode24_charIDReadOnModelLoadForStanceAOB:
readmem(charIDReadOnModelLoadForStanceAOB+11,8)
//mov edx,[rax+54]
//call re2.exe+149C610

exit24:
jmp returnhere24

///
dCustomStance:
dd ffffffff      //00 //leon
dd ffffffff      //01 //claire
dd ffffffff      //02 //ada
dd ffffffff      //03 //sherry
dd ffffffff      //04 //hunk
dd ffffffff      //05 //tofu
dd ffffffff      //06 //robert kendo
dd ffffffff      //07 //brian irons
dd ffffffff      //08 //ben bertolucci
dd ffffffff      //09 //annette birkin
dd ffffffff      //0a //chris redfield
dd ffffffff      //0b //
dd ffffffff      //0c //
dd ffffffff      //0d //marvin branagh
dd ffffffff      //0e //
dd ffffffff      //0f //
dd ffffffff      //10 //william broken
dd ffffffff      //11 //
dd ffffffff      //12 //
dd ffffffff      //13 //
dd ffffffff      //14 //katherine warren
dd ffffffff      //15 //
dd ffffffff      //16 //
dd ffffffff      //17 //
dd ffffffff      //18 //
dd ffffffff      //19 //
dd ffffffff      //1a //
dd ffffffff      //1b //rpd pilot
dd ffffffff      //1c //
dd ffffffff      //1d //truck driver
dd ffffffff      //1e //woman that truck driver hits
dd ffffffff      //1f //gas station cop
dd ffffffff      //20 //gas station zombie
dd ffffffff      //21 //emma kendo
dd ffffffff      //22 //rpd elliot
dd ffffffff      //23 //
dd ffffffff      //24 //gas station clerk
dd ffffffff      //25 //west hallway officer
dd ffffffff      //26 //
dd ffffffff      //27 //generic zombie
dd ffffffff      //28 //zombie burnt by annette
dd ffffffff      //29 //lab guy
dd ffffffff      //2a //end game truck driver
///
///

charIDReadOnModelLoadForStanceAOB+11: //"re2.exe"+C23D28A:
jmp newmem24
nop
nop
nop
returnhere24:

///*************************************///
luaCall(lua_aobscan("charIDReadForLoadoutOnLoadAOB","re2.exe","48 ** ** ** 48 ** ** ** 48 ** ** 48 ** ** ** 00 74 08 ** C0 48 ** ** ** 5F C3 48 ** ** ** ** 45 ** ** 8B ** ** 48",2))

{aobscanmodule(notCharLoadoutCallerAOB,re2.exe,EB 08 48 ** ** E8 ** ** ** ** 48 ** ** ** 48 ** ** ** ** 48 ** ** ** 00 0F 85)
registersymbol(notCharLoadoutCallerAOB)}
aobscanmodule(notCharLoadoutCaller1AOB,re2.exe,** ** 48 ** ** E8 ** ** ** ** 48 ** ** 50 48 ** ** ** 00 0F 85 ** ** ** ** ** E8 03 00 00 0F 85 ** ** ** ** 8B ** ** 48)
registersymbol(notCharLoadoutCaller1AOB)
aobscanmodule(notCharLoadoutCaller2AOB,re2.exe,48 ** ** E8 ** ** ** ** 48 ** ** 50 8B ** 48 ** ** ** 00 0F 85 ** ** ** ** 49 ** ** 4C)
registersymbol(notCharLoadoutCaller2AOB)
aobscanmodule(charIDChkForWorldObjectLoadoutCallerAOB,re2.exe,** ** ** E8 ** ** ** ** 48 ** ** ** 48 ** ** ** 0F 85 ** ** ** ** 3D E8 03 00 00 7E)
registersymbol(charIDChkForWorldObjectLoadoutCallerAOB)

///
//aobscanmodule(charLoadoutCallerAOB,re2.exe,48 ** ** 50 44 ** ** 48 ** ** ** 0F 85 ** ** ** ** 48 ** ** 10 48 ** ** 0F 84)
//registersymbol(charLoadoutCallerAOB)
///

label(dCustomLoadout)
registersymbol(dCustomLoadout)

alloc(newmem25,2048,charIDReadForLoadoutOnLoadAOB+1f) //"re2.exe"+950EAC1)
label(returnhere25)
label(originalcode25_charIDReadForLoadoutOnLoadAOB)
registersymbol(originalcode25_charIDReadForLoadoutOnLoadAOB)
label(exit25)

newmem25: //this is allocated memory, you have read,write,execute access
//place your code here
readmem(charIDReadForLoadoutOnLoadAOB+1f,6)
//xor r8d,r8d
//mov ebx,[rdx+54]

push rcx

{//t
mov rcx,[rsp+30]
lea rcx,[rcx]
//
}

//mov rcx,"re2.exe"+EF43E4
mov rcx,notCharLoadoutCaller1AOB
lea rcx,[rcx+a]
cmp [rsp+30],rcx
je @f
//mov rcx,"re2.exe"+16B40D2
mov rcx,notCharLoadoutCaller2AOB
lea rcx,[rcx+8]
cmp [rsp+30],rcx
je @f
//mov rcx,
mov rcx,charIDChkForWorldObjectLoadoutCallerAOB
lea rcx,[rcx+8]
cmp [rsp+30],rcx
je @f

jmp start25

@@:
pop rcx
jmp exit25

start25:
mov rcx,bStart

//cmp dword ptr [rcx],1
//je @f
//cmp dword ptr [rcx],2
//je @f
//cmp dword ptr [rcx],3
//je @f
//cmp dword ptr [rcx],4
//je @f
//cmp dword ptr [rcx],5
//je @f

//cmp dword ptr [rcx],6
//je @f
//jmp end25

//cmp dword ptr [rcx],5
//jle end25

//cmp dword ptr [rcx],0
//je end25

//cmp dword ptr [rcx],1
//je @f
//jmp end25

cmp dword ptr [rcx],0
je @f
//cmp dword ptr [rcx],1
//je @f

//cmp dword ptr [rcx],1
//je @f
//jmp end25

//cmp dword ptr [rcx],3
//je end25
//cmp dword ptr [rcx],4
//je end25
//cmp dword ptr [rcx],5
//je end25

//mov rcx,"re2.exe"+986765
//mov rcx,charLoadoutCallerAOB
//cmp [rsp+30],rcx
//jne end25

@@:
mov rcx,pCurrentCharacter
cmp [rcx],rdx
jne @f
mov rcx,dCustomLoadout
mov ecx,[rcx]
test ecx,ecx
cmovge ebx,ecx
mov rcx,bStart
mov r8d,[rcx]
mov r8d,[rcx]
xor r8d,r8d

end25:
mov rcx,bStart
cmp dword ptr [rcx],#1000
jge @f
inc dword ptr [rcx]
@@:
pop rcx
jmp exit25

originalcode25_charIDReadForLoadoutOnLoadAOB:
readmem(charIDReadForLoadoutOnLoadAOB+1f,6)
//xor r8d,r8d
//mov ebx,[rdx+54]

exit25:
jmp returnhere25

///
dCustomLoadout:
dd ffffffff
///

charIDReadForLoadoutOnLoadAOB+1f: //"re2.exe"+950EAC1:
jmp newmem25
nop
returnhere25:

///*************************************///
/*
aobscanmodule(charIDReadForLoadoutOnCutsceneEndAOB,re2.exe,4C ** ** ** 48 ** ** 49 ** ** ** ** ** ** 48 ** ** 0F 84 ** ** ** ** 8B ** ** 45 ** ** 48)
registersymbol(charIDReadForLoadoutOnCutsceneEndAOB)

alloc(newmem26,2048,charIDReadForLoadoutOnCutsceneEndAOB+17) //"re2.exe"+BFD2E06)
label(returnhere26)
label(originalcode26_charIDReadForLoadoutOnCutsceneEndAOB)
registersymbol(originalcode26_charIDReadForLoadoutOnCutsceneEndAOB)
label(exit26)

newmem26: //this is allocated memory, you have read,write,execute access
//place your code here
readmem(charIDReadForLoadoutOnCutsceneEndAOB+17,6)
//mov edi,[rax+54]
//xor r8d,r8d

mov rdx,pCurrentCharacter
cmp [rdx],rax
jne @f
mov rdx,dCustomStance
mov edx,[rdx]
test edx,edx
cmovge edi,edx

end26:
jmp exit26

originalcode26_charIDReadForLoadoutOnCutsceneEndAOB:
readmem(charIDReadForLoadoutOnCutsceneEndAOB+17,6)
//mov edi,[rax+54]
//xor r8d,r8d

exit26:
jmp returnhere26

///

charIDReadForLoadoutOnCutsceneEndAOB+17: //"re2.exe"+BFD2E06:
jmp newmem26
nop
returnhere26:

///*************************************///
aobscanmodule(preStanceReadOnGhostMissionsLoadAOB,re2.exe,48 ** ** ** 48 ** ** ** 00 0F 85 ** ** ** ** 8B 55 54 48 ** ** E8)
registersymbol(preStanceReadOnGhostMissionsLoadAOB)

alloc(newmem27,2048,preStanceReadOnGhostMissionsLoadAOB+f) //"re2.exe"+D4B64FF)
label(returnhere27)
label(originalcode27_preStanceReadOnGhostMissionsLoadAOB)
registersymbol(originalcode27_preStanceReadOnGhostMissionsLoadAOB)
label(exit27)

newmem27: //this is allocated memory, you have read,write,execute access
//place your code here
mov rcx,pCurrentCharacter
cmp [rcx],rbp
readmem(preStanceReadOnGhostMissionsLoadAOB+f,3)
//mov edx,[rbp+54]
jne @f
push rax
mov rcx,dCustomStance
mov eax,[rcx]
test eax,eax
cmovge edx,eax
pop rax

end27:
readmem(preStanceReadOnGhostMissionsLoadAOB+12,3)
//mov rcx,rbx
jmp exit27

originalcode27_preStanceReadOnGhostMissionsLoadAOB:
readmem(preStanceReadOnGhostMissionsLoadAOB+f,6)
//mov edx,[rbp+54]
//mov rcx,rbx

exit27:
jmp returnhere27

///

preStanceReadOnGhostMissionsLoadAOB+f: //"re2.exe"+D4B64FF:
jmp newmem27
nop
returnhere27:

///*************************************///




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem23)
charInvReadOnLodAOB+29: //"re2.exe"+C2EB9E3:
readmem(originalcode23_charInvReadOnLodAOB,8)
//db 8B 40 54 48 8B 5C 24 30
//Alt: mov eax,[rax+54]
//Alt: mov rbx,[rsp+30]
unregistersymbol(originalcode23_charInvReadOnLodAOB)

unregistersymbol(bStart)
unregistersymbol(pCurrentCharacter)
unregistersymbol(dCurrentCharacter)

///*************************************///
dealloc(newmem)
charIDReadOnModelLoadAOB+d: //"re2.exe"+E4616C3:
readmem(originalcode_charIDReadOnModelLoadAOB,8)
//db 8B 40 54 48 8B 5C 24 30
//Alt: mov eax,[rax+54]
//Alt: mov rbx,[rsp+30]
unregistersymbol(originalcode_charIDReadOnModelLoadAOB)

//unregistersymbol(pCurrentCharacter)
//unregistersymbol(dCurrentCharacter)
unregistersymbol(pCharacterInfo)
unregistersymbol(dCustomCharacter)

///*************************************///
dealloc(newmem2)
costumeWriteOnLoadOrChangeAOB+16: //"re2.exe"+E46D663:
readmem(originalcode2_costumeWriteOnLoadOrChangeAOB,7)
//db 89 6F 54 48 8B 43 50
//Alt: mov [rdi+54],ebp
//Alt: mov rax,[rbx+50]
unregistersymbol(originalcode2_costumeWriteOnLoadOrChangeAOB)

unregistersymbol(dCustomCostume)

///*************************************///
dealloc(newmem4)
charIDChk1AOB+1d: //"re2.exe"+D5DDD90:
readmem(originalcode4_charIDChk1AOB,9)
//db 39 79 54 0F 85 09 FF FF FF
//Alt: cmp [rcx+54],edi
//Alt: jne re2.exe+D5DDCA2
unregistersymbol(originalcode4_charIDChk1AOB)

///*************************************///
dealloc(newmem24)
charIDReadOnModelLoadForStanceAOB+11: //"re2.exe"+C23D28A:
readmem(originalcode24_charIDReadOnModelLoadForStanceAOB,8)
//db 8B 50 54 E8 7E F3 25 F5
//Alt: mov edx,[rax+54]
//Alt: call re2.exe+149C610
unregistersymbol(originalcode24_charIDReadOnModelLoadForStanceAOB)

unregistersymbol(dCustomStance)

///*************************************///
dealloc(newmem25)
charIDReadForLoadoutOnLoadAOB+1f: //"re2.exe"+950EAC1:
readmem(originalcode25_charIDReadForLoadoutOnLoadAOB,6)
//db 45 31 C0 8B 5A 54
//Alt: xor r8d,r8d
//Alt: mov ebx,[rdx+54]
unregistersymbol(originalcode25_charIDReadForLoadoutOnLoadAOB)

unregistersymbol(dCustomLoadout)

///*************************************///
/*
dealloc(newmem26)
charIDReadForLoadoutOnCutsceneEndAOB+17: //"re2.exe"+BFD2E06:
readmem(originalcode26_charIDReadForLoadoutOnCutsceneEndAOB,6)
//db 8B 78 54 45 31 C0
//Alt: mov edi,[rax+54]
//Alt: xor r8d,r8d
unregistersymbol(originalcode26_charIDReadForLoadoutOnCutsceneEndAOB)

///*************************************///
dealloc(newmem27)
preStanceReadOnGhostMissionsLoadAOB+f: //"re2.exe"+D4B64FF:
readmem(originalcode27_preStanceReadOnGhostMissionsLoadAOB,6)
//db 8B 55 54 48 89 D9
//Alt: mov edx,[rbp+54]
//Alt: mov rcx,rbx
unregistersymbol(originalcode27_preStanceReadOnGhostMissionsLoadAOB)

///*************************************///
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>17237</ID>
              <Description>"custom stance"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:Leon Scott Kennedy
00000001:Claire Redfield
00000002:Ada Wong
00000003:Sherry Birkin
00000004:HUNK
00000005:Tofu
00000006:Robert Kendo (Gun Shop Owner)
00000007:Brian Irons (Chief of Police)
00000008:Ben Bertolucci (Journalist)
00000009:Annette Birkin
0000000a:Chris Redfield
0000000C:Ghost Soldier
0000000D:Marvin Branagh
00000010:William Broken
00000014:Katherine Warren
0000001B:RPD Pilot
0000001D:Truck Driver
0000001E:Woman that Truck Driver hits
0000001F:Daniel Cortini (Sheriff in Gas Station)
00000020:First zombie in gas station with missing face texture
00000021:Emma Kendo
00000022:RPD Elliot with Entrails buttflap
00000024:Gas Station clerk
00000025:Officer in west hallway with cheek torn open. Broken textures
00000027:Male Generic Zombie A
00000028:G-infected Zombie torched by Annette
00000029:Some guy in a lab coat
0000002A:Unknown character
</DropDownList>
              <ShowAsHex>1</ShowAsHex>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>dCustomStance</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>17238</ID>
                  <Description>"for controlling character"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>17251</ID>
                  <Description>"MUST reload after changes"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>17239</ID>
                  <Description>"don't use when you're starting a New Game,"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>17252</ID>
                  <Description>"after you started a New Game, choose a stance and load the Auto Save"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14634</ID>
              <Description>"custom loadout appearance"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:Leon Scott Kennedy
00000001:Claire Redfield
00000002:Ada Wong
00000003:Sherry Birkin
00000004:HUNK
00000005:Tofu
00000006:Robert Kendo (Gun Shop Owner)
00000007:Brian Irons (Chief of Police)
00000008:Ben Bertolucci (Journalist)
00000009:Annette Birkin
0000000a:Chris Redfield
0000000C:Ghost Soldier
0000000D:Marvin Branagh
00000010:William Broken
00000014:Katherine Warren
0000001B:RPD Pilot
0000001D:Truck Driver
0000001E:Woman that Truck Driver hits
0000001F:Daniel Cortini (Sheriff in Gas Station)
00000020:First zombie in gas station with missing face texture
00000021:Emma Kendo
00000022:RPD Elliot with Entrails buttflap
00000024:Gas Station clerk
00000025:Officer in west hallway with cheek torn open. Broken textures
00000027:Male Generic Zombie A
00000028:G-infected Zombie torched by Annette
00000029:Some guy in a lab coat
0000002A:Unknown character
</DropDownList>
              <ShowAsHex>1</ShowAsHex>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>dCustomLoadout</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>14635</ID>
                  <Description>"for controlling character"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14636</ID>
                  <Description>"MUST reload after changes"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14715</ID>
              <Description>"voice (no aob)"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(dCustomVoice)
registersymbol(dCustomVoice)

alloc(newmem,2048,"re2.exe"+277F10)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[rdx+54]

push rcx

mov rcx,"re2.exe"+2554967
cmp [rsp+2e8],rcx
jne @f

mov rcx,pCurrentCharacter
cmp [rcx],rdx
jne @f
mov rcx,dCustomVoice
mov ecx,[rcx]
test ecx,ecx
cmovge eax,ecx

@@:
pop rcx
ret

originalcode:
mov eax,[rdx+54]
ret
int 3

exit:
jmp returnhere

///
dCustomVoice:
dd ffffffff
///

"re2.exe"+277F10:
jmp newmem
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"re2.exe"+277F10:
db 8B 42 54 C3 CC
//Alt: mov eax,[rdx+54]
//Alt: ret
//Alt: int 3

unregistersymbol(dCustomVoice)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>14716</ID>
                  <Description>"custom voice"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:Leon Scott Kennedy
00000001:Claire Redfield
00000002:Ada Wong
00000003:Sherry Birkin
00000004:HUNK
00000005:Tofu
00000006:Robert Kendo (Gun Shop Owner)
00000007:Brian Irons (Chief of Police)
00000008:Ben Bertolucci (Journalist)
00000009:Annette Birkin
0000000a:Chris Redfield
0000000C:Ghost Soldier
0000000D:Marvin Branagh
00000010:William Broken
00000014:Katherine Warren
0000001B:RPD Pilot
0000001D:Truck Driver
0000001E:Woman that Truck Driver hits
0000001F:Daniel Cortini (Sheriff in Gas Station)
00000020:First zombie in gas station with missing face texture
00000021:Emma Kendo
00000022:RPD Elliot with Entrails buttflap
00000024:Gas Station clerk
00000025:Officer in west hallway with cheek torn open. Broken textures
00000027:Male Generic Zombie A
00000028:G-infected Zombie torched by Annette
00000029:Some guy in a lab coat
0000002A:Unknown character
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>dCustomVoice</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14717</ID>
                      <Description>"for controlling character"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>808080</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>17253</ID>
                      <Description>"won't affact the dialogue voice"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>808080</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14637</ID>
              <Description>"[custom character]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Array of byte</VariableType>
              <ByteLength>0</ByteLength>
              <Address>dCustomCharacter</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>14638</ID>
                  <Description>"Leon"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:Leon Scott Kennedy
00000001:Claire Redfield
00000002:Ada Wong
00000003:Sherry Birkin
00000004:HUNK
00000005:Tofu
00000006:Robert Kendo (Gun Shop Owner)
00000007:Brian Irons (Chief of Police)
00000008:Ben Bertolucci (Journalist)
00000009:Annette Birkin
0000000a:Chris Redfield
0000000C:Ghost Soldier
0000000D:Marvin Branagh
00000010:William Broken
00000014:Katherine Warren
0000001B:RPD Pilot
0000001D:Truck Driver
0000001E:Woman that Truck Driver hits
0000001F:Daniel Cortini (Sheriff in Gas Station)
00000020:First zombie in gas station with missing face texture
00000021:Emma Kendo
00000022:RPD Elliot with Entrails buttflap
00000024:Gas Station clerk
00000025:Officer in west hallway with cheek torn open. Broken textures
00000027:Male Generic Zombie A
00000028:G-infected Zombie torched by Annette
00000029:Some guy in a lab coat
0000002A:Unknown character
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+0*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14639</ID>
                  <Description>"Claire"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:Leon Scott Kennedy
00000001:Claire Redfield
00000002:Ada Wong
00000003:Sherry Birkin
00000004:HUNK
00000005:Tofu
00000006:Robert Kendo (Gun Shop Owner)
00000007:Brian Irons (Chief of Police)
00000008:Ben Bertolucci (Journalist)
00000009:Annette Birkin
0000000a:Chris Redfield
0000000C:Ghost Soldier
0000000D:Marvin Branagh
00000010:William Broken
00000014:Katherine Warren
0000001B:RPD Pilot
0000001D:Truck Driver
0000001E:Woman that Truck Driver hits
0000001F:Daniel Cortini (Sheriff in Gas Station)
00000020:First zombie in gas station with missing face texture
00000021:Emma Kendo
00000022:RPD Elliot with Entrails buttflap
00000024:Gas Station clerk
00000025:Officer in west hallway with cheek torn open. Broken textures
00000027:Male Generic Zombie A
00000028:G-infected Zombie torched by Annette
00000029:Some guy in a lab coat
0000002A:Unknown character
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+1*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14640</ID>
                  <Description>"Ada"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:Leon Scott Kennedy
00000001:Claire Redfield
00000002:Ada Wong
00000003:Sherry Birkin
00000004:HUNK
00000005:Tofu
00000006:Robert Kendo (Gun Shop Owner)
00000007:Brian Irons (Chief of Police)
00000008:Ben Bertolucci (Journalist)
00000009:Annette Birkin
0000000a:Chris Redfield
0000000C:Ghost Soldier
0000000D:Marvin Branagh
00000010:William Broken
00000014:Katherine Warren
0000001B:RPD Pilot
0000001D:Truck Driver
0000001E:Woman that Truck Driver hits
0000001F:Daniel Cortini (Sheriff in Gas Station)
00000020:First zombie in gas station with missing face texture
00000021:Emma Kendo
00000022:RPD Elliot with Entrails buttflap
00000024:Gas Station clerk
00000025:Officer in west hallway with cheek torn open. Broken textures
00000027:Male Generic Zombie A
00000028:G-infected Zombie torched by Annette
00000029:Some guy in a lab coat
0000002A:Unknown character
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+2*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14641</ID>
                  <Description>"Sherry"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:Leon Scott Kennedy
00000001:Claire Redfield
00000002:Ada Wong
00000003:Sherry Birkin
00000004:HUNK
00000005:Tofu
00000006:Robert Kendo (Gun Shop Owner)
00000007:Brian Irons (Chief of Police)
00000008:Ben Bertolucci (Journalist)
00000009:Annette Birkin
0000000a:Chris Redfield
0000000C:Ghost Soldier
0000000D:Marvin Branagh
00000010:William Broken
00000014:Katherine Warren
0000001B:RPD Pilot
0000001D:Truck Driver
0000001E:Woman that Truck Driver hits
0000001F:Daniel Cortini (Sheriff in Gas Station)
00000020:First zombie in gas station with missing face texture
00000021:Emma Kendo
00000022:RPD Elliot with Entrails buttflap
00000024:Gas Station clerk
00000025:Officer in west hallway with cheek torn open. Broken textures
00000027:Male Generic Zombie A
00000028:G-infected Zombie torched by Annette
00000029:Some guy in a lab coat
0000002A:Unknown character
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+3*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14642</ID>
                  <Description>"HUNK"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:Leon Scott Kennedy
00000001:Claire Redfield
00000002:Ada Wong
00000003:Sherry Birkin
00000004:HUNK
00000005:Tofu
00000006:Robert Kendo (Gun Shop Owner)
00000007:Brian Irons (Chief of Police)
00000008:Ben Bertolucci (Journalist)
00000009:Annette Birkin
0000000a:Chris Redfield
0000000C:Ghost Soldier
0000000D:Marvin Branagh
00000010:William Broken
00000014:Katherine Warren
0000001B:RPD Pilot
0000001D:Truck Driver
0000001E:Woman that Truck Driver hits
0000001F:Daniel Cortini (Sheriff in Gas Station)
00000020:First zombie in gas station with missing face texture
00000021:Emma Kendo
00000022:RPD Elliot with Entrails buttflap
00000024:Gas Station clerk
00000025:Officer in west hallway with cheek torn open. Broken textures
00000027:Male Generic Zombie A
00000028:G-infected Zombie torched by Annette
00000029:Some guy in a lab coat
0000002A:Unknown character
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14643</ID>
                  <Description>"Tofu"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:Leon Scott Kennedy
00000001:Claire Redfield
00000002:Ada Wong
00000003:Sherry Birkin
00000004:HUNK
00000005:Tofu
00000006:Robert Kendo (Gun Shop Owner)
00000007:Brian Irons (Chief of Police)
00000008:Ben Bertolucci (Journalist)
00000009:Annette Birkin
0000000a:Chris Redfield
0000000C:Ghost Soldier
0000000D:Marvin Branagh
00000010:William Broken
00000014:Katherine Warren
0000001B:RPD Pilot
0000001D:Truck Driver
0000001E:Woman that Truck Driver hits
0000001F:Daniel Cortini (Sheriff in Gas Station)
00000020:First zombie in gas station with missing face texture
00000021:Emma Kendo
00000022:RPD Elliot with Entrails buttflap
00000024:Gas Station clerk
00000025:Officer in west hallway with cheek torn open. Broken textures
00000027:Male Generic Zombie A
00000028:G-infected Zombie torched by Annette
00000029:Some guy in a lab coat
0000002A:Unknown character
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+5*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14644</ID>
                  <Description>"Robert Kendo"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:Leon Scott Kennedy
00000001:Claire Redfield
00000002:Ada Wong
00000003:Sherry Birkin
00000004:HUNK
00000005:Tofu
00000006:Robert Kendo (Gun Shop Owner)
00000007:Brian Irons (Chief of Police)
00000008:Ben Bertolucci (Journalist)
00000009:Annette Birkin
0000000a:Chris Redfield
0000000C:Ghost Soldier
0000000D:Marvin Branagh
00000010:William Broken
00000014:Katherine Warren
0000001B:RPD Pilot
0000001D:Truck Driver
0000001E:Woman that Truck Driver hits
0000001F:Daniel Cortini (Sheriff in Gas Station)
00000020:First zombie in gas station with missing face texture
00000021:Emma Kendo
00000022:RPD Elliot with Entrails buttflap
00000024:Gas Station clerk
00000025:Officer in west hallway with cheek torn open. Broken textures
00000027:Male Generic Zombie A
00000028:G-infected Zombie torched by Annette
00000029:Some guy in a lab coat
0000002A:Unknown character
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+6*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14645</ID>
                  <Description>"Ghost Soldier"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:Leon Scott Kennedy
00000001:Claire Redfield
00000002:Ada Wong
00000003:Sherry Birkin
00000004:HUNK
00000005:Tofu
00000006:Robert Kendo (Gun Shop Owner)
00000007:Brian Irons (Chief of Police)
00000008:Ben Bertolucci (Journalist)
00000009:Annette Birkin
0000000a:Chris Redfield
0000000C:Ghost Soldier
0000000D:Marvin Branagh
00000010:William Broken
00000014:Katherine Warren
0000001B:RPD Pilot
0000001D:Truck Driver
0000001E:Woman that Truck Driver hits
0000001F:Daniel Cortini (Sheriff in Gas Station)
00000020:First zombie in gas station with missing face texture
00000021:Emma Kendo
00000022:RPD Elliot with Entrails buttflap
00000024:Gas Station clerk
00000025:Officer in west hallway with cheek torn open. Broken textures
00000027:Male Generic Zombie A
00000028:G-infected Zombie torched by Annette
00000029:Some guy in a lab coat
0000002A:Unknown character
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+c*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14646</ID>
                  <Description>"Katherine"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:Leon Scott Kennedy
00000001:Claire Redfield
00000002:Ada Wong
00000003:Sherry Birkin
00000004:HUNK
00000005:Tofu
00000006:Robert Kendo (Gun Shop Owner)
00000007:Brian Irons (Chief of Police)
00000008:Ben Bertolucci (Journalist)
00000009:Annette Birkin
0000000a:Chris Redfield
0000000C:Ghost Soldier
0000000D:Marvin Branagh
00000010:William Broken
00000014:Katherine Warren
0000001B:RPD Pilot
0000001D:Truck Driver
0000001E:Woman that Truck Driver hits
0000001F:Daniel Cortini (Sheriff in Gas Station)
00000020:First zombie in gas station with missing face texture
00000021:Emma Kendo
00000022:RPD Elliot with Entrails buttflap
00000024:Gas Station clerk
00000025:Officer in west hallway with cheek torn open. Broken textures
00000027:Male Generic Zombie A
00000028:G-infected Zombie torched by Annette
00000029:Some guy in a lab coat
0000002A:Unknown character
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+14*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14647</ID>
                  <Description>"Daniel Cortini"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">ffffffff:default
00000000:Leon Scott Kennedy
00000001:Claire Redfield
00000002:Ada Wong
00000003:Sherry Birkin
00000004:HUNK
00000005:Tofu
00000006:Robert Kendo (Gun Shop Owner)
00000007:Brian Irons (Chief of Police)
00000008:Ben Bertolucci (Journalist)
00000009:Annette Birkin
0000000a:Chris Redfield
0000000C:Ghost Soldier
0000000D:Marvin Branagh
00000010:William Broken
00000014:Katherine Warren
0000001B:RPD Pilot
0000001D:Truck Driver
0000001E:Woman that Truck Driver hits
0000001F:Daniel Cortini (Sheriff in Gas Station)
00000020:First zombie in gas station with missing face texture
00000021:Emma Kendo
00000022:RPD Elliot with Entrails buttflap
00000024:Gas Station clerk
00000025:Officer in west hallway with cheek torn open. Broken textures
00000027:Male Generic Zombie A
00000028:G-infected Zombie torched by Annette
00000029:Some guy in a lab coat
0000002A:Unknown character
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+1f*4</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14648</ID>
              <Description>"[costumes]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>000080</Color>
              <VariableType>Array of byte</VariableType>
              <ByteLength>0</ByteLength>
              <Address>dCustomCostume</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>14649</ID>
                  <Description>"Leon"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:Leon Casual
00000001:Leon Police (Clean)
00000002:Leon Police (Dirty)
00000003:Leon Police Injured (Clean)
00000004:Leon Police Injured (Dirty)
00000005:Leon C. Police 1
00000006:Leon C. Police 2
00000007:Leon C. Police 3
00000008:Leon C. Police Injured 1
00000009:Leon C. Police Injured 2
0000000A:Noir
0000000B:Arklay Sheriff
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+0*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14650</ID>
                  <Description>"Claire"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:Claire Jacket (Clean)
00000001:Claire Jacket (Slight Dirty)
00000002:Claire Jacket (Dirty)
00000003:Claire Tank Top (Slight Dirty)
00000004:Claire Tank Top (Dirty)
00000005:Claire C. Jacket 1
00000006:Claire C. Jacket 2
00000007:Claire C. Jacket 3
00000008:Claire C. No Jacket 1
00000009:Claire C. No Jacket 2
0000000A:Noir
0000000B:Military
0000000C:Elza Walker
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+1*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14651</ID>
                  <Description>"Ada"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:Coat
00000001:without Coat
00000002:Injured
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+2*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14652</ID>
                  <Description>"Sherry"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+3*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14653</ID>
                  <Description>"HUNK"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14654</ID>
                  <Description>"Tofu"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+5*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14655</ID>
                  <Description>"Robert Kendo"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+6*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14656</ID>
                  <Description>"Brian Irons"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+7*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14657</ID>
                  <Description>"Ben Bertolucci"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+8*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14658</ID>
                  <Description>"Annette Birkin"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+9*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14659</ID>
                  <Description>"Chris Redfield"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+a*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14660</ID>
                  <Description>"0b"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+b*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14661</ID>
                  <Description>"Ghost Soldier"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+c*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14662</ID>
                  <Description>"Marvin Branagh"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+d*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14663</ID>
                  <Description>"0e"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+e*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14664</ID>
                  <Description>"0f"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+f*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14665</ID>
                  <Description>"William Broken"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+10*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14666</ID>
                  <Description>"11"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+11*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14667</ID>
                  <Description>"12"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+12*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14668</ID>
                  <Description>"13"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+13*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14669</ID>
                  <Description>"Katherine Warren"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+14*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14670</ID>
                  <Description>"15"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+15*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14671</ID>
                  <Description>"16"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+16*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14672</ID>
                  <Description>"17"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+17*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14673</ID>
                  <Description>"18"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+18*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14674</ID>
                  <Description>"19"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+19*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14675</ID>
                  <Description>"1a"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+1a*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14676</ID>
                  <Description>"RPD Pilot"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+1b*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14677</ID>
                  <Description>"1c"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+1c*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14678</ID>
                  <Description>"Truck Driver"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+1d*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14679</ID>
                  <Description>"Woman hit by Truck Driver"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+1e*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14680</ID>
                  <Description>"Sheriff Daniel Cortini (Gas Station Cop)"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+1f*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14681</ID>
                  <Description>"Gas Station Zombie"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+20*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14682</ID>
                  <Description>"Emma Kendo"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+21*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14683</ID>
                  <Description>"RPD Elliot"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+22*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14684</ID>
                  <Description>"23"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+23*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14685</ID>
                  <Description>"Gas Station Clerk"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+24*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14686</ID>
                  <Description>"West Hallway Officer"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+25*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14687</ID>
                  <Description>"26"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+26*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14688</ID>
                  <Description>"Generic Zombie"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+27*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14689</ID>
                  <Description>"Zombie burnt by Annette"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+28*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14690</ID>
                  <Description>"Lab Guy"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+29*4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14691</ID>
                  <Description>"End Game Truck Driver"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">FFFFFFFF:default
00000000:1st costume
00000001:2nd costume
00000002:3rd costume
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+2a*4</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14692</ID>
              <Description>"debug"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>FFFFFF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{aobscanmodule(charIDChk1AOB,re2.exe,48 ** ** ** ** ** ** 48 85 C0 0F 84 ** ** ** ** 48 ** ** ** 48 ** ** 0F 84 ** ** ** ** 39 ** ** 0F 85)
registersymbol(charIDChk1AOB)

alloc(newmem,2048,charIDChk1AOB+1d) //"re2.exe"+D5DDD90)
label(returnhere)
label(originalcode_charIDChk1AOB)
registersymbol(originalcode_charIDChk1AOB)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//cmp edi,4
//je @f
push rbx
mov rbx,pCharacterInfo
mov [rbx],rcx
pop rbx
@@:
readmem(charIDChk1AOB+1d,3)
reassemble(charIDChk1AOB+20)
jmp exit

originalcode_charIDChk1AOB:
readmem(charIDChk1AOB+1d,9)
//cmp [rcx+54],edi
//jne re2.exe+D5DDCA2

exit:
jmp returnhere

///

charIDChk1AOB+1d: //"re2.exe"+D5DDD90:
jmp newmem
nop
nop
nop
nop
returnhere:}


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
{dealloc(newmem)
charIDChk1AOB+1d: //"re2.exe"+D5DDD90:
readmem(originalcode_charIDChk1AOB,9)
//db 39 79 54 0F 85 09 FF FF FF
//Alt: cmp [rcx+54],edi
//Alt: jne re2.exe+D5DDCA2
unregistersymbol(originalcode_charIDChk1AOB)}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>14693</ID>
                  <Description>""</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FFFFFF</Color>
                  <VariableType>Array of byte</VariableType>
                  <ByteLength>0</ByteLength>
                  <Address>pCharacterInfo</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14694</ID>
                      <Description>"char ID"</Description>
                      <DropDownList DisplayValueAsItem="1">0000:Leon Scott Kennedy
0001:Claire Redfield
0002:Ada Wong
0003:Sherry Birkin
0004:HUNK
0005:Tofu
0006:Robert Kendo (Gun Shop Owner)
0007:Brian Irons (Chief of Police)
0008:Ben Bertolucci (Journalist)
0009:Annette Birkin
000a:Chris Redfield
000D:Marvin Branagh
0010:William Broken
0014:Katherine Warren
001B:RPD Pilot from crashed helicopter
001D:Truck Driver
001E:Woman that Truck Driver hits
001F:Cop in Gas Station
0020:First zombie in gas station with missing face texture
0021:Emma Kendo (With weird skeleton. Because of Leon base?)
0022:RPD Elliot with Entrails buttflap
0024:Gas Station clerk
0025:Officer in west hallway with cheek torn open. Broken textures
0027:Male Generic Zombie A
0028:G-infected Zombie torched by Annette
0029:Some guy in a lab coat
002A:Unknown character
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>808080</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>+54</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14695</ID>
                  <Description>""</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FFFFFF</Color>
                  <VariableType>Array of byte</VariableType>
                  <ByteLength>0</ByteLength>
                  <Address>pCurrentCharacter</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14696</ID>
                      <Description>""</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>FFFFFF</Color>
                      <VariableType>Byte</VariableType>
                      <Address>+54</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14697</ID>
                  <Description>""</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>FFFFFF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>dCurrentCharacter</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>14338</ID>
          <Description>"hud mod .1a"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
define(worldobjectinteracthudkeyiddefault,04)

//aobscanmodule(worldObjectInteractHUDAOB,re2.exe,48 ** ** 50 48 ** ** 18 48 ** ** 74 04 ** C0 EB 05 85 C0 0F 94 ** 48 ** ** 0F 85 ** ** ** ** 84 C0 0F 84 ** ** ** ** 48 ** ** ** ** ** ** 45 ** C0)
//registersymbol(worldObjectInteractHUDAOB)
luaCall(lua_aobscan("worldObjectInteractHUDAOB","re2.exe","48 ** ** 50 48 ** ** 18 48 ** ** 74 04 ** C0 EB 05 85 C0 0F 94 ** 48 ** ** 0F 85 ** ** ** ** 84 C0 0F 84 ** ** ** ** 48 ** ** ** ** ** ** 45 ** C0",2))

label(bWorldObjectInteractHUD)
registersymbol(bWorldObjectInteractHUD)
label(bWorldObjectInteractHUDKeyID)
registersymbol(bWorldObjectInteractHUDKeyID)
label(bWorldObjectInteractHUDKeyPressed)
registersymbol(bWorldObjectInteractHUDKeyPressed)

alloc(newmem,2048,worldObjectInteractHUDAOB) //"re2.exe"+C982752)
label(returnhere)
label(originalcode_worldObjectInteractHUDAOB)
registersymbol(originalcode_worldObjectInteractHUDAOB)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//mov al,1

mov rcx,bWorldObjectInteractHUD
mov ecx,[rcx]
cmp ecx,2
cmovne eax,ecx

mov rcx,bWorldObjectInteractHUDKeyPressed
mov ecx,[rcx]
test cl,cl
setz cl
cmovnz eax,ecx

originalcode_worldObjectInteractHUDAOB:
readmem(worldObjectInteractHUDAOB,8)
//mov rcx,[rdi+50]
//mov rdx,[rcx+18]

exit:
jmp returnhere

///
bWorldObjectInteractHUD:
dd 2 //0:show, 1:hide, 2:game
bWorldObjectInteractHUDKeyID:
dd worldobjectinteracthudkeyiddefault
bWorldObjectInteractHUDKeyPressed:
dd 0
///

worldObjectInteractHUDAOB: //"re2.exe"+C982752:
jmp newmem
nop
nop
nop
returnhere:

///***************************************///
aobscanmodule(crossairAOB,re2.exe,41 ** 2B 00 00 00 E8 ** ** ** ** 48 ** ** 50 48 ** ** 18 48 ** ** 74 04 ** C0 EB 05 85 C0 0F 94 ** 48 ** ** 0F 85 ** ** ** ** 84 C0 0F 84 ** ** ** ** 48 ** ** ** ** ** ** 48 ** ** 48 ** ** E8 ** ** ** ** 0F)
registersymbol(crossairAOB)

label(bCrossairHUD)
registersymbol(bCrossairHUD)

alloc(newmem2,2048,crossairAOB+b) //"re2.exe"+C9C0057)
label(returnhere2)
label(originalcode2_crossairAOB)
registersymbol(originalcode2_crossairAOB)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
//xor al,al
mov rcx,bCrossairHUD
mov ecx,[rcx]
cmp ecx,2
cmovne eax,ecx

originalcode2_crossairAOB:
readmem(crossairAOB+b,8)
//mov rcx,[rbx+50]
//mov rdx,[rcx+18]

exit2:
jmp returnhere2

///
bCrossairHUD:
dd 2 //0:show, 1:hide, 2:game
///

crossairAOB+b: //"re2.exe"+C9C0057:
jmp newmem2
nop
nop
nop
returnhere2:

///***************************************///
//aobscanmodule(ammoStatusHUDAOB,re2.exe,48 ** ** 50 48 ** ** 18 48 ** ** 74 04 ** C0 EB 05 85 C0 0F 94 ** 48 ** ** 0F 85 ** ** ** ** 84 C0 0F 84 ** ** ** ** 8B)
//registersymbol(ammoStatusHUDAOB)
luaCall(lua_aobscan("ammoStatusHUDAOB","re2.exe","48 ** ** 50 48 ** ** 18 48 ** ** 74 04 ** C0 EB 05 85 C0 0F 94 ** 48 ** ** 0F 85 ** ** ** ** 84 C0 0F 84 ** ** ** ** 8B",3))

label(bAmmoStatusHUD)
registersymbol(bAmmoStatusHUD)

alloc(newmem6,2048,ammoStatusHUDAOB) //"re2.exe"+A4BB9D3)
label(returnhere6)
label(originalcode6_ammoStatusHUDAOB)
registersymbol(originalcode6_ammoStatusHUDAOB)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov rcx,bAmmoStatusHUD
mov ecx,[rcx]
cmp ecx,2
cmovne eax,ecx

originalcode6_ammoStatusHUDAOB:
readmem(ammoStatusHUDAOB,8)
//mov rcx,[rbx+50]
//mov rcx,[rcx+18]

exit6:
jmp returnhere6

///
bAmmoStatusHUD:
dd 2 //0:show, 1:hide, 2:game
///

ammoStatusHUDAOB: //"re2.exe"+A4BB9D3:
jmp newmem6
nop
nop
nop
returnhere6:

///***************************************///

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
worldObjectInteractHUDAOB: //"re2.exe"+C982752:
readmem(originalcode_worldObjectInteractHUDAOB,8)
//db 48 8B 4F 50 48 8B 51 18
//Alt: mov rcx,[rdi+50]
//Alt: mov rdx,[rcx+18]
unregistersymbol(originalcode_worldObjectInteractHUDAOB)

unregistersymbol(bWorldObjectInteractHUD)
unregistersymbol(bWorldObjectInteractHUDKeyID)
unregistersymbol(bWorldObjectInteractHUDKeyPressed)

///***************************************///
dealloc(newmem2)
crossairAOB+b: //"re2.exe"+C9C0057:
readmem(originalcode2_crossairAOB,8)
//db 48 8B 4B 50 48 8B 51 18
//Alt: mov rcx,[rbx+50]
//Alt: mov rdx,[rcx+18]
unregistersymbol(originalcode2_crossairAOB)

unregistersymbol(bCrossairHUD)

///***************************************///
dealloc(newmem6)
ammoStatusHUDAOB: //"re2.exe"+A4BB9D3:
readmem(originalcode6_ammoStatusHUDAOB,8)
//db 48 8B 4B 50 48 8B 49 18
//Alt: mov rcx,[rbx+50]
//Alt: mov rcx,[rcx+18]
unregistersymbol(originalcode6_ammoStatusHUDAOB)

unregistersymbol(bAmmoStatusHUD)

///***************************************///
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>14339</ID>
              <Description>"interact-able object"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">2:default
1:force hide
0:force show
</DropDownList>
              <Color>008000</Color>
              <VariableType>Byte</VariableType>
              <Address>bWorldObjectInteractHUD</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>14301</ID>
                  <Description>"e.g., typewriter, box, items, etc."</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14299</ID>
                  <Description>"show nearby interact-able key"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <Color>FF0000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bWorldObjectInteractHUDKeyID:
dd 04
bWorldObjectInteractHUDKeyPressed:
dd 0

///*****************************************///
//modified from TheyCallMeTim13's lua keylistener script
//http://fearlessrevolution.com/viewtopic.php?f=4&amp;t=6041&amp;start=60#p62657
{$lua}
local function worldobjectinteracthudkeyLuaThread(thread)
	local addr = getAddressSafe('bWorldObjectInteractHUDKeyPressed')
	while WorldObjectInteractHUDThreadLoop do
        sleep(100)
		if addr then
            if ( isKeyPressed( readInteger('bWorldObjectInteractHUDKeyID') ) ) then
			    writeBytes(addr, 1)
            else
                writeBytes(addr, 0)
            end
		else
			addr = getAddressSafe('bWorldObjectInteractHUDKeyPressed')
		end
	end
	thread.terminate()
--    while WorldObjectInteractHUDThreadLoop do
--          if ( isKeyPressed(VK_CAPITAL) ) then
--              writeBytes("bWorldObjectInteractHUDKeyPressed" ,1)
--          else
--              writeBytes("bWorldObjectInteractHUDKeyPressed" ,0)
--          end
--    end
--    thread.terminate()
end
----------------------------------
if syntaxcheck then return end
WorldObjectInteractHUDThreadLoop = true
createThread(worldobjectinteracthudkeyLuaThread)
{$asm}

///*****************************************///





[DISABLE]
//code from here till the end of the code will be used to disable the cheat
{$lua}
if syntaxcheck then return end
WorldObjectInteractHUDThreadLoop = false
{$asm}

///*****************************************///
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14340</ID>
                      <Description>"key"</Description>
                      <Options moHideChildren="1"/>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">10:SHIFT key
11:CTRL key
12:ALT key
14:CAPS LOCK key
20:Spacebar
04:Middle Mouse Button
05:X1 Mouse Button
06:X2 Moust Button
</DropDownList>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>008000</Color>
                      <VariableType>Byte</VariableType>
                      <Address>bWorldObjectInteractHUDKeyID</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14341</ID>
                          <Description>""</Description>
                          <Color>008000</Color>
                          <VariableType>Byte</VariableType>
                          <Address>+4</Address>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>14342</ID>
                              <Description>""</Description>
                              <Color>008000</Color>
                              <VariableType>Float</VariableType>
                              <Address>+4</Address>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14347</ID>
                      <Description>"if interact-able object hud is hidden,"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>808080</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14348</ID>
                      <Description>"show nearby interact-able by key"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>808080</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14343</ID>
              <Description>"crossair"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">2:default
1:force hide
0:force show
</DropDownList>
              <Color>008000</Color>
              <VariableType>Byte</VariableType>
              <Address>bCrossairHUD</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>14344</ID>
              <Description>"ammo/status"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">2:default
1:force hide
0:force show
</DropDownList>
              <Color>008000</Color>
              <VariableType>Byte</VariableType>
              <Address>bAmmoStatusHUD</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>14345</ID>
                  <Description>"if ammo/status hud is hidden,"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14346</ID>
                  <Description>"both "no reload" &amp; "ignore ammo pouch" would be rendered useless"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>13134</ID>
          <Description>"save count (edited) (cjbok)"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(SaveCountAOB,re2.exe,01 89 41 24 48 8B 43 50) // should be unique

label(dCustSaveCount)
registersymbol(dCustSaveCount)

alloc(SaveCountMem,$1000,"re2.exe"+ADE1B7E)
registersymbol(SaveCountAOB)

label(return)

SaveCountMem:
  mov rax,dCustSaveCount
  mov eax,[rax]
  mov [rcx+24],eax
  mov rax,[rbx+50]
  jmp return

///
dCustSaveCount:
dd #3
///

SaveCountAOB+01:
  jmp SaveCountMem
  nop
  nop
return:


[DISABLE]
SaveCountAOB+01:
//mov [rcx+24],eax
//mov rax,[rbx+50]
  db 89 41 24 48 8B 43 50

unregistersymbol(SaveCountAOB)
dealloc(SaveCountMem)

unregistersymbol(dCustSaveCount)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>13572</ID>
              <Description>"#"</Description>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>dCustSaveCount</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>13022</ID>
          <Description>""</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>13014</ID>
              <Description>"health"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>58</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>13015</ID>
                  <Description>"health max"</Description>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>-4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>13058</ID>
                  <Description>"god (auto reset)"</Description>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>13059</ID>
                  <Description>"god"</Description>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+5</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14049</ID>
              <Description>"inv slots"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>90</Offset>
                <Offset>18</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>4</Key>
                  </Keys>
                  <Value>(health max)</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>13016</ID>
              <Description>"current clip"</Description>
              <Color>8080FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmo</Address>
              <Offsets>
                <Offset>20</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>13017</ID>
                  <Description>"clip max"</Description>
                  <Color>808080</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>dAmmoClipMax</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>13018</ID>
                  <Description>""</Description>
                  <Color>808080</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pAmmo+8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>13498</ID>
              <Description>"x +-"</Description>
              <Options moRecursiveSetValue="1"/>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pPlayerBase</Address>
              <Offsets>
                <Offset>30</Offset>
                <Offset>18</Offset>
                <Offset>10</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>14876</ID>
                  <Description>""</Description>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+80</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>13499</ID>
              <Description>"z +-"</Description>
              <Options moRecursiveSetValue="1"/>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pPlayerBase</Address>
              <Offsets>
                <Offset>34</Offset>
                <Offset>18</Offset>
                <Offset>10</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>14877</ID>
                  <Description>""</Description>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+80</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>13500</ID>
              <Description>"y -+"</Description>
              <Options moRecursiveSetValue="1"/>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pPlayerBase</Address>
              <Offsets>
                <Offset>38</Offset>
                <Offset>18</Offset>
                <Offset>10</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>14878</ID>
                  <Description>""</Description>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+80</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>13748</ID>
              <Description>""</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Array of byte</VariableType>
              <ByteLength>0</ByteLength>
              <Address>pPlayer+8</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>14262</ID>
                  <Description>""</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>000080</Color>
                  <VariableType>Array of byte</VariableType>
                  <ByteLength>0</ByteLength>
                  <Address>+1b0</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14263</ID>
                      <Description>""</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>000080</Color>
                      <VariableType>Array of byte</VariableType>
                      <ByteLength>0</ByteLength>
                      <Address>+20</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14264</ID>
                          <Description>"wet flag"</Description>
                          <Color>0000FF</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>+98</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14265</ID>
                          <Description>"wet amount"</Description>
                          <Color>0000FF</Color>
                          <VariableType>Float</VariableType>
                          <Address>+60</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>http://fearlessrevolution.com/viewtopic.php?f=4&amp;t=8539
///
3 scritps by CJBok:
save count 0
max pouch slots
Game Time
link:
http://fearlessrevolution.com/viewtopic.php?p=76389#p76389
///
weapon's upgrade shared by gir489
link:
http://fearlessrevolution.com/viewtopic.php?f=4&amp;t=8539&amp;start=255#p76443
</Comments>
  <LuaScript>--vng21092's aobscan lua script
function lua_aobscan(name,module,bytes,index)
  index = index - 1
  if(module == "") then
    local resultSet = AOBScan(bytes)
      if(resultSet == nil) then
        unregisterSymbol(name)
        print(name.." not found")
      else
        unregisterSymbol(name)
        registerSymbol(name,resultSet[index])
        resultSet.destroy()
      end
  else
    if(getModuleSize(module) == nil) then
      print("Module "..module.." not found")
    else
      local memScanner = createMemScan()
      local memFoundList = createFoundList(memScanner)
      memScanner.firstScan(
        soExactValue,vtByteArray,rtRounded,bytes,nil,
        getAddress(module),(getAddress(module)+getModuleSize(module)),"",
        fsmNotAligned,"",true,false,false,false)
      memScanner.waitTillDone()
      memFoundList.initialize()
        if(memFoundList.Count == 0) then
          unregisterSymbol(name)
          print(name.." in module "..module.." not found")
        else
          unregisterSymbol(name)
          registerSymbol(name,memFoundList.Address[index])
        end
      memScanner.destroy()
      memFoundList.destroy()
    end
  end
end

---
----------------------------------------------
registerCustomTypeAutoAssembler([[
alloc(ConvertRoutine,1024)
alloc(ConvertBackRoutine,1024)
alloc(TypeName,256)
alloc(ByteSize,4)
alloc(UsesFloat,1)
alloc(CallMethod,1)

TypeName:
db 'RE2_Hrs',0

ByteSize:
dd 4

UsesFloat:
db 0 //Change to 1 if this custom type should be treated as a float

CallMethod:
db 1 //Remove or change to 0 for legacy call mechanism

//The convert routine should hold a routine that converts the data to an integer (in eax)
//function declared as: cdecl int ConvertRoutine(unsigned char *input, PTR_UINT address);
//Note: Keep in mind that this routine can be called by multiple threads at the same time.
ConvertRoutine:
//jmp dllname.functionname
[64-bit]
//or manual:
//parameters: (64-bit)
//rcx=address of input
//rdx=address
mov eax,[rcx] //eax now contains the bytes 'input' pointed to
xor edx,edx
mov ecx,#3600
div ecx

ret
[/64-bit]

[32-bit]
//jmp dllname.functionname
//or manual:
//parameters: (32-bit)
push ebp
mov ebp,esp
//[ebp+8]=address of input
//[ebp+c]=address
//example:
mov eax,[ebp+8] //place the address that contains the bytes into eax
mov eax,[eax] //place the bytes into eax so it's handled as a normal 4 byte value

pop ebp
ret
[/32-bit]

//The convert back routine should hold a routine that converts the given integer back to a row of bytes (e.g when the user wats to write a new value)
//function declared as: cdecl void ConvertBackRoutine(int i, PTR_UINT address, unsigned char *output);
ConvertBackRoutine:
//jmp dllname.functionname
//or manual:
[64-bit]
//parameters: (64-bit)
//ecx=input
//rdx=address
//r8=address of output
//example:
imul ecx,ecx,#3600

mov eax,[r8]
xor edx,edx
mov ebx,#3600
div ebx
add ecx,edx

mov [r8],ecx //place the integer at the 4 bytes pointed to by r8

ret
[/64-bit]

[32-bit]
//parameters: (32-bit)
push ebp
mov ebp,esp
//[ebp+8]=input
//[ebp+c]=address
//[ebp+10]=address of output
//example:
push eax
push ebx
mov eax,[ebp+8] //load the value into eax
mov ebx,[ebp+10] //load the output address into ebx
mov [ebx],eax //write the value into the address
pop ebx
pop eax

pop ebp
ret
[/32-bit]

]])

---
----------------------------------------------
registerCustomTypeAutoAssembler([[
alloc(ConvertRoutine,1024)
alloc(ConvertBackRoutine,1024)
alloc(TypeName,256)
alloc(ByteSize,4)
alloc(UsesFloat,1)
alloc(CallMethod,1)

TypeName:
db 'RE2_Mins',0

ByteSize:
dd 4

UsesFloat:
db 0 //Change to 1 if this custom type should be treated as a float

CallMethod:
db 1 //Remove or change to 0 for legacy call mechanism

//The convert routine should hold a routine that converts the data to an integer (in eax)
//function declared as: cdecl int ConvertRoutine(unsigned char *input, PTR_UINT address);
//Note: Keep in mind that this routine can be called by multiple threads at the same time.
ConvertRoutine:
//jmp dllname.functionname
[64-bit]
//or manual:
//parameters: (64-bit)
//rcx=address of input
//rdx=address
mov eax,[rcx] //eax now contains the bytes 'input' pointed to
xor edx,edx
mov ecx,#3600
div ecx
mov eax,edx
xor edx,edx
mov ecx,#60
div ecx

ret
[/64-bit]

[32-bit]
//jmp dllname.functionname
//or manual:
//parameters: (32-bit)
push ebp
mov ebp,esp
//[ebp+8]=address of input
//[ebp+c]=address
//example:
mov eax,[ebp+8] //place the address that contains the bytes into eax
mov eax,[eax] //place the bytes into eax so it's handled as a normal 4 byte value

pop ebp
ret
[/32-bit]

//The convert back routine should hold a routine that converts the given integer back to a row of bytes (e.g when the user wats to write a new value)
//function declared as: cdecl void ConvertBackRoutine(int i, PTR_UINT address, unsigned char *output);
ConvertBackRoutine:
//jmp dllname.functionname
//or manual:
[64-bit]
//parameters: (64-bit)
//ecx=input
//rdx=address
//r8=address of output
//example:
imul ecx,ecx,#60

mov eax,[r8]
xor edx,edx
mov ebx,#3600
div ebx
imul eax,eax,#3600
add ecx,eax

mov eax,edx
xor edx,edx
mov ebx,#60
div ebx
add ecx,edx

mov [r8],ecx //place the integer at the 4 bytes pointed to by r8

ret
[/64-bit]

[32-bit]
//parameters: (32-bit)
push ebp
mov ebp,esp
//[ebp+8]=input
//[ebp+c]=address
//[ebp+10]=address of output
//example:
push eax
push ebx
mov eax,[ebp+8] //load the value into eax
mov ebx,[ebp+10] //load the output address into ebx
mov [ebx],eax //write the value into the address
pop ebx
pop eax

pop ebp
ret
[/32-bit]

]])

---
----------------------------------------------
registerCustomTypeAutoAssembler([[
alloc(ConvertRoutine,1024)
alloc(ConvertBackRoutine,1024)
alloc(TypeName,256)
alloc(ByteSize,4)
alloc(UsesFloat,1)
alloc(CallMethod,1)

TypeName:
db 'RE2_Secs',0

ByteSize:
dd 4

UsesFloat:
db 0 //Change to 1 if this custom type should be treated as a float

CallMethod:
db 1 //Remove or change to 0 for legacy call mechanism

//The convert routine should hold a routine that converts the data to an integer (in eax)
//function declared as: cdecl int ConvertRoutine(unsigned char *input, PTR_UINT address);
//Note: Keep in mind that this routine can be called by multiple threads at the same time.
ConvertRoutine:
//jmp dllname.functionname
[64-bit]
//or manual:
//parameters: (64-bit)
//rcx=address of input
//rdx=address
mov eax,[rcx] //eax now contains the bytes 'input' pointed to
xor edx,edx
mov ecx,#3600
div ecx
mov eax,edx
xor edx,edx
mov ecx,#60
div ecx
mov eax,edx

ret
[/64-bit]

[32-bit]
//jmp dllname.functionname
//or manual:
//parameters: (32-bit)
push ebp
mov ebp,esp
//[ebp+8]=address of input
//[ebp+c]=address
//example:
mov eax,[ebp+8] //place the address that contains the bytes into eax
mov eax,[eax] //place the bytes into eax so it's handled as a normal 4 byte value

pop ebp
ret
[/32-bit]

//The convert back routine should hold a routine that converts the given integer back to a row of bytes (e.g when the user wats to write a new value)
//function declared as: cdecl void ConvertBackRoutine(int i, PTR_UINT address, unsigned char *output);
ConvertBackRoutine:
//jmp dllname.functionname
//or manual:
[64-bit]
//parameters: (64-bit)
//ecx=input
//rdx=address
//r8=address of output
//example:

mov eax,[r8]
xor edx,edx
mov ebx,#60
div ebx
imul eax,eax,#60
add ecx,eax

mov [r8],ecx //place the integer at the 4 bytes pointed to by r8

ret
[/64-bit]

[32-bit]
//parameters: (32-bit)
push ebp
mov ebp,esp
//[ebp+8]=input
//[ebp+c]=address
//[ebp+10]=address of output
//example:
push eax
push ebx
mov eax,[ebp+8] //load the value into eax
mov ebx,[ebp+10] //load the output address into ebx
mov [ebx],eax //write the value into the address
pop ebx
pop eax

pop ebp
ret
[/32-bit]

]])

---
----------------------------------------------
</LuaScript>
</CheatTable>
