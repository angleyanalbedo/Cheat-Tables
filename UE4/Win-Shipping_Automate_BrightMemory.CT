<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="42">
  <CheatEntries>
    <CheatEntry>
      <ID>25330</ID>
      <Description>"Unreal Engine"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{$lua}
function ue4config()
 local sub=targetIs64Bit() and 0 or 4
 UObject = {}

 --if UE4ver&lt;=2 and targetIs64Bit() then ue4determineversion() end
-----------------------------
----------UE4 struct---------

 if UE4ver&gt;7 then

    UObject.ObjectId= 0xC-sub
    UObject.Class = 0x10-sub
    UObject.FNameIndex = 0x18-(sub*2)
    UObject.Outer = 0x20-(sub*2)

  if UE4ver&gt;=25 then
    UObject.super= 0x40
    UObject.member= 0x50
    UObject.nextmember= 0x20
    UObject.Offset= 0x4C
    UObject.propsize=0x3C
    UObject.bitmask= 0x7A
    UObject.funct= 0xD8
    UObject.Property= 0x78
    UObject.enumoffset = 0x40
    UObject.enummul = 0x10
    UObject.enumname = 0x0
    UObject.enumindex = 0x8

  elseif UE4ver&gt;=22 then
    UObject.super= 0x40
    UObject.member= 0x48
    UObject.funct= 0xC0
  else
    UObject.super= 0x30 -(sub*4)
    UObject.member= 0x38 -(sub*5)
    UObject.funct= 0xB0
  end

  if UE4ver&lt;25 then
    UObject.nextmember=0x28-(sub*3)
    UObject.Offset= 0x44-(sub*4)
    UObject.propsize= 0x34-(sub*3/2)
    UObject.bitmask= 0x72-(sub*8)

    UObject.Property= 0x70-(sub*8)

  end

  if UE4ver&lt;11 then
    UObject.Offset= 0x4C
  end

----------------------------
---------UE3 struct---------
--1.25
--[[
 elseif UE4ver&gt;=1 then

    UObject.ObjectId= 0x4
    UObject.Outer = 0x14
    UObject.FNameIndex = 0x18
    UObject.Class = 0x20
    UObject.Offset= 0x48
    UObject.super= 0x34
    UObject.member= 0x38
    UObject.nextmember=0x28
    UObject.propsize= 0x30
    UObject.bitmask= 0x60
    UObject.Property= 0x58

]]
--0.10246
 else
 --[[
    UObject.ObjectId= 0x20
    UObject.Outer = 0x28
    UObject.FNameIndex = 0x2C
    UObject.Class = 0x34

    UObject.Offset= 0x60

    UObject.super= 0x48
    UObject.member= 0x4C

    UObject.nextmember=0x3C
    UObject.propsize= 0x44
    UObject.bitmask= 0x70]]

 end

---------------------------
end


ue4type={
		['BoolProperty']=vtByte,
		['ByteProperty']=vtByte,
		['FloatProperty']=vtSingle,
        ['StructProperty']=vtDword,
		['IntProperty']=vtDword,
        ['NameProperty']=vtQword,
        ['Int64Property']=vtQword,
		['TextProperty']=vtPointer,
        ['StrProperty']=vtPointer,
        ['ArrayProperty']=vtPointer,
        ['MapProperty']=vtPointer,
        ['ClassProperty']=vtPointer,
		['ObjectProperty']=vtPointer}

function ue4versioncheck()
 --if true then return 0 end
 local fileversion,info =getFileVersion(enumModules()[1].PathToFile)
 if not info then return 0 end
 return tonumber(info.minor..'.'..info.release)
end

function FNameStringAlgo(FName,IndexOnly)
 if not FName then return nil end
 local UEver=UE4ver
 local sub=targetIs64Bit() and 0 or 4
 local size=targetIs64Bit() and 8 or 4
 local number,str,pointer
 if not IndexOnly then
   number=UEver&gt;2 and readInteger(FName+4) or 0
   FName=readInteger(FName)
 else number=FName&gt;&gt;32 FName=FName&amp;0xFFFFFFFF
 end


 if not FName then return nil end

 if isMassEffect then
   local i=(FName&gt;&gt;0x1D)&amp;7
   FName=FName&amp;0x1FFFFFFF
   str=readString(readPointer(getAddress('FNamePool')+i*8)+FName+stringoffset)
   return str
 end

 if FNameList[FName] then
   if number&gt;0 then return FNameList[FName]..'_'..number-1 end
   return FNameList[FName]
 end

 local CFName=FName

 if readPointer(FNameString) then
   if not FNameStringStub then FNameStringStub=createExecuteCodeExStub(0,FNameString,0,0)end
   if not FNameStringRE then FNameStringRE=createRemoteExecutor()end

   if not mem then mem=allocateMemory(0x100)end
   writeQword(mem+0x50+UObject.FNameIndex,FName)
   FNameStringRE.executeStub(FNameStringStub,{mem+0x50,mem})
   str=readPointer(mem)
   if str then str=readString(str,readInteger(mem+0x8)*2,true) end
   --deAlloc(mem)

 elseif UEver&gt;=23 then
  local i=(FName&gt;&gt;0x10)
  FName=(FName&amp;0xFFFF)*2
  pointer=readPointer(FNamePool+i*size)

  local le =  readSmallInteger(pointer+FName)
  if not le then return nil end
  le=le&gt;&gt;6
  if le&gt;200 then return nil end
  local widechar=true and readBytes(pointer+FName,1)==1 or false
  --print(FName)
  le=(widechar and le*2 or le)-1
  if CFName==3 and not stringoffset then
    for k=2,0x20,2 do
      if string.find(readString(pointer+FName+k,le,widechar),'ByteProperty') then stringoffset=k break end
      --print(k)
    end
  end

  if not stringoffset then return end

  str=readString(pointer+FName+stringoffset,le,widechar)
 else
  local i

  if FNamePool2 then FName= FName &lt;0x25A and readInteger(FName*4+FNamePool) or FName
  else
    i=UEver&gt;7 and (FName&gt;&gt;0xE) or 0
    FName= (UEver&gt;7 and (FName&amp;0x3FFF) or FName) *  (8-sub)
  end

  --print(i)
  --print(FName)


  local pointer
  if FNamePool2 then
    pointer=readPointer(FNamePool2)+FName
  else
    pointer=readPointer(FNamePool+i*size)
    if not readPointer(pointer) then return nil end
    pointer=readPointer(pointer+FName)
  end

  --print(string.format('%X',pointer))

  if not readPointer(pointer) then return nil end
  local pointers,pointers2=pointer
  if stringoffset2 then pointer=readPointer(pointer+stringoffset2)end
  pointers2=pointer

  --print(string.format('%X',pointer))

  --local offset=UE4ver&gt;=22 and 0xC-sub or 0x10-(sub*2)
  if CFName==1 and (not stringoffset or not stringoffsetid) then

     for k=0,0x30,4 do
        str=readString(pointer+k,13)
        if string.find(str,'ByteProperty') then stringoffset=k break end
      end

      if not stringoffset then
        for k=0,0x30,4 do
          str=readString(pointer+k,13*2,true)
          if string.find(str,'ByteProperty') then stringoffset=k forcewidechar=true break end
        end
      end

      pointer=pointers

     for j=0, stringoffset-4,4 do
       if readInteger(pointer+j)==2 then stringoffsetid=j end
     end
  --print(string.format('%X',FName))
  --print(string.format('%X',pointer))
  --print(string.format('%X',offset))

  else
  if not stringoffset then return end
  --print(string.format('%X',pointer))

  pointer=pointers

  local widechar=stringoffsetid and (readInteger(pointer+stringoffsetid)&amp;1==1 or false) or false

  pointer=pointers2

  if stringoffset2 and not readPointer(pointer) then pointer=pointers+stringoffset2 end

  widechar= forcewidechar and true or widechar

  str= readString(pointer+stringoffset,200,widechar)

  if not str then str= readString(pointer+stringoffset,100,widechar) end
  if not str then str= readString(pointer+stringoffset,50,widechar) end
  if not str then str= readString(pointer+stringoffset,30,widechar) end
  if not str then
   local le=0
  --print(string.format('%X',FName))
  --print(string.format('%X',pointer))
   while(true)do
    if le&gt;50 then break end
    if readBytes(pointer+stringoffset+le)==0 then break end
    le=le+1
   end
   str= readString(pointer+stringoffset,le)
  end
  --print(stringoffset)


 end end
 if not str then return nil end
 if number&gt;0 then return str..'_'..number-1 end
 --print(str)
 FNameList[CFName]=str
 --print(str)
 return str
end

function GetNameAlgo(object)
 if not object then return nil end
--[[
 if ObjectList[object] then --print(ObjectList[object])
   return ObjectList[object]
 end]]
 local pointer,size,str1,str2=readPointer(object+UObject.Class),targetIs64Bit() and 8 or 4
 if not pointer then return nil end
 --print(string.format('%X',fnameoffset))
 --print(string.format('%X',object+fnameoffset))
 str1=FNameStringAlgo(readInteger(pointer+UObject.FNameIndex),true)

 --print(str1)
 --if readInteger(pointer+fnameoffset+4)~=0 then return nil end

 str2=FNameStringAlgo(readInteger(object+UObject.FNameIndex),true)
 --print(str2)
 if not str2 then str2=FNameStringAlgo(readInteger(object+UObject.FNameIndex-8),true)end
 --if str2=='None' then str2=FNameStringAlgo(readInteger(pointer+UObject.Outer+size),true)end
 if not str1 or str1=='None' or not str2 or str2=='None' then return nil end


 str1=str1..' '..str2
 --print(ObjectList[object])
 ObjectList[object]=str1
 return str1
end

function GetFullNameAlgo(object)
 if not object then return nil end
 --if ObjectList[object] then return ObjectList[object] end
 local pathoffset=UObject.Outer
 local fnameoffset=UObject.FNameIndex
 local str=GetNameAlgo(object)
 if not str then return nil end
 local number=readInteger(object+fnameoffset+4)
 local typ=str:sub(1,string.find(str,' ')-1)
 local isProperty=string.find(typ,'Property')
 if not isProperty then isProperty=string.find(typ,'Function') end
 local pointer=readPointer(object+pathoffset)
 while(true)do
  if not pointer or pointer==0 then break end
  local stri=GetNameAlgo(pointer)
  if not stri then break end
  typ=stri:sub(1,string.find(stri,' ')-1)
  local isPropertyc=string.find(typ,'Property')
  if not isPropertyc then isPropertyc=string.find(typ,'Function') end
  stri=string.sub(str,1,string.find(str,' '))..stri:sub(string.find(stri,' ')+1,stri:len())
  local num=readInteger(pointer+fnameoffset+4)

  if number~=num and num==0 or  not isPropertyc and isProperty then stri=stri..':'
  else stri=stri..'.' end
  number=num
  isProperty=isPropertyc

  str=stri..string.sub(str,string.find(str,' ')+1,str:len())
  pointer=readPointer(pointer+pathoffset)

  if string.find(str,'%./') then
    stri=string.sub(str,1,string.find(str,' '))
    str=stri..str:sub(string.find(str,'%./')+1,str:len())
  break end

 end
 if not str then return nil end
 --ObjectList[object]=str
 return str
end

function GetFullNameSuperAlgo(object)
  local super=UObject.super
  local str1 = GetFullNameSafeAlgo(object)
  if not str1 then return nil end
  local pointer = readPointer(object+super)
  if pointer then
    local str2 = GetFullNameSafeAlgo(pointer)
    if str2 then return str1..' ~ '..str2 end
  end
  return str1
end

function GetFullNameSafesAlgo(object)
 --if ObjectList[object] then return ObjectList[object] end
 local fnameoffset=0x28
 local typeoffset=0x8
 local pathoffset=0x10
 if not object then return nil end
 local pointer=readPointer(object+typeoffset)
 if not pointer then return nil end
 local str1=FNameStringAlgo(pointer)
 local str2=FNameStringAlgo(object+fnameoffset)
 local pointer=readPointer(object+pathoffset)
 if not pointer then return nil end
 local str3=GetFullNameAlgo(pointer)
 if not str1 or str1=='None' or not str2 or str2=='None' or not str3 then return nil end
 --print(str3)
 --if string.find(str3,'%./') then string.sub
 local str=str1..string.sub(str3,string.find(str3,' '),str3:len())..':'..str2
 --ObjectList[object]=str
 return str
end

function GetFullNameSafeAlgo(object)
 --if ObjectList[object] then return ObjectList[object] end
 local str= GetFullNameAlgo(object)
 if str then return str end
 local fnameoffset=0x28
 local typeoffset=0x8
 local pathoffset=0x10
 if not object then return nil end
 local pointer=readPointer(object+typeoffset)
 if not pointer then return nil end
 local str1=FNameStringAlgo(pointer)
 local str2=FNameStringAlgo(object+fnameoffset)
 local pointer=readPointer(object+pathoffset)
 if not pointer then return nil end
 local str3=GetFullNameAlgo(pointer)
 if not str3 then str3=GetFullNameSafesAlgo(pointer)end

 if not str1 or str1=='None' or not str2 or str2=='None' or not str3 then return nil end
 --print(str3)
 --if string.find(str3,'%./') then string.sub
 str=str1..string.sub(str3,string.find(str3,' '),str3:len())..':'..str2
 --ObjectList[object]=str
 return str
end

function FindString(namestr,start,stop,isNoIndex)
  local acclen=0
  for i=start,stop do
    local name=FNameStringAlgo(i+acclen,true)
    if name and name:len()&lt;200 and name:len()&gt;2 and not string.find(name,'%c')  then
      --print(name)
      if name and name:len()&lt;200 and name:len()&gt;2 and not string.find(name,'%c')  then
        if namestr==name then FNameResult=i+acclen return end
        if isNoIndex then acclen=acclen+name:len()end
      end
    end
  end
end


function FindStringFName(namestr,isNoIndex)
  local size
  if FNamePool2 then size=readInteger(FNamePool2+8)

  elseif UE4ver&gt;=23 then size=(#FNameDict&lt;&lt;0x10)-1
  elseif UE4ver&gt;7 then size=(#FNameDict&lt;&lt;0xE)-1
  else size=math.floor(#FNameDict[1]/4) end
  local count=0x200
  size=math.floor((size/count)+0.5)
  ue4parsetablecheck()
  FNameResult=nil
  local result
  local num,start,stop=count,0,0
  for i=0,size do
    start=i*num
    stop=(i+1)*num
    if FNameResult then break end
    createThread(FindString(namestr,start,stop-1,isNoIndex))
  end
  result=FNameResult
  FNameResult=nil
  return result
end

function getregionsize(address)
local allregion=enumMemoryRegions()
 for i=#allregion,1,-1 do
  if allregion[i].BaseAddress&lt;=address then
   local BaseAddress=allregion[i].BaseAddress
   local RegionSize=allregion[i].RegionSize
   local curSize=BaseAddress+RegionSize-address
   return curSize,RegionSize,BaseAddress,i
  end
 end
end

sub=targetIs64Bit() and 0 or 4

function ue4parsetableFNamePool()
  ObjectList={}
  FNameList={}
  if readPointer(FNameString) or string.find(process,'StateOfDecay2')then return end
  local pool=getAddressSafe('FNamePool')
  if pool then
    local pointer,pointers
    if not readPointer(readPointer(pool)) then pointer=pool+0x10
    else
      pointer=pool
      if readPointer(readPointer(readPointer(pointer)))then
        if readPointer(readPointer(readPointer(readPointer(pointer))))then
          pointer=readPointer(pointer)
        end
      end
    end
    if not readPointer(pointer)then pointer=readPointer(pool2+0x10)end
    FNamePool=pointer
    FNameDict={}
    local j=0
    for i=0,500 do
      pointers=readPointer(pointer+i*(8-sub))
      if readPointer(pointers) then
        FNameDict[i+1]=readBytes(pointers,getregionsize(pointers)-1,true)
      else j=j+1 end
      if j&gt;5 then break end
    end
  end
end

function ue4parsetables()
 local size=targetIs64Bit() and 8 or 4
 ue4parsetableFNamePool()
 local pool2=getAddressSafe('GUObjectArray')
 if pool2 then
  if NOGUObjectsize then
    GUObjectsize=0xFFFFFFFF
    if not readPointer(readPointer(GUObjectAddress))then
      GUObjectAddress=allocateMemory(0x100) writePointer(GUObjectAddress,pool2)
    end
    return
  end


  local pointer,pointers=readPointer(pool2)
  GUObjectsize=readInteger(pool2+size)
  if not readPointer(pointer)then GUObjectsize=readInteger(pool2+0x10+size*2+4) GUObjectsize= GUObjectsize==0xFFFFFFFF and readInteger(pool2+0x10+size+4)or GUObjectsize  pointer=readPointer(pool2+0x10)end
  if not readPointer(readPointer(pointer)) then pointer=pointer+0x10 end
  --if GetFullNameSafeAlgo(readPointer(pointer)) then pointer=pool2 end
  if not readPointer(readPointer(readPointer(readPointer(readPointer(pointer))))) then pointer=pool2 end
  if not readPointer(readPointer(pointer)) then pointer=pointer+0x10 end
  GUObjectAddress=pointer
 end
end

function ue4parsetable()
  ue4parsetables()
  local size,val=targetIs64Bit() and 8 or 4,0x50

  local pointerss=readPointer(GUObjectAddress)
  for i=size,0x50,4 do
    if readPointer(pointerss+i) and readPointer(readPointer(readPointer(pointerss+i))) then UObjectMul=i print(string.format('%X',i))break end
  end

  if not UObjectMul and UE4ver&gt;7 then
    local ObjectScanner={'UE4 Object scanner','UE4 Object scanner V2'}
    unregisterSymbol('GUObjectArray')
    print(UE4ver)
    for i=1,#ObjectScanner do
      rec=getAddressList().getMemoryRecordByDescription(ObjectScanner[i])
      if rec then
        rec.Active=true
        while rec.AsyncProcessing do sleep(100) end
      end
      if readPointer('GUObjectArray') then break end
    end
    if not readPointer('GUObjectArray') then error('GUObjectArray not found!')
    else return ue4parsetable() end
  end
  --if not UObject.FNameIndex then
    if not UObject then UObject={} end
    for i=0,3 do
      pointer = readPointer(pointerss+i*UObjectMul)
      if readPointer(pointer) and checkvalue(pointer+size,0x100,'Object',1,true) then
        UObject.FNameIndex=checkvalue(pointer+size,val,'Object',1)-pointer
        UObject.ObjectId=checkvalue(pointer+size,val,i,4)-pointer
        for j=size,val,4 do
          if checkvalue(readPointer(pointer+j),val,'Class',1,true) then UObject.Class=j end
          if checkvalue(readPointer(pointer+j),val,'Core',1) then UObject.Outer=j end
        end
        break
      end
    end
    --[[
    print(string.format('ObjectId=%X\nFNameIndex=%X\nClass=%X\nOuter=%X',
    UObject.ObjectId,UObject.FNameIndex,UObject.Class,UObject.Outer))]]
  --end
  return true
end


function ue4parsetablecheck()
  if not readPointer(GUObjectAddress) or not readPointer(FNamePool) then return ue4parsetable() end
  local pointer
  pointer=readPointer(readPointer(GUObjectAddress))
  if not ObjectTable or not ObjectTable[1] or not FullNameList or (ObjectTable[1].Address ~= pointer) then return ue4parsetable() end
--[[
  local Address,FullName
  for i=1,#ObjectTable do
    if ObjectTable[i] and i&gt;#ObjectTable-0x10 then FullName=ObjectTable[i].Type..' '..ObjectTable[i].FullName Address=ObjectTable[i].Address  break end
  end

  if not GetFullNameSafeAlgo(Address) or FullName~=GetFullNameSafeAlgo(Address) then return ue4parsetable()end
]]
 return false
end

function FindObject(pointer,start,stop,fullname,name)
  local FullName,Name,Data=fullname,name
  for j=start,stop do
    if StaticFindObjectAlgoFoundAddress then break end
    Data=SaveObject(readPointer(pointer+j*UObjectMul))
    if FullName and FullNameList[FullName] then break end
    if Data and Name and string.find(Data.FullName,Name) then StaticFindObjectAlgoFoundAddress=Data.Address break end
  end
end

function StaticFindObjectAlgo(fullname,name)
  fullname=fullname:lower()
  if ue4parsetablecheck() then
    FullNameList={}
    ObjectLists={}
    ObjectTable={}
    HighestObjectID=0
  end
  if not FullNameList then
    FullNameList={}
    ObjectLists={}
    ObjectTable={}
    FullNameList={}
    HighestObjectID=0
  end
  if FullNameList[fullname] then return FullNameList[fullname].Address end

  local count=0x200
  local sizess= UObjectMul*count
  local ObjectId=UObject.ObjectId
  local num,start,stop
  totalobjects=0
  local size,pointer=targetIs64Bit() and 8 or 4

  for i=0,0x1000,size do
    pointer=readPointer(GUObjectAddress+i)
    if not readPointer(pointer) then break end
    size=getregionsize(pointer)
    num,start,stop=count,0,0
    for j=0,math.floor(size/sizess) do
      start=stop
      stop=stop+num
      --print(start..'~'..stop)

      createThread(FindObject(pointer,start,stop-1,fullname,name))
      if FullNameList[fullname] then return FullNameList[fullname].Address end
    end
  end
  local address=StaticFindObjectAlgoFoundAddress
  StaticFindObjectAlgoFoundAddress=nil
  return address
end

function BasicObject(pointer,start,stop)
  Threadlist[#Threadlist+1]=i
  for j=start,stop do
    SaveObject(readPointer(pointer+j*UObjectMul))
  end
  Threadlist[#Threadlist]=nil
end
totalproperties=0
IgnoreList={}
function BasicEnumObject()
  --ue4parsetablecheck()
  IgnoreList={}
  ObjectLists={}
  ObjectTable={}
  Threadlist={}
  FullNameList={}
  HighestObjectID=0
  starttime=os.clock()
  local count=0x200
  local sizess= UObjectMul*count
  local ObjectId=UObject.ObjectId
  local num,start,stop
  totalobjects=0
  totalproperties=0
  local size,pointer=targetIs64Bit() and 8 or 4

  for i=0,0x1000,size do
    pointer=readPointer(GUObjectAddress+i)
    if not readPointer(pointer) then break end
    size=getregionsize(pointer)
    num,start,stop=count,0,0
    for j=0,math.floor(size/sizess) do
      start=stop
      stop=stop+num
      --print(start..'~'..stop)
      createThread(BasicObject(pointer,start,stop-1))
    end
  end
  if UE4ver&gt;=23 and totalproperties&lt;100 and ue4versioncheck()&lt;2 then UE4ver=25 end
  for i=0,10000 do
    if #Threadlist==0 then break end
    sleep(1)
  end
  BasicEnumObjectCooldown=true
  createTimer(180000, function()BasicEnumObjectCooldown=nil end)
  print(string.format('\nA Total of %u objects has been found in %.3f seconds',totalobjects,os.clock()-starttime))
end

function UperNameList(ObjectData,NameTable)
  if not NameTable then NameTable={} end
  if ObjectData.Name=='Object' then return NameTable end
  for i=1,#NameTable do
    if NameTable[i]==ObjectData.Name..'.' then return NameTable end
  end

  NameTable[#NameTable+1]=ObjectData.Name..'.'
  if ObjectData.Uper then
    for i=1,#ObjectData.Uper do
      UperNameList(ObjectData.Uper[i],NameTable)
    end
  end
  return NameTable
end

function registerMemberAlgo()
  UEMember={}
  UEMemberClassFullName={}
  UEMemberStrTable={'{$lua}\nif syntaxcheck then return end\n[ENABLE]\nUEMember = { '}
  local size,Super=HighestObjectID+10
  for i=1,size do
    if ObjectTable[i] and ObjectTable[i].Member then
      Class=UperNameList(ObjectTable[i],{''})
      Super=ObjectTable[i].Super
      for k=0,5 do
        if not Super or Super.Name=='Object' then break end
        Class[#Class+1]=Super.Name..'.'
        Super=Super.Super
      end
      registerMember(ObjectTable[i],ObjectTable[i].FullName)
    end
  end
  Class=nil
  UEMemberStrTable[#UEMemberStrTable]=UEMemberStrTable[#UEMemberStrTable]:sub(1,UEMemberStrTable[#UEMemberStrTable]:len()-1)
  UEMemberStrTable[#UEMemberStrTable+1]='}\n[DISABLE]'
  --[[
  local rec=getAddressList().getMemoryRecordByDescription('UEMemberStr(DoNotTouch!)')
  if not rec then rec=getAddressList().createMemoryRecord()end
  rec.Type=vtAutoAssembler
  rec.Description='UEMemberStr(DoNotTouch!)'
  rec.Script=table.concat(UEMemberStrTable)]]
end


function registerMember(ObjectData,FullName,AddedName,AddedOffset)
  local Name,Offset
  if not AddedName then AddedName='' end
  if not AddedOffset then AddedOffset=0 end
  if ObjectData.Member then
    for j=1,#ObjectData.Member do
      if ObjectData.Member[j].Offset then
        Offset=AddedOffset+ObjectData.Member[j].Offset
        Name=ObjectData.Member[j].Name
        if string.find(ObjectData.Type,'UserDefinedStruct') and string.find(Name,'_') then Name=Name:sub(1,string.find(Name,'_')-1)end
        Name=AddedName..Name
        for i=1,#Class do
          if not UEMember[(Class[i]..Name):lower()] then
            UEMember[(Class[i]..Name):lower()]=Offset
            UEMemberStrTable[#UEMemberStrTable+1]=string.format("['%s']=%u,",(Class[i]..Name):lower(),Offset)
            UEMemberClassFullName[(Class[i]..Name):lower()]=FullName
          end
          if ObjectData.Member[j].Bit and not UEMember[(Class[i]..Name..'.Bit'):lower()] then
            UEMember[(Class[i]..Name..'.Bit'):lower()]=ObjectData.Member[j].Bit
            UEMemberStrTable[#UEMemberStrTable+1]=string.format("['%s']=%u,",(Class[i]..Name..'.Bit'):lower(),ObjectData.Member[j].Bit)
            UEMemberClassFullName[(Class[i]..Name..'.Bit'):lower()]=FullName
          end
        end
        if string.find(ObjectData.Member[j].Type,'StructProperty') and ObjectData.Member[j].Property then registerMember(ObjectData.Member[j].Property[1],FullName,Name..'.',Offset)end
      end
    end
  end
end


function GetName1(pointer)
  local class=readPointer(pointer+UObject.Class)
  if not class then return nil end
  local typ=readQword(class+UObject.FNameIndex)
  if not typ then return nil end
  local name=readQword(pointer+UObject.FNameIndex)
  typ=FNameStringAlgo(typ,true)
  name=FNameStringAlgo(name,true)
  return typ,name,readPointer(pointer+UObject.Outer),class
end

function GetName2(pointer)
  if not readPointer(pointer) then return nil end
  local typ=readQword(readPointer(pointer+8))
  if not typ then return nil end
  local name=readQword(pointer+0x28)
  typ=FNameStringAlgo(typ,true)
  name=FNameStringAlgo(name,true)
  return typ,name,readPointer(pointer+0x10)
end


function SaveObject(pointer)
   if not readPointer(pointer)then return nil end
   if ObjectLists[pointer] then return ObjectLists[pointer] end
   local objid=readInteger(pointer+UObject.ObjectId)
   if not objid then return nil end

   local UEver,typ,name,outer,class,super=UE4ver
   if UEver&lt;25 then typ,name,outer,class=GetName1(pointer)
   else typ,name,outer=GetName2(pointer)
     if not typ or string.find(typ,'None') or not name or string.find(name,'None') then
       typ,name,outer,class=GetName1(pointer)
     end
   end

   if not typ or string.find(typ,'None') or not name or string.find(name,'None') then return nil end

   local ObjectData,size,pointers,pointerss,Data={},targetIs64Bit() and 8 or 4

   ObjectData.Outer= outer~=0 and outer or nil
   ObjectData.Name=name
   ObjectData.Type=typ
   ObjectData.Address=pointer

   if not ObjectData.Name then
     --print(ObjectData.Address)
     ObjectData.Name='InvalidName'
   end
   if ObjectTable[objid+1] and ( not string.find(typ,'Property') or UE4ver&lt;25 ) then return ObjectTable[objid+1] end

   ObjectData.ObjectId=objid

   if not readPointer(objid) and objid&lt;0xFFFFFFF and ( not string.find(typ,'Property') or UE4ver&lt;25 ) then
     ObjectTable[objid+1]=ObjectData
     if HighestObjectID&lt;objid then HighestObjectID=objid end
   end

   ObjectLists[pointer]=ObjectData

   if not VFTableList then VFTableList={} end
   if not VFTableList[readPointer(pointer)]then VFTableList[readPointer(pointer)]=readPointer(pointer) end

   SaveObject(ObjectData.Outer)
   local dataNew,str,dataOld=ObjectData,ObjectData.Name

   for x=0,10 do
     if not dataNew.Outer or not ObjectLists[dataNew.Outer] then break end
     dataOld=dataNew
     dataNew=ObjectLists[dataNew.Outer]
     if (string.find(dataOld.Type,'Property') or string.find(dataOld.Type,'Function'))
     and (not string.find(dataNew.Type,'Property') and not string.find(dataNew.Type,'Function'))
     then
       str=dataNew.Name..':'..str
     else
       str=dataNew.Name..'.'..str
     end
   end
   ObjectData.FullName=str
   FullNameList[str:lower()]=ObjectData
   if class then
     class=SaveObject(class)
     if class then
       if not class.Instance then class.Instance={}end
       class.Instance[#class.Instance+1]=ObjectData
       ObjectData.Class=class
     end
   end

   totalobjects=totalobjects+1

   if UObject.super then
     super=readPointer(pointer+UObject.super)
     ObjectData.Super= super~=0 and super or nil
     if ObjectData.Super then ObjectData.Super=SaveObject(ObjectData.Super)end
     if ObjectData.Super then
       if not ObjectData.Super.Uper then ObjectData.Super.Uper={}end
       ObjectData.Super.Uper[#ObjectData.Super.Uper+1]=ObjectData
     end
   end

   if string.find(typ,'Property')then
     if UEver&gt;=23 then totalproperties=totalproperties+1 end
     if UObject.Offset and UObject.propsize and UObject.Property and UObject.bitmask then
       ObjectData.Offset=readSmallInteger(pointer+UObject.Offset)
       ObjectData.Propsize=readSmallInteger(pointer+UObject.propsize)
       if string.find(typ,'StructProperty') or string.find(typ,'ObjectProperty') then
         ObjectData.Property={SaveObject(readPointer(pointer+UObject.Property))}
         if not ObjectData.Property[1] then ObjectData.Property=nil end
       elseif string.find(typ,'MapProperty') or string.find(typ,'ArrayProperty') then
         ObjectData.Property={SaveObject(readPointer(pointer+UObject.Property)),SaveObject(readPointer(pointer+UObject.Property+size))}
         if not ObjectData.Property[1] then ObjectData.Property=nil end
       elseif string.find(typ,'BoolProperty')then ObjectData.Bit=readBytes(pointer+UObject.bitmask,1) end
     end
   else
     if UObject.member and UObject.nextmember then
       local member=SaveObject(readPointer(pointer+UObject.member))
       if member and (string.find(member.Type,'Function') or string.find(member.Type,'Property')) then
         ObjectData.Membersize=readInteger(pointer+UObject.member+size)
         LastObjectWithMember=ObjectData
         ObjectData.Member={member}
         for i=0,0x1000 do
           member=SaveObject(readPointer(member.Address+UObject.nextmember))
           if not member then break end
           if not string.find(member.Type,'Function') then ObjectData.Member[#ObjectData.Member+1]=member end
         end
       end
     end
   end

   if string.find(typ,'Function')then
     if not UObject.funct then
       print(typ..' '..str..string.format(' = %X',pointer))
       for i=UObject.ObjectId,0x100,4 do
         if inModule(readPointer(pointer+i)) then UObject.funct=i break end
       end
     end
     if UObject.funct then
       if not UE_function then
         UE_function=createSymbolList()
         UE_function.register()
       end
       pointer=readPointer(ObjectData.Address+UObject.funct)
       if readPointer(pointer) then UE_function.addSymbol('UE_function',ObjectData.FullName,pointer,1)end
     end
   end

   if (not UObject.enumoffset or not UObject.enumname or not UObject.enumindex or not UObject.enummul) and string.find(name,'EInterpCurveMode') and not IgnoreList[pointer] then
     IgnoreList[pointer]=true
     print(string.format('EInterpCurveMode = %X\n',pointer))
     for j=UObject.Outer+size,0x100,4 do
       pointers=readPointer(pointer+j)
       if readPointer(pointers) and checkvalue(pointers,0x50,'CIM_Linear',1) then
         UObject.enumoffset=j
         print(string.format('EInterpCurveMode enums = %X\n',pointers))
         if UEver&gt;=7 then
           UObject.enumname=checkvalue(pointers,0x50,'CIM_Linear',1)-pointers
           UObject.enumindex=checkvalue(pointers,0x50,1,2) and checkvalue(pointers,0x50,1,2)-checkvalue(pointers,0x50,'CIM_CurveAuto',1) or 4
           for k=UObject.enumname+8,0x50,4 do
             if readInteger(pointers+k)&gt;4 and FNameStringAlgo(readInteger(pointers+k),true) then UObject.enummul=k break end
           end
         else
           UObject.enumname=0
           UObject.enumindex=4
           UObject.enummul=8
         end
       end
     end
   end

   if string.find(ObjectData.Type,'EnumProperty') then
     if not UObject.enumprop and not IgnoreList[pointer] then
       IgnoreList[pointer]=true
       print(string.format('%016X:%s %s',ObjectData.Address,ObjectData.Type,ObjectData.FullName))
       for i=UObject.Offset+4,UObject.Offset+4+0x100,4 do
         if SaveObject(readPointer(ObjectData.Address+i)) and (SaveObject(readPointer(ObjectData.Address+i)).Type=='Enum' or SaveObject(readPointer(ObjectData.Address+i)).Type=='UserDefinedEnum') then
           UObject.enumprop=i
           break
         end
       end
     end
     if UObject.enumprop then ObjectData.EnumProp = SaveObject(readPointer(ObjectData.Address+UObject.enumprop))end
   end

   return ObjectData
end

function isStructExist(name)
  for i=1,#StructList do
    if StructList[i].Name==name then return StructList[i] end
  end
  return nil
end

function SaveAndRemoveStruct()
  StructList={}
  local count=getStructureCount()
  for i=count-1,0,-1 do
    local struct=getStructure(i)
    StructList[i+1]=struct
    struct:removeFromGlobalStructureList()
  end
end

function ValidateFNamePool(pointer)
  local flag2,pointers=false
  if not pointer or pointer%4~=0 then return false end
  print(string.format('%X',pointer))
  for m=0,0x10,4 do
    if readPointer(pointer) then
      pointers=readPointer(pointer+m)
      if readPointer(pointers)then
        for n=0,2 do
          if not pointers then break end
          if readPointer(pointers) then
            for o=0,0x30,2 do
              if string.find(readString(pointers+o),'None') then
                unregisterSymbol('FNamePool') registerSymbol('FNamePool',pointer,true) flag2=true
                break
              end
            end
          end
          pointers=readPointer(pointers)
        end
      end
      if flag2 then break end
    end
    if flag2 then break end
  end
  return flag2
end


function DeleteStruct(Struct)
  local count=#StructList
  for i=1,count do
    if Struct==StructList[i] then
      Struct:Destroy()
      StructList[i]=nil
    end
    if not StructList[i] and StructList[i+1] then
      StructList[i]=StructList[i+1]
      StructList[i+1]=nil
    end
  end
end

function LoadStruct()
  for i=1,#StructList do
    StructList[i]:addToGlobalStructureList()
  end
end

function getEnumStr(fullname)
  local Address,size,EnumStr,EnumTable,list=StaticFindObjectAlgo(fullname),targetIs64Bit() and 8 or 4,'',{}
  if not Address then return nil end
  list=Address+UObject.enumoffset
  for k=0,readInteger(list+size)-1 do
    pointers=readPointer(list)+k*UObject.enummul
    offset=readBytes(pointers+UObject.enumindex,1)
    if not offset then break end
    if offset==0 then offset=k end
    propname=FNameStringAlgo(pointers+UObject.enumname)
    if string.find(propname,'::') then propname=propname:sub(string.find(propname,'::')+2,propname:len())end
    EnumStr=EnumStr..string.format('%u:%s\n',offset,propname)
    EnumTable[offset]=propname
  end
  return EnumStr,EnumTable
end

function ChildStructStart(structname,elementname)
local struct=isStructExist(structname)
if struct then
for i=0,struct.Count-1 do
if struct.Element[i].Name==elementname then return struct.Element[i].ChildStructStart end end
else return nil end
end

function sigscan(value,modulename,stopaddress)
  local ms = createMemScan()
  modulename,stopaddress=startstop(modulename,stopaddress)
  ms.firstScan(soExactValue,vtByteArray,rtTruncated,value,'',modulename,stopaddress,'',fsmNotAligned,'',true,false,false,false)
  ms.waitTillDone()
  local f = createFoundList(ms)
  f.initialize()
  ms.destroy()
  local result={}
  for i=0,f.Count-1 do result[i+1]=f[i] end
  f.destroy()
  return result
end

function findAddress(Symbol,number,Address,size)
    Address=getAddressSafe(Address)
    if not Address then return end
    if not size then size=0x200 end
	local addr,i,j={},0,1
	while(i&lt;size) do
		local ext, opc, byt, add=splitDisassembledString(disassemble(Address+i))
		if ext~="" then
			if(opc:find(",")~=nil)then opc=opc:sub(opc:find(",")+1,opc:len())
			else opc=opc:sub(opc:find(" ")+1,opc:len())end
            if string.find(opc,'%[') then opc=opc:sub(string.find(opc,'%[')+1,opc:len()-1)end
            if tonumber(opc,16) then addr[j]=opc j=j+1 end
        end
		if opc:find('],') then
            opc=opc:sub(opc:find("%[")+1,opc:find("]")-1)
            if tonumber(opc,16) then addr[j]=opc j=j+1 end
        end
		i=i+getInstructionSize(Address+i)
	end
    if number&lt;=0 then return addr end
	unregisterSymbol(Symbol)
	registerSymbol(Symbol,getAddressSafe(addr[number]),true)
end

function checkvalue(address,size,value,typ,literal)
  local cvalue,tempvalue,value2=readBytes(address,size,true)

  if type(value)==type('') and string.find(value,'~') then
    value2=tonumber(value:sub(string.find(value,'~')+1,value:len()))
    value=tonumber(value:sub(1,string.find(value,'~')-1))
  end

  if not cvalue then return false end
  if typ==1 then
    for i=1,#cvalue,4 do
      datatable={}
      for m=1,4 do
        datatable[m]=cvalue[m+i-1]
      end
      tempvalue=byteTableToDword(datatable)
      --print(FNameStringAlgo(tempvalue,true))
      local str=FNameStringAlgo(tempvalue,true)
      if str and (not literal and string.find(str,value) or str==value) then
        return address+i-1
      end
    end

  elseif typ==2 then
    for i=1,#cvalue,2 do
      datatable={}
      for m=1,2 do
        datatable[m]=cvalue[m+i-1]
      end
      tempvalue=byteTableToWord(datatable)
      if tempvalue==value or (value2 and tempvalue&gt;=value and tempvalue&lt;=value2 ) then return address+i-1 end
    end
  elseif typ==4 then
    for i=1,#cvalue,4 do
      datatable={}
      for m=1,4 do
        datatable[m]=cvalue[m+i-1]
      end
      tempvalue=byteTableToDword(datatable)
      if tempvalue==value or (value2 and tempvalue&gt;=value and tempvalue&lt;=value2 ) then return address+i-1 end
    end
  elseif typ==8 then
    for i=1,#cvalue,4 do
      datatable={}
      for m=1,8 do
        datatable[m]=cvalue[m+i-1]
      end
      tempvalue=byteTableToQword(datatable)
      if tempvalue==value or (value2 and tempvalue&gt;=value and tempvalue&lt;=value2 ) then return address+i-1 end
    end
  end
  return nil
end

function fillstruct4bytes(Struct)
  if not getElementByOffset(Struct,0) then local e=Struct.addElement() e.Offset=0 e.Vartype=vtDword end
  Struct.beginUpdate()
  local count=Struct.Count-1
  local list,k,element1,element2,size,bytesize={},1
  for i=0,count do
    element1=Struct.Element[i]
    element2=Struct.Element[i+1]
    if element2 then
      bytesize=element1.Bytesize
      if bytesize&lt;4 then bytesize=4 end
      size=element2.Offset-element1.Offset-bytesize
      if size&gt;0 then
        if size%4&gt;0 then size=4-size%4+size end
        local start=element1.Offset
        if start%4&gt;0 then start=4-start%4+start
        else start=start+4 end
        size=size/4
        for j=0,size-1 do
          if (start+j*4)&gt;=(element1.Offset+bytesize) then
            list[k]=start+j*4
            k=k+1
          end
        end
      end
    end
  end
  for i,v in ipairs(list) do local e=Struct.addElement() e.Offset=v e.Vartype=vtDword end
  Struct.endUpdate()
end

function UECreateStruct(LocalStruct,ArrayStruct,ObjectData,Struct,Instance,AddedOffset,AddedName)

  if AddedOffset then
    if LocalStruct[ObjectData.FullName] then copyStruct(LocalStruct[ObjectData.FullName],Struct,AddedOffset,AddedName)
    else
      local copy=createStructure(ObjectData.FullName)
      UECreateStruct(LocalStruct,ArrayStruct,ObjectData,copy,Instance)
      LocalStruct[ObjectData.FullName]=copy
      copyStruct(copy,Struct,AddedOffset,AddedName)
    end
    return
  end


  AddedOffset = AddedOffset and AddedOffset or 0
  AddedName = AddedName and AddedName or ''
  local size,MemberData,Propsize,e,f,Name,Offset,Typ=targetIs64Bit() and 8 or 4
  for i=0,10 do
    if ObjectData.Member then
      print(ObjectData.Type..' '..ObjectData.FullName)
      for j=1,#ObjectData.Member do
        MemberData=ObjectData.Member[j]
        if MemberData.Offset then
          Offset=AddedOffset+MemberData.Offset
          Propsize=MemberData.Propsize
          Name=AddedName..MemberData.Name
          Typ=MemberData.Type
          if string.find(ObjectData.Type,'UserDefinedStruct') then Name=Name:sub(1,string.find(Name,'_')-1)end
          if string.find(Typ,'StructProperty') and MemberData.Property and MemberData.Property[1] then
            UECreateStruct(LocalStruct,ArrayStruct,MemberData.Property[1],Struct,Instance,Offset,Name..'.')
            if not getElementByOffset(Struct,Offset) then e=Struct.addElement() e.Offset=Offset e.Name=Name e.Vartype=vtDword end
          else
            e=Struct.addElement()
            e.Offset=Offset
            e.Name=Name
            if string.find(Typ,'BoolProperty') and MemberData.Bit then e.ChildStructStart=MemberData.Bit end

            if Instance and string.find(Name,'RowStruct') then
              local spointer=readPointer(Instance+Offset)
              local sname,sstruct=SaveObject(spointer)
              if sname then
                print(sname.Type..' '..sname.FullName)

                if not ArrayStruct then ArrayStruct={} end
                if ArrayStruct[sname.Name] then sstruct=ArrayStruct[sname.Name]
                else
                  sstruct=createStructure(sname.Name)
                  ArrayStruct[sname.Name]=sstruct
                  UECreateStruct(LocalStruct,ArrayStruct,sname,sstruct,Instance,nil,nil)
                end
                f=Struct.addElement() f.Offset=e.Offset+8-sub f.Name='Table' f.Vartype=vtPointer
                local ssstruct=createStructure('DataTable')
                f.setChildStruct(ssstruct)
                for r=0,10 do
                  f=ssstruct.addElement() f.Offset=r*0x18 f.Name=string.format('[%u] FName',r)  f.Vartype=vtQword
                  f=ssstruct.addElement() f.Offset=r*0x18+8 f.Name=string.format('[%u] Data',r) f.Vartype=vtPointer
                  f.setChildStruct(sstruct)
                end
                fillstruct4bytes(ssstruct)

                f=Struct.addElement() f.Offset=e.Offset+0x10-sub*2 f.Name='Size' f.Vartype=vtDword
              end
            end
            if not ue4type[Typ] then e.Vartype=vtDword
            else e.Vartype=ue4type[Typ] end
            if (string.find(Typ,'ArrayProperty') or string.find(Typ,'MapProperty')) and MemberData.Property then
              f=Struct.addElement() f.Offset=e.Offset+8-sub f.Name=e.Name..'_size' f.Vartype=vtDword
              f=Struct.addElement() f.Offset=e.Offset+0xC-sub f.Name=e.Name..'_sizes' f.Vartype=vtDword
              for m=e.Offset+0xC-sub+4,Propsize-1,4 do
                if not getElementByOffset(Struct,m) then f=Struct.addElement() f.Offset=m f.Name=string.format('%s+%X',e.Name,m) f.Vartype=vtDword end
              end
              local isMap= string.find(Typ,'MapProperty')
              if string.find(MemberData.Property[1].Type,'StructProperty') and MemberData.Property[1].Property and MemberData.Property[1].Property[1] then
                Name= MemberData.Property[1].Property[1].Name..'[]'
              else Name=MemberData.Property[1].Name..'[]'end
              if not ArrayStruct then ArrayStruct={} end
              if ArrayStruct[Name] then e.setChildStruct(ArrayStruct[Name])
              else
                local stru=createStructure(Name)
                ArrayStruct[Name]=stru
                e.setChildStruct(stru)
                local ppsize=0
                if isMap then
                  for k=1,#MemberData.Property do
                    ppsize=(MemberData.Property[k].Propsize&lt;4 and 4 or MemberData.Property[k].Propsize)+ppsize
                  end
                  ppsize=ppsize+0x8
                  --print(ppsize)
                end
                for k=1,#MemberData.Property do
                  local psize=isMap and ppsize or MemberData.Property[k].Propsize
                  --print(MemberData.Address)
                  local Offs=isMap and MemberData.Property[k].Offset and MemberData.Property[k].Offset or 0
                  for p=0,10 do
                    Offset=p*psize+Offs
                    Name=string.format('[%u] ',p)
                    Typ=MemberData.Property[k].Type
                    if string.find(MemberData.Property[k].Type,'StructProperty') then
                      UECreateStruct(LocalStruct,ArrayStruct,MemberData.Property[k].Property[1],stru,Instance,Offset,Name)
                    else
                      f=stru.addElement()
                      f.Offset=Offset
                      f.Name=Name..MemberData.Property[k].Name
                      if not ue4type[Typ] then f.Vartype=vtDword
                      else f.Vartype=ue4type[Typ]end
                    end
                  end
                end
                fillstruct4bytes(stru)
              end
            end
          end
        end
      end
    end
    if not ObjectData.Super then break end
    ObjectData=ObjectData.Super
  end

end


function ue4createstruct(FullNameOrAddress,StructName,isGlobal,isfullname,Structu,AddedOffset,AddedName,Instance,name)
  local ObjectData
  if not FullNameOrAddress then return
  elseif type(FullNameOrAddress)==type('')then
    FullNameOrAddress=StaticFindObjectAlgo(FullNameOrAddress)
    ObjectData=SaveObject(FullNameOrAddress)
  elseif type(FullNameOrAddress)==type({})then ObjectData=FullNameOrAddress
  elseif type(FullNameOrAddress)==type(0)then ObjectData=SaveObject(FullNameOrAddress) end
  --print(ObjectData.FullName)
  if not ObjectData then return end

  StructName= StructName and StructName or ObjectData.Name

  Struct=Structu and Structu or createStructure(StructName and StructName or ObjectData.Name)
  local LocalStruct,ArrayStruct,e={},{}
  Struct.beginUpdate()
  UECreateStruct(LocalStruct,ArrayStruct,ObjectData,Struct,Instance,nil,nil)
  Struct.endUpdate()
  if not getElementByOffset(Struct,0) then e=Struct.addElement() e.Offset=0 e.Name='VTable' e.Vartype=vtPointer end
  if not getElementByOffset(Struct,UObject.ObjectId) then e=Struct.addElement() e.Offset=UObject.ObjectId e.Name='ObjectIndex' e.Vartype=vtDword end
  if not getElementByOffset(Struct,UObject.Class) then e=Struct.addElement() e.Offset=UObject.Class e.Name='Class/Type' e.Vartype=vtPointer end
  if not getElementByOffset(Struct,UObject.FNameIndex) then e=Struct.addElement() e.Offset=UObject.FNameIndex e.Name='FNameIndex' e.Vartype=vtDword end
  if not getElementByOffset(Struct,UObject.Outer) then e=Struct.addElement() e.Offset=UObject.Outer e.Name='Outer' e.Vartype=vtPointer end
  if string.find(StructName,'Function') and UObject.funct then e=Struct.addElement() e.Offset=UObject.funct e.Name='Func' e.Vartype=vtPointer end
--[[
  if not Instance then fillstruct4bytes(Struct)
  else
    if not getElementByOffset(Struct,0) then Struct.autoGuess(Instance, 0, Struct.Element[0].Offset) end
    local count=Struct.Count-1
    local list,k,element1,element2,size,bytesize={},1
    for i=0,count do
      element1=Struct.Element[i]
      element2=Struct.Element[i+1]
      if element2 then
        bytesize=element1.Bytesize
        if bytesize&lt;4 then bytesize=4 end
        size=element2.Offset-element1.Offset-bytesize
        print(element1.Offset+bytesize)
        print(size)
        if size&gt;0 then
          Struct.autoGuess(Instance,element1.Offset+bytesize,size)
        end
      end
    end
  end]]
  fillstruct4bytes(Struct)
  if isGlobal then StructList[#StructList+1]=Struct end
  LoadStruct()
  return Struct

end

function AutoConfig()
  local flag1,flag2,size,val=false,false,targetIs64Bit() and 8 or 4,UE4ver&gt;7 and 1 or 4
  local pointer,pointers,pointerss,Data=StaticFindObjectAlgo('/Script/Engine.GameEngine','Engine.GameEngine')
  Data=SaveObject(pointer)
  print(Data.Type..' '..Data.FullName..string.format(' = %X',pointer))
  for i=UObject.Outer+size,0x100,4 do
    pointers=readPointer(pointer+i)
    Data=SaveObject(pointers)
    if Data and string.find(Data.FullName,'Engine.Engine') and not flag1 then UObject.super=i flag1=true end
    if Data and (string.find(Data.Type,'Property') or string.find(Data.Type,'Function')) and not string.find(Data.FullName,'Core') then
      print(Data.Type..' '..Data.FullName..string.format(' = %X',pointer))
      for j=size,0x100,4 do
        pointerss=readPointer(pointers+j)
        for k=0,val do
          Data=SaveObject(pointerss)
          if not Data or (not string.find(Data.Type,'Property') and not string.find(Data.Type,'Function')) or string.find(Data.FullName,'Core') then break end
          print(Data.Type..' '..Data.FullName..string.format(' = %X',pointer))
          if k==val then UObject.nextmember=j flag2=true end
          pointerss=readPointer(pointerss+j)
        end
        if flag2 then break end
      end
      if flag2 then UObject.member=i end
      if flag1 and flag2 then break end
    end
  end
  local varsize={[0]=1,[2]=4,[3]=8,[4]=4,[12]=size}
  pointerss=readPointer(UObject.nextmember+pointers)
  for i=0,100 do
    Data=SaveObject(pointerss)
    if Data then
      print(string.format('%X:%s %s',pointerss,Data.Type,Data.FullName))
      if string.find(Data.Type,'ObjectProperty') then break end
    end
    pointerss=readPointer(UObject.nextmember+pointerss)
  end
  UObject.propsize=checkvalue(pointerss+UObject.Outer,0x100,varsize[ue4type[Data.Type]],2)-pointerss
  for i=UObject.nextmember+size,0x100,size do
    Data=SaveObject(readPointer(pointerss+i))
    if Data and string.find(Data.Type,'Class') and not string.find(Data.FullName,'Core')  then UObject.Property=i break end
  end
  UObject.bitmask=UObject.Property+2
  pointerss=readPointer(UObject.nextmember+pointers)
  for i=0,100 do
    Data=SaveObject(pointerss)
    if Data then
      print(string.format('%X:%s %s',pointerss,Data.Type,Data.FullName))
      if string.find(Data.Type,'ObjectProperty') or string.find(Data.Type,'FloatProperty') then break end
    end
    pointerss=readPointer(UObject.nextmember+pointerss)
  end
  pointers=readPointer(UObject.nextmember+pointerss)
  for i=UObject.nextmember+size,0x100,2 do
    print(string.format('%X:',i)..readSmallInteger(pointerss+i)+varsize[ue4type[Data.Type]]..'=='..readSmallInteger(pointers+i))
    if readSmallInteger(pointerss+i)+varsize[ue4type[Data.Type]]&gt;0x10 and readSmallInteger(pointerss+i)+varsize[ue4type[Data.Type]]==readSmallInteger(pointers+i)then UObject.Offset=i print(string.format('%X',UObject.Offset)) break end
  end
  print(string.format([[
UObject.ObjectId = 0x%X
UObject.Class = 0x%X
UObject.FNameIndex = 0x%X
UObject.Outer = 0x%X
UObject.super = 0x%X
UObject.member = 0x%X
UObject.nextmember = 0x%X
UObject.propsize = 0x%X
UObject.Offset = 0x%X
UObject.Property = 0x%X
UObject.bitmask = 0x%X
]],UObject.ObjectId,UObject.Class,UObject.FNameIndex,
UObject.Outer,UObject.super,UObject.member,UObject.nextmember,
UObject.propsize,UObject.Offset,UObject.Property,
UObject.bitmask))

end

function getElementByOffset(struct,offset)
  for i=0,struct.Count-1 do
    if struct.Element[i].Offset==offset then return i end
  end
  return nil
end

function copyStruct(original,copy,AddedOffset,AddedName)
  if not copy then copy=createStructure(original.Name..'_copy')end
  if not AddedOffset then AddedOffset=0 end
  if not AddedName then AddedName='' end
  copy.beginUpdate()
  for i=0,original.Count-1 do
    local e=copy.addElement()
    e.Offset=original.Element[i].Offset+AddedOffset
    if original.Element[i].Name=='' then e.Name=original.Element[i].Name
    else e.Name=AddedName..original.Element[i].Name end
    e.Vartype=original.Element[i].Vartype
    e.ChildStruct=original.Element[i].ChildStruct
    e.ChildStructStart=original.Element[i].ChildStructStart
    e.Bytesize=original.Element[i].Bytesize
  end
  copy.endUpdate()
  return copy
end

function ue_structureDissectOverrideCallback(Struct, Instance)
  local name,fullname,class
  address,name,fullname,class=ue_findRealStartOfObject(Instance)

  if class then
   SaveAndRemoveStruct()
    ue4createstruct(class,nil,nil,nil,Struct,nil,nil,Instance,name)
    if Struct.Count&gt;1 then return true
    else return false end
  end

  return nil
end

function ue_structureNameLookupCallback(address)
  local name,fullname
  address,name,fullname=ue_findRealStartOfObject(address)
  if name then return name,address end
  return nil
end

function ue_SymbolLookupCallback(symbol)
  if UEMember[symbol:lower()] then return UEMember[symbol:lower()] end
  local str='Function '
  if string.find(symbol,str) then
    symbol=symbol:sub(string.find(symbol,str)+str:len(),symbol:len())
    local pointer=StaticFindObjectAlgo(symbol)
    if pointer then return readPointer(pointer+UObject.funct)end
  end
  return nil
end

function ue_findRealStartOfObject(address)
  local ObjectData,Membersize
  ObjectData=SaveObject(address)
  if ObjectData then return ObjectData.Address,ObjectData.Class.Name,ObjectData.Class.FullName,ObjectData.Class or nil end

  for i=1,HighestObjectID+10 do
    if ObjectTable[i] and ObjectTable[i].Class then
      Membersize = (ObjectTable[i].Class.Membersize and ObjectTable[i].Class.Membersize&gt;0x100 and ObjectTable[i].Class.Membersize&lt;0x5000) and ObjectTable[i].Class.Membersize or 0x500
      if address&gt;=ObjectTable[i].Address and address&lt;=ObjectTable[i].Address+Membersize then
        ObjectData=ObjectTable[i]
        return ObjectData.Address,ObjectData.Class.Name,ObjectData.Class.FullName,ObjectData.Class
      end
    end
  end
  return address
end

function findOpcodes(address,opcode,size)
  if not size then size=0x50 end
  address=getAddressSafe(address)
  if not address then return nil end
  local addr={}
  local i=0
  local j=1
  while(i&lt;size) do
    local ext, opc, byt, add=splitDisassembledString(disassemble(address+i))
    if string.find(opc,opcode) then
      addr[j]=address+i
      j=j+1
    end
    i=i+getInstructionSize(address+i)
  end
  return addr
end

function findOpcode(address,opcode,size)
  if not size then size=0x50 end
  address=getAddressSafe(address)
  if not address then return nil end
  local i=0
  while(i&lt;size) do
    local ext, opc, byt, add=splitDisassembledString(disassemble(address+i))
    if string.find(opc,opcode) then
      return address+i
    end
    i=i+getInstructionSize(address+i)
  end
  return nil
end

function findLastCall(address,size)
  if not size then size=0x1000 end
  local result=findOpcode(address,'ret',size)
  if not result then print(address..' cant find ret?') return nil end
  result=result-getAddress(address)
  result=findOpcodes(address,'call ',result)
  local ext, opc, byt, add=splitDisassembledString(disassemble(result[#result]))
  opc=opc:gsub('call ','')
  return opc
end

function followjmp(address,size)
  if not size then size=0x1000 end
  local result=findOpcode(address,'jmp ',size)
  if not result then print(address..' cant find jmp?') return nil end
  local ext, opc, byt, add=splitDisassembledString(disassemble(result))
  opc=opc:gsub('jmp ','')
  return opc
end

function followcall(address,size)
  if not size then size=0x1000 end
  local result=findOpcode(address,'call ',size)
  if not result then print(address..' cant find call?') return nil end
  local ext, opc, byt, add=splitDisassembledString(disassemble(result))
  opc=opc:gsub('call ','')
  return opc
end

function startstop(modulename,stopaddress)
  if(modulename==0 or modulename==nil or modulename=='')then modulename=0 stopaddress=0x00007fffffffffff end
  if type(modulename)==type(0) then modulename=string.format('%X',modulename)
  elseif type(modulename)==type('') then modulename=[["]]..modulename..[["]]  end
  if(stopaddress==0 or stopaddress==nil or stopaddress=='')then
    stopaddress=getNameFromAddress(getAddress(modulename),true,false)
    if(stopaddress:find("+")~=nil)then stopaddress=stopaddress:sub(0,stopaddress:find("+")-1)end
	if(getModuleSize(stopaddress)==nil)then error('Module '..modulename..' not found') end
    modulename=getAddress([["]]..stopaddress..[["]])
	stopaddress=modulename+getModuleSize(stopaddress)
    modulename=string.format('%X',modulename)
  end
  if type(stopaddress)==type(0) then stopaddress=string.format('%X',stopaddress)end
  return modulename,stopaddress
end

function groupscan(value,modulename,stopaddress)
  local ms = createMemScan()
  modulename,stopaddress=startstop(modulename,stopaddress)
  ms.firstScan(soExactValue,vtGrouped,rtTruncated,value,'',modulename,stopaddress,'',fsmNotAligned,'',false,false,false,false)
  ms.waitTillDone()
  local f = createFoundList(ms)
  f.initialize()
  ms.destroy()
  local result={}
  for i=0,f.Count-1 do result[i+1]=f[i] end
  f.destroy()
  return result
end

function pointerscan(value,modulename,stopaddress,value2)
  local ms = createMemScan()
  modulename,stopaddress=startstop(modulename,stopaddress)
  print(modulename..'~'..stopaddress)
  if value2 then ms.firstScan(soValueBetween,targetIs64Bit() and vtQword or vtDword,rtTruncated,value,value2,modulename,stopaddress,'',fsmNotAligned,'',false,false,false,false)
  else ms.firstScan(soExactValue,targetIs64Bit() and vtQword or vtDword,rtTruncated,value,value2,modulename,stopaddress,'',fsmNotAligned,'',false,false,false,false)end
  ms.waitTillDone()
  local f = createFoundList(ms)
  f.initialize()
  ms.destroy()
  local result={}
  for i=0,f.Count-1 do result[i+1]=f[i] end
  f.destroy()
  return result
end

function stringscan(value,modulename,stopaddress,isUnicode)
  local ms = createMemScan()
  modulename,stopaddress=startstop(modulename,stopaddress)
  ms.firstScan(soExactValue,vtString,rtTruncated,value,'',modulename,stopaddress,'',fsmNotAligned,'',false,false,isUnicode,true)
  ms.waitTillDone()
  local f = createFoundList(ms)
  f.initialize()
  ms.destroy()
  local result={}
  for i=0,f.Count-1 do result[i+1]=f[i] end
  f.destroy()
  return result
end

function StructAddToListSymbol(StructName,StartOffset,StopOffset,BaseAddress,OffsetOnly)
  if not StartOffset then StartOffset=0 end
  if not StopOffset then StopOffset=0xFFFFFF end
  local structCount=getStructureCount()
  local struct
  for i=0,structCount-1 do
    local stru=getStructure(i)
    if stru.Name==StructName then struct=stru break end
  end
  if struct then
    for i=0,struct.Count-1 do
      local e=struct.Element[i]
      if e.Offset&gt;=StartOffset and e.Offset&lt;=StopOffset then
        local rec=getAddressList().createMemoryRecord()
        rec.setDescription(e.Name)
        if OffsetOnly then
          if BaseAddress then rec.setAddress(BaseAddress) rec.OffsetCount=1 rec.Offset[0]=e.Offset
          else rec.setAddress(string.format('+%X',e.Offset))end
        else
          if BaseAddress then rec.setAddress(BaseAddress) rec.OffsetCount=1 rec.OffsetText[0]=StructName..'.'..e.Name
          else rec.setAddress(string.format('+%s.%s',StructName,e.Name))end
        end
        rec.Type=e.Vartype
      end
    end
  end
end

function getInsForJump(address,registername,destination,allocsize,SharedMemoryName)
  address = getAddressSafe(address)
  if not address then error('getInsForJump address nil') return end
  if not allocsize then allocsize=4096 end
  destination=getAddressSafe(destination)
  if not destination then
	if not SharedMemoryName then destination = allocateMemory(allocsize,address)
	else destination = allocateSharedMemory(SharedMemoryName,allocsize) end
  end
  local size = (address+5-destination&gt;0x7FFFFFFF) and 14 or 5
  if registername then
	unregisterSymbol(registername)
	registerSymbol(registername,destination,true)
  end
  local opcodes = {}
  local i = 0
  while(i&lt;size) do
    local ext, opc=splitDisassembledString(disassemble(address+i))
    opcodes[#opcodes+1] = opc
    i=i+getInstructionSize(address+i)
  end
  local copy = table.concat(opcodes,'\r\n')
  local readAsTable = true
  local byt = readBytes(address,i,readAsTable)
  for j=1,#byt do byt[j] = ('%02X'):format(byt[j]) end
  local bytes = table.concat(byt, ' ')
  return i,copy,bytes,size,destination
end

function enablescript(name,registername,addressname,script,disable)
    local address=getAddress(addressname)
    if disable then script=(script):format(address,registername,readBytes(registername,1))
    else
        local i,copy,bytes,size =getInsForJump(address,name)
        script=(script):format(registername, registername, name, copy, registername, i, bytes, address)..string.rep('nop\n',i-size)..'returnhere:'
    end
    local success,erro=autoAssembleCheck(script)
    if not success then print('\n'..erro..'\n')local scriptstr=createStringlist()scriptstr.Text=script for j=0,scriptstr.Count-1 do print(string.format('%u\t%s',j+1,scriptstr[j])) end
    if not disable then deAlloc(name)unregisterSymbol(name)end error(name..' autoAssemble failed')end
    autoAssemble(script)
    if disable then deAlloc(name)unregisterSymbol(name)unregisterSymbol(registername)end
end

function cycleFullCompact(sender,force)
  local state = not(compactmenuitem.Caption == 'Compact View Mode')
  if force~=nil then state = not force end
  compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'
  getMainForm().Splitter1.Visible = state
  getMainForm().Panel4.Visible = state
  getMainForm().Panel5.Visible = state
end

function addCompactMenu()
  if compactmenualreadyexists then return end
  local parent = getMainForm().Menu.Items
  compactmenuitem = createMenuItem(parent)
  parent.add(compactmenuitem)
  compactmenuitem.Caption = 'Compact View Mode'
  compactmenuitem.OnClick = cycleFullCompact
  compactmenualreadyexists = 'yes'
end

addCompactMenu()
--cycleFullCompact(nil,true)

if syntaxcheck then return end

[ENABLE]
if not process or not enumModules()[1] then print('Error: No process selected...') error('process is nil') end
starttime=os.clock()
if string.find(process,'MassEffect') then
  isMassEffect=true

  local result2,result=sigscan('C0 CA 45 80 00 00 00 00 00 00 00 00 4E 6F 6E 65 00',process)
  for i=1,#result2 do
    result=pointerscan(getAddress(result2[i]),process)
    for j=1,#result do
      stringoffset=0xC
      unregisterSymbol('FNamePool') registerSymbol('FNamePool',result[j],true)
    end
  end
  local rec=getAddressList().getMemoryRecordByDescription('UE3 Object scanner')
  if rec then
    rec.Active=true
    while rec.AsyncProcessing do sleep(100) end
  end
  else isMassEffect=nil
end

if not UEMember or type(UEMember)~=type({}) then UEMember={}end

if not UE4ver then UE4ver=ue4versioncheck() end

local flag1,flag2,address,result1,result2,pointer,pointers,rec=false,false
if not readPointer('GUObjectArray') then

    local ObjectAOB={'44 8B * * * 48 8D 05 * * * * * * * * * 48 89 71 10'
    ,'40 53 48 83 EC 20 48 8B D9 48 85 D2 74 * 8B'
    ,'4C 8B 05 * * * * 45 3B 88'
    ,'4C 8B 44 24 60 8B 44 24 78 * * * 48 8D','8B 44 24 04 56 8B F1 85 C0 74 17 8B 40 08'
    ,'8B 44 24 04 56 8B F1 85 C0 74 17 8B 40 08'
    ,'8B 15 * * * * 8B 04 82 85'
    }
    for i=1,#ObjectAOB do
      result1=sigscan(ObjectAOB[i],process)
      for j=1,#result1 do
        print(i..':i'..':'..result1[j])
        result2=findAddress('GUObjectArray',0,result1[j],0x50)
        for k=1,#result2 do
          pointer=getAddress(result2[k])-0x70
          print(i..':j'..':'..result2[k])
          for m=0,0x100,4 do
            if readPointer(readPointer(readPointer(pointer+m))) then
              if m&gt;0x50 then unregisterSymbol('GUObjectArray') registerSymbol('GUObjectArray',result2[k],true)
              else unregisterSymbol('GUObjectArray') registerSymbol('GUObjectArray',result2[k]..'-68',true) end
              flag1=true break
            end
          end
          if flag1 then break end
        end
        if flag1 then break end
      end
      if flag1 then break end
    end
    if flag1 then print(string.format('GUObjectArray = %X',getAddress('GUObjectArray')))
    else print('GUObjectArray not found, running scanner...') end
    flag1 = not flag1

    if not flag1 and ue4versioncheck()&lt;=2 and targetIs64Bit() and UE4ver&lt;23 then
      if readInteger('GUObjectArray+24')==0xFFFFFFFF then UE4ver=18
      elseif readInteger('GUObjectArray+14')==0 then UE4ver=9
      else UE4ver=20 end
    end
end
if not readPointer('FNamePool') then
    if string.find(process,'StateOfDecay2')then
      findAddress('FNamePool',1,sigscan('48 8D * * * * * 8B * * 85 * 74 * 8D',process)[1])
      findAddress('FNamePool2',3,sigscan('48 8D * * * * * 8B * * 85 * 74 * 8D',process)[1])
      FNamePool=getAddress('FNamePool')
      FNamePool2=getAddress('FNamePool2')
      flag2=true
    end

    local NamePoolAOB={'4C 8D 05 * * * * EB 16 48 8D 0D * * * * E8'
    ,'48 8D 0D *  *  *  *  E8 *  *  *  *  *  8B *  C6'
    ,'48 83 EC 28 48 8B 05 *  *  *  *  48 85 C0 75 *  B9 *  *  00 00 48 89 5C 24 20 E8'
    ,'48 83 EC 28 48 8B 05 *  *  *  *  48 85 C0 75 *  B9 *  *  00 00 48 89 5C 24 20 E8'
    ,'C3 *  DB 48 89 1D *  *  *  *  *  *  48 8B 5C 24 20'
    ,'33 F6 89 35 * * * * 8B C6 5E'
    ,'8B 07 8B 0D * * * * 8B 04 81'}
    for i=(UE4ver&gt;=23 or ue4versioncheck()&lt;2) and 1 or 3,#NamePoolAOB do
      result1=sigscan(NamePoolAOB[i],process)
      for j=1,#result1 do
        print(i..':i'..':'..result1[j])
        result2=findAddress('GUObjectArray',0,result1[j],0x50)
        for k=1,#result2 do
          print(i..':j'..':'..result2[k])
          pointer=getAddress(result2[k])
          flag2=ValidateFNamePool(pointer)
          if flag2 then UE4ver=ue4versioncheck()==0 and (i&gt;2 and 18 or 23) or UE4ver break end
        end
        if flag2 then break end
      end
      if flag2 then break end
    end
    if flag2 then print(string.format('FNamePool = %X',getAddress('FNamePool')))
    else print('FNamePool not found, running scanner...') end
    flag2 = not flag2

end

if flag2 then
  local FNamePoolScanner={'FNamePool scanner V4 (BatmanAk)','FNamePool scanner V2 (Generic)','FNamePool scanner V3 (Unicode)'}
  unregisterSymbol('FNamePool')
  UE4ver=ue4versioncheck()
  for i=(string.find(process,'Batman') and 1 or 2),#FNamePoolScanner do
    rec=getAddressList().getMemoryRecordByDescription(FNamePoolScanner[i])
    if rec then
      rec.Active=true
      while rec.AsyncProcessing do sleep(100) end
    end
    if readPointer('FNamePool') then break end
  end
  if not readPointer('FNamePool') then error('FNamePool not found!')end
end

if flag1 then
  local ObjectScanner={'UE4 Object scanner (region)','UE4 Object scanner','UE4 Object scanner V2'
  ,'UE3 Namepool &amp; ObjectArray scanner (using string reference)','UE3 Object scanner'}
  unregisterSymbol('GUObjectArray')
  print(UE4ver)
  for i=(UE4ver&gt;7 or ue4versioncheck()&lt;=0) and 1 or 4,#ObjectScanner do
    rec=getAddressList().getMemoryRecordByDescription(ObjectScanner[i])
    if rec then
      rec.Active=true
      while rec.AsyncProcessing do sleep(100) end
    end
    if readPointer('GUObjectArray') then break end
  end
  if not readPointer('GUObjectArray') then error('GUObjectArray not found!')end
end

print('AOBScan done : '..os.clock()-starttime)

ue4parsetable()

FNameStringAlgo(1,true)
FNameStringAlgo(3,true)
if not stringoffset then print('error: stringoffset/ByteProperty not found') error() end

ue4config()
ue4parsetable()
if UE4ver==23 and ue4versioncheck()==0 then BasicEnumObject() end
AutoConfig()

--[[
if ue4versioncheck()==0 and UE4ver&gt;=25 then
  ue4config()
  ue4parsetable()
  BasicEnumObject()
end]]

print('Table parsing done : '..os.clock()-starttime)

rec=getAddressList().getMemoryRecordByDescription('UEMemberStr(DoNotTouch!)')
if rec then rec.Active=true end

BasicEnumObject()
registerMemberAlgo()

rec=getAddressList().getMemoryRecordByDescription('Get GEngine')
  if rec then
  rec.Active=true
  while rec.AsyncProcessing do sleep(100) end
end


print('All done : '..os.clock()-starttime..'\n')
if not ue_SymbolLookupCallbackID then
  ue_SymbolLookupCallbackID=registerSymbolLookupCallback(ue_SymbolLookupCallback,slNotSymbol)
end
--registerFuncAlgo()
GetLuaEngine().close()
[DISABLE]
--cycleFullCompact(nil,false)
unregisterSymbolLookupCallback(ue_SymbolLookupCallbackID)
ue_SymbolLookupCallbackID=nil
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>26076</ID>
          <Description>"Enable UE Structure Lookup "</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
if not ue_structureDissectOverrideCallbackID then
  ue_structureDissectOverrideCallbackID=registerStructureDissectOverride(ue_structureDissectOverrideCallback)
end
if not ue_structureNameLookupCallbackID then
  ue_structureNameLookupCallbackID=registerStructureNameLookup(ue_structureNameLookupCallback)
end

[DISABLE]
unregisterStructureDissectOverride(ue_structureDissectOverrideCallbackID)
unregisterStructureNameLookup(ue_structureNameLookupCallbackID)
ue_structureDissectOverrideCallbackID=nil
ue_structureNameLookupCallbackID=nil
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26116</ID>
          <Description>"Refresh ObjectList"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
BasicEnumObject()

[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26117</ID>
          <Description>"Re-register Fields/Members 's Symbols"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
registerMemberAlgo()

[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26115</ID>
          <Description>"UE Object Dumper Algo"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]

starttime=os.clock()

totalobject=0
local Path = 'C:\\Users\\'..os.getenv('USERNAME')..'\\Desktop\\'
local filename= string.format('[%s] ObjectsDump.txt',process)
local file,err = io.open(Path..filename, 'w')
assert(file,err)
print(Path..filename)
file:write(string.format('Process: %s\nUE version: %.2f\nTimeStamp: %s\n\n',process,UE4ver,os.date()))
local size,sizes,pointer,datatable,pointers,propname,offset,list,str,strid,name,objid,ObjectData=targetIs64Bit() and 8 or 4,HighestObjectID+10
for i=1,sizes do
  if ObjectTable[i] then
    ObjectData=ObjectTable[i]
    totalobject=totalobject+1
    str=string.format('%016X',ObjectData.Address)
    strid=string.format('%08u',ObjectData.ObjectId)
    name=ObjectData.Type..' '..ObjectData.FullName
    if ObjectData.Offset then
      strid=string.format('%8X',ObjectData.Offset)
    elseif ObjectData.Super and ObjectData.Super.Name~='Object' then
      name=string.format('%s ~ %s %s',name,ObjectData.Super.Type,ObjectData.Super.FullName)
    end
    if ObjectData.Property and #ObjectData.Property==1 then
      name=string.format('%s ~ %s %s',name,ObjectData.Property[1].Type,ObjectData.Property[1].FullName)
    end
    if ObjectData.EnumProp then
      name=string.format('%s ~ %s %s',name,ObjectData.EnumProp.Type,ObjectData.EnumProp.FullName)
    end

    file:write(string.format('[%s] %s %s\n',strid,str,name))

    if ObjectData.Property and #ObjectData.Property==2 then
      for j=1,2 do
        name=string.format('%s %s',ObjectData.Property[j].Type,ObjectData.Property[j].FullName)
        if ObjectData.Property[j].Property and ObjectData.Property[j].Property[1] then
          name=string.format('%s ~ %s %s',name,ObjectData.Property[j].Property[1].Type,ObjectData.Property[j].Property[1].FullName)
        end
        if ObjectData.Property[j].EnumProp then
          name=string.format('%s ~ %s %s',name,ObjectData.Property[j].EnumProp.Type,ObjectData.Property[j].EnumProp.FullName)
        end
        file:write(string.format('[%8X] %016X %s\n',readInteger(ObjectData.Property[j].Address+UObject.Offset),ObjectData.Property[j].Address,name))
      end
    end

    if UObject.enumoffset and UObject.enummul and UObject.enumindex and UObject.enumname then
    if ObjectData.Type=='UserDefinedEnum' or ObjectData.Type=='Enum' then
      list=ObjectData.Address+UObject.enumoffset
      for k=0,readInteger(list+size)-1 do
        pointers=readPointer(list)+k*UObject.enummul
        offset=readBytes(pointers+UObject.enumindex,1)
        if not offset then break end
        if offset==0 then offset=k end
        propname=FNameStringAlgo(pointers+UObject.enumname)
        strid=string.format('%8X',offset)
        str=string.format('%016X',pointers)
        file:write(string.format('[%s] %s %s\n',strid,str,propname))
      end
    end
    end

    if ObjectData.Member and UE4ver&gt;=25 then
      for m=1,#ObjectData.Member do
        if not string.find(ObjectData.Member[m].Type,'Function')then

        totalobject=totalobject+1

        str=string.format('%016X',ObjectData.Member[m].Address)
        strid=string.format('%08u',ObjectData.Member[m].ObjectId)
        name=ObjectData.Member[m].Type..' '..ObjectData.Member[m].FullName
        if ObjectData.Member[m].Offset then
          strid=string.format('%8X',ObjectData.Member[m].Offset)
        end
        if ObjectData.Member[m].Property and #ObjectData.Member[m].Property==1 then
          name=string.format('%s ~ %s %s',name,ObjectData.Member[m].Property[1].Type,ObjectData.Member[m].Property[1].FullName)
        end
        if ObjectData.Member[m].EnumProp then
          name=string.format('%s ~ %s %s',name,ObjectData.Member[m].EnumProp.Type,ObjectData.Member[m].EnumProp.FullName)
        end

        file:write(string.format('[%s] %s %s\n',strid,str,name))

        if ObjectData.Member[m].Property and #ObjectData.Member[m].Property==2 then
        for j=1,2 do
          name=string.format('%s %s',ObjectData.Member[m].Property[j].Type,ObjectData.Member[m].Property[j].FullName)
          if ObjectData.Member[m].Property[j].Property and ObjectData.Member[m].Property[j].Property[1] then
            name=string.format('%s ~ %s %s',name,ObjectData.Member[m].Property[j].Property[1].Type,ObjectData.Member[m].Property[j].Property[1].FullName)
          end
          if ObjectData.Member[m].Property[j].EnumProp then
            name=string.format('%s ~ %s %s',name,ObjectData.Member[m].Property[j].EnumProp.Type,ObjectData.Member[m].Property[j].EnumProp.FullName)
          end
          file:write(string.format('[%8X] %016X %s\n',readInteger(ObjectData.Member[m].Property[j].Address+UObject.Offset),ObjectData.Member[m].Property[j].Address,name))
        end
        end
    end



      end
    end

  end
end
file:close()
print(string.format('\nA Total of %u objects has been dumped in %.3f seconds',totalobject,os.clock()-starttime))

shellExecute(Path..filename)

[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26122</ID>
          <Description>"UE Object Dumper All Algo"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$lua}
function BasicObjectdump(pointerss,start,stop)

  Threadlist[#Threadlist+1]=i
  local size,sizes,pointer,datatable,pointers,propname,offset,list,str,strid,name,objid,ObjectData,pointersss=targetIs64Bit() and 8 or 4,HighestObjectID+10
  for j=start,stop do
    pointersss=readPointer(pointerss+j*UObjectMul)
    ObjectData=SaveObject(pointersss)
    if ObjectData then




--for i=1,sizes do
--  if ObjectTable[i] then
    --ObjectData=ObjectTable[i]
    totalobject=totalobject+1
    str=string.format('%016X',ObjectData.Address)
    strid=string.format('%08u',ObjectData.ObjectId)
    name=ObjectData.Type..' '..ObjectData.FullName
    if ObjectData.Offset then
      strid=string.format('%8X',ObjectData.Offset)
    elseif ObjectData.Super and ObjectData.Super.Name~='Object' then
      name=string.format('%s ~ %s %s',name,ObjectData.Super.Type,ObjectData.Super.FullName)
    end
    if ObjectData.Property and #ObjectData.Property==1 then
      name=string.format('%s ~ %s %s',name,ObjectData.Property[1].Type,ObjectData.Property[1].FullName)
    end
    if ObjectData.EnumProp then
      name=string.format('%s ~ %s %s',name,ObjectData.EnumProp.Type,ObjectData.EnumProp.FullName)
    end

    file:write(string.format('[%s] %s %s\n',strid,str,name))

    if ObjectData.Property and #ObjectData.Property==2 then
      for j=1,2 do
        name=string.format('%s %s',ObjectData.Property[j].Type,ObjectData.Property[j].FullName)
        if ObjectData.Property[j].Property and ObjectData.Property[j].Property[1] then
          name=string.format('%s ~ %s %s',name,ObjectData.Property[j].Property[1].Type,ObjectData.Property[j].Property[1].FullName)
        end
        if ObjectData.Property[j].EnumProp then
          name=string.format('%s ~ %s %s',name,ObjectData.Property[j].EnumProp.Type,ObjectData.Property[j].EnumProp.FullName)
        end
        file:write(string.format('[%8X] %016X %s\n',readInteger(ObjectData.Property[j].Address+UObject.Offset),ObjectData.Property[j].Address,name))
      end
    end

    if UObject.enumoffset and UObject.enummul and UObject.enumindex and UObject.enumname then
    if ObjectData.Type=='UserDefinedEnum' or ObjectData.Type=='Enum' then
      list=ObjectData.Address+UObject.enumoffset
      for k=0,readInteger(list+size)-1 do
        pointers=readPointer(list)+k*UObject.enummul
        offset=readBytes(pointers+UObject.enumindex,1)
        if not offset then break end
        if offset==0 then offset=k end
        propname=FNameStringAlgo(pointers+UObject.enumname)
        strid=string.format('%8X',offset)
        str=string.format('%016X',pointers)
        file:write(string.format('[%s] %s %s\n',strid,str,propname))
      end
    end
    end

    if ObjectData.Member and UE4ver&gt;=25 then
      for m=1,#ObjectData.Member do
        if not string.find(ObjectData.Member[m].Type,'Function')then

        totalobject=totalobject+1

        str=string.format('%016X',ObjectData.Member[m].Address)
        strid=string.format('%08u',ObjectData.Member[m].ObjectId)
        name=ObjectData.Member[m].Type..' '..ObjectData.Member[m].FullName
        if ObjectData.Member[m].Offset then
          strid=string.format('%8X',ObjectData.Member[m].Offset)
        end
        if ObjectData.Member[m].Property and #ObjectData.Member[m].Property==1 then
          name=string.format('%s ~ %s %s',name,ObjectData.Member[m].Property[1].Type,ObjectData.Member[m].Property[1].FullName)
        end
        if ObjectData.Member[m].EnumProp then
          name=string.format('%s ~ %s %s',name,ObjectData.Member[m].EnumProp.Type,ObjectData.Member[m].EnumProp.FullName)
        end

        file:write(string.format('[%s] %s %s\n',strid,str,name))

        if ObjectData.Member[m].Property and #ObjectData.Member[m].Property==2 then
        for j=1,2 do
          name=string.format('%s %s',ObjectData.Member[m].Property[j].Type,ObjectData.Member[m].Property[j].FullName)
          if ObjectData.Member[m].Property[j].Property and ObjectData.Member[m].Property[j].Property[1] then
            name=string.format('%s ~ %s %s',name,ObjectData.Member[m].Property[j].Property[1].Type,ObjectData.Member[m].Property[j].Property[1].FullName)
          end
          if ObjectData.Member[m].Property[j].EnumProp then
            name=string.format('%s ~ %s %s',name,ObjectData.Member[m].Property[j].EnumProp.Type,ObjectData.Member[m].Property[j].EnumProp.FullName)
          end
          file:write(string.format('[%8X] %016X %s\n',readInteger(ObjectData.Member[m].Property[j].Address+UObject.Offset),ObjectData.Member[m].Property[j].Address,name))
        end
        end
    end



      end
    end
    elseif readPointer(readPointer(pointersss))then file:write(string.format('[%08u] %016X %s\n',readInteger(pointersss+UObject.ObjectId),pointersss,'invalid object')) totalobject=totalobject+1 end
  end
  Threadlist[#Threadlist]=nil
end
if syntaxcheck then return end
[ENABLE]

starttime=os.clock()

totalobject=0
local Path = 'C:\\Users\\'..os.getenv('USERNAME')..'\\Desktop\\'
local filename= string.format('[%s] ObjectsDump.txt',process)
file,err = io.open(Path..filename, 'w')
assert(file,err)
print(Path..filename)
file:write(string.format('Process: %s\nUE version: %.2f\nTimeStamp: %s\n\n',process,UE4ver,os.date()))
Threadlist={}

local count=0x200
  local sizess= UObjectMul*count
  local ObjectId=UObject.ObjectId
  local num,start,stop
  local size,pointersss=targetIs64Bit() and 8 or 4

  for i=0,0x1000,size do
    pointersss=readPointer(GUObjectAddress+i)
    if not readPointer(pointersss) then break end
    size=getregionsize(pointersss)
    num,start,stop=count,0,0
    for j=0,math.floor(size/sizess) do
      start=stop
      stop=stop+num
      --print(start..'~'..stop)
      createThread(BasicObjectdump(pointersss,start,stop-1))
    end
  end
  for i=0,10000 do
    if #Threadlist==0 then break end
    sleep(1)
  end

file:close()

print(string.format('\nA Total of %u might be objects has been dumped in %.3f seconds',totalobject,os.clock()-starttime))

shellExecute(Path..filename)



--  end
--end

[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26051</ID>
          <Description>"UE Name Dumper Algo"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
function uenamedump(file,start,stop)
  for i=start,stop do
    local name=FNameStringAlgo(i,true)
    if name and name:len()&lt;200 and name:len()&gt;3 and not string.find(name,'%c')  then
      --print(name)
      local strid=string.format('%08X',i)

      file:write(string.format('[%s] %s\n',strid,name))
      totalname=totalname+1
    end
  end
end

 local size
 if readPointer(FNameString) or string.find(process,'StateOfDecay2')then size=0xFFFFFFFF
 elseif UE4ver&gt;=23 then size=(#FNameDict&lt;&lt;0x10)-1
 elseif UE4ver&gt;2 then size=(#FNameDict&lt;&lt;0xE)-1
 else size=math.floor(#FNameDict[1]/4) end
 local count=0x200
 size=math.floor((size/count)+0.5)

 starttime=os.clock()
 local Path = 'C:\\Users\\'..os.getenv('USERNAME')..'\\Desktop\\'
 local filename= string.format('[%s] NamesDump.txt',process)
 local file,err = io.open(Path..filename, 'w')
 assert(file,err)
 file:write(string.format('Process: %s\nUE version: %.2f\nTimeStamp: %s\n\n',process,UE4ver,os.date()))
 totalname=0
 ue4parsetablecheck()
 local num,start,stop=count,0,0
 for i=0,size do
   start=stop
   stop=stop+num
   createThread(uenamedump(file,start,stop-1))
 end
 file:close()
 print(string.format('\nA Total of %u names had been dumped in %.3f seconds',totalname,os.clock()-starttime))
 print(Path..filename)
 shellExecute(Path..filename)
[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26081</ID>
          <Description>"Construct Console"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local result1=stringscan("NewObject with empty name can't be used to create default subobjects",process,nil,true)
local result2,StaticConstructObject=findAddress('lea rdx',0,'48 8D 15banana',process,nil,0,true)
for i=1,#result1 do
  for j=1,#result2 do
    if string.find(disassemble(result2[j]),result1[i])then
      --print(result2[j])
      local result3=findOpcodes(result2[j],'call',0x100)
      for k=1,#result3 do
        --print(string.format('%X',result3[k]))
        local result4=followcall(result3[k])
        if not string.find(result4,'ptr') then
          print(result4)
          result4=getAddress(result4)
          if #findOpcodes(result4,'push',0x10)&gt;4 then
            --print(string.format('%X',result4))
            StaticConstructObject=result4
            goto done
          end
        end
      end
    end
  end
end
::done::
if not StaticConstructObject then error('StaticConstructObject not found!')end
unregisterSymbol('StaticConstructObject')
registerSymbol('StaticConstructObject',StaticConstructObject,true)
local Console=executeCodeEx
(
  0,nil,
  getAddress(StaticConstructObject),
  getAddress('[[GEngine]+GameEngine.ConsoleClass]'),
  getAddress('[[GEngine]+GameEngine.GameViewport]'),
  0,0,0,0,0,0,0
)
if not Console or Console==0 then error('Console not constructed, wrong function ?') end
writePointer('[[GEngine]+GameEngine.GameViewport]+GameViewportClient.ViewportConsole',Console)
print('Console constructed...')
[DISABLE]
--"NewObject with empty name can't be used to create default subobjects"
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26091</ID>
          <Description>"Get GEngine"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local Object=UE4ver&gt;7 and StaticFindObjectAlgo('/Script/Engine.GameEngine') or StaticFindObjectAlgo('Engine.GameEngine')
if not Object then error('cant find Class GameEngine')end
Object=ObjectLists[Object]
for i=0,4 do
  if Object.Uper and Object.Uper[1] then Object=Object.Uper[1] else break end
end
for i=1,#Object.Instance do
  if not string.find(Object.Instance[i].Name,'Default') then Object=Object.Instance[i] break end
end
print(string.format('%X : %s %s',Object.Address,Object.Type,Object.FullName))
unregisterSymbol('GEngine')
registerSymbol('GEngine',pointerscan(Object.Address,process)[1],true)
[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26119</ID>
          <Description>"Create Struct"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local str,Address
str=inputQuery('CreateStructure', 'Input FullName of Class or Address of Class', '/Script/Engine.GameEngine')
if str and str~='' then
  Address=getAddressSafe(str)
  if not Address then  Address=StaticFindObjectAlgo(str)end
  if Address then Address=SaveObject(Address)end
  if not Address then error("Can't find "..str..', either invalid Object Address or invalid FullName')
  else
    SaveAndRemoveStruct()
    local Struct=ue4createstruct(Address)
    Struct.addToGlobalStructureList()
    createStructureForm(nil,nil,Struct.Name)
  end
end
[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26118</ID>
          <Description>"Print Fields/Members 's Classes used"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local AddressList,str,strtable,FullName=getAddressList(),'{',{}
for i=0,AddressList.Count-1 do
  if AddressList[i].Address~='' then
    FullName=AddressList[i].Address:gsub('+','')
    FullName=UEMemberClassFullName[FullName:lower()]
    if FullName and not strtable[FullName] then strtable[FullName]=FullName str=string.format("%s'%s',\n",str,FullName) end
  end
  for j=0,AddressList[i].OffsetCount-1 do
    if AddressList[i].OffsetText[j]~='' then
      FullName=AddressList[i].OffsetText[j]:gsub('+','')
      FullName=UEMemberClassFullName[FullName:lower()]

      if FullName and not strtable[FullName] then strtable[FullName]=FullName str=string.format("%s'%s',\n",str,FullName) end
    end
  end
end

print(str:sub(0,str:len()-2)..'}')

[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26040</ID>
          <Description>"NoClip &amp; Fly                                            Numpad6 :Toggle, Space :Up, LeftCtrl :Down"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end
local str1='[[[[[[GEngine]+Engine.GameInstance]+GameInstance.LocalPlayers]]+Player.PlayerController]+Actor.Character]'
[ENABLE]

--[[
Enum /Script/Engine.EMovementMode
0:MOVE_None
1:MOVE_Walking
2:MOVE_NavWalking
3:MOVE_Falling
4:MOVE_Swimming
5:MOVE_Flying
6:MOVE_Custom
7:MOVE_MAX

local list=+0x40
for i=0,readInteger(list+8)-1 do
local pointer=readPointer(list)+i*0x10
local enum=readInteger(pointer+8)
local name=FNameString(pointer)
print(enum..':'..name)
end
]]


if not RelativeLocationZoffset then
  local address=getAddress('['..str1..'+Character.CapsuleComponent]')
  local value=readInteger(address+getAddress('ActorComponent.RelativeLocation+Vector.Z'))
  local list=groupscan(string.format('4:%u',value),address,address+0x1000)
  RelativeLocationZoffset={}
  for i=1,#list do
    RelativeLocationZoffset[i]=getAddress(list[i])-address
  end
end

local address=getAddressSafe(str1..'+Actor.bActorEnableCollision')
if address then
local bActorEnableCollision=readBytes(address,1) &amp; ~ getAddress('Actor.bActorEnableCollision.Bit')
writeBytes(address,bActorEnableCollision)
end

updown = createTimer()
updown.Interval = 5
updown.OnTimer = function(t)
  local address=getAddressSafe('['..str1..'+Character.CapsuleComponent]')
  if address then
    if isKeyPressed(VK_SPACE) then
      for i=1,#RelativeLocationZoffset do
        writeFloat(address+RelativeLocationZoffset[i], readFloat(address+RelativeLocationZoffset[i])+20)
      end
    end
    if isKeyPressed(VK_LCONTROL) then
      for i=1,#RelativeLocationZoffset do
        writeFloat(address+RelativeLocationZoffset[i], readFloat(address+RelativeLocationZoffset[i])-20)
      end
    end
  end
  local address=getAddressSafe('['..str1..'+Character.CharacterMovement]+MovementComponent.MovementMode')
  if address then
  writeBytes(address,5)
  end
end




[DISABLE]
updown.destroy()

local address=getAddressSafe(str1..'+Actor.bActorEnableCollision')
if address then
local bActorEnableCollision=readBytes(address,1) | getAddress('Actor.bActorEnableCollision.Bit')
writeBytes(address,bActorEnableCollision)
end

local address=getAddressSafe('['..str1..'+Character.CharacterMovement]+MovementComponent.MovementMode')
if address then
writeBytes(address,1)
end
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>102</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>26041</ID>
              <Description>"WASD"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
wasd = createTimer()
wasd.Interval = 5
wasd.OnTimer = function(t)
  local address=getAddressSafe('[[[[[[GEngine]+Engine.GameInstance]+GameInstance.LocalPlayers]]+Player.PlayerController]+Actor.Character]+Character.CapsuleComponent]')
  if address then
    if isKeyPressed(VK_S) then
      for i=1,#RelativeLocationZoffset do
        writeFloat(address+RelativeLocationZoffset[i]-8, readFloat(address+RelativeLocationZoffset[i]-8)+20)
      end
    end
    if isKeyPressed(VK_W) then
      for i=1,#RelativeLocationZoffset do
        writeFloat(address+RelativeLocationZoffset[i]-8, readFloat(address+RelativeLocationZoffset[i]-8)-20)
      end
    end
    if isKeyPressed(VK_A) then
      for i=1,#RelativeLocationZoffset do
        writeFloat(address+RelativeLocationZoffset[i]-4, readFloat(address+RelativeLocationZoffset[i]-4)+20)
      end
    end
    if isKeyPressed(VK_D) then
      for i=1,#RelativeLocationZoffset do
        writeFloat(address+RelativeLocationZoffset[i]-4, readFloat(address+RelativeLocationZoffset[i]-4)-20)
      end
    end
  end
end

[DISABLE]
wasd.destroy()
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>26039</ID>
          <Description>"bCanBeDamaged false (Godmode)      Numpad4 :Deactive, Numpad5 :Active"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end
local str1='[[[[[[GEngine]+Engine.GameInstance]+GameInstance.LocalPlayers]]+Player.PlayerController]+Actor.Character]+Actor.bCanBeDamaged'
[ENABLE]
--CanBeDamaged = createTimer()
--CanBeDamaged.setInterval(1000)
--CanBeDamaged.OnTimer = function()
local address=getAddressSafe(str1)
if address then
local bCanBeDamaged=readBytes(address,1) &amp; ~ getAddress('Actor.bCanBeDamaged.Bit')
writeBytes(address,bCanBeDamaged)
end
--end
 
 
[DISABLE]
--CanBeDamaged.destroy()

local address=getAddressSafe(str1)
if address then
local bCanBeDamaged=readBytes(address,1) | getAddress('Actor.bCanBeDamaged.Bit')
writeBytes(address,bCanBeDamaged)
end
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>101</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>100</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>26025</ID>
          <Description>"Jump Multiplier                                       Numpad0 :Deactive, Numpad1 :Active &amp; Increase"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
jumpmultiplier=1
if syntaxcheck then return end
local str1='[[[[[[[GEngine]+Engine.GameInstance]+GameInstance.LocalPlayers]]+Player.PlayerController]+Actor.Character]+Character.CharacterMovement]'
local str2=str1..'CharacterMovementComponent.JumpZVelocity'
local str3=str1..'CharacterMovementComponent.MaxAcceleration'
local str4=str1..'CharacterMovementComponent.AirControl'
if not jumpdefault then jumpdefault=readFloat(str2)&lt;100 and 100 or readFloat(str2) end
if not MaxAccelerationdefault then MaxAccelerationdefault=readFloat(str3)end
if not AirControldefault then AirControldefault=readFloat(str4)end
[ENABLE]
jumpmuti=createHotkey(function()jumpmultiplier=jumpmultiplier+0.5 end,VK_NUMPAD1)
jump = createTimer()
jump.setInterval(100)
jump.OnTimer = function()
local address=getAddressSafe(str2)
local address2=getAddressSafe(str3)
local address3=getAddressSafe(str4)
if address then writeFloat(address,jumpdefault*jumpmultiplier)
writeFloat(address2,MaxAccelerationdefault*jumpmultiplier)
writeFloat(address3,AirControldefault*jumpmultiplier)
end
end
[DISABLE]
jump.destroy()
jumpmuti.destroy()
local address=getAddressSafe(str2)
local address2=getAddressSafe(str3)
local address3=getAddressSafe(str4)
if address then writeFloat(address,jumpdefault)
writeFloat(address2,MaxAccelerationdefault)
writeFloat(address3,AirControldefault)
end

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>97</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>96</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>26026</ID>
          <Description>"MovementSpeed Multiplier                   Numpad2 :Deactive, Numpad3 :Active &amp; Increase"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
speedvarmutiplier=1
if syntaxcheck then return end
local str1={'[[[[[[[GEngine]+Engine.GameInstance]+GameInstance.LocalPlayers]]+Player.PlayerController]+Actor.Character]+Character.CharacterMovement]+CharacterMovementComponent.MaxWalkSpeed'
,'[[[[[[[GEngine]+Engine.GameInstance]+GameInstance.LocalPlayers]]+Player.PlayerController]+Actor.Character]+Character.CharacterMovement]+CharacterMovementComponent.MaxWalkSpeedCrouched'
,'[[[[[[[GEngine]+Engine.GameInstance]+GameInstance.LocalPlayers]]+Player.PlayerController]+Actor.Character]+Character.CharacterMovement]+CharacterMovementComponent.MaxSwimSpeed'
,'[[[[[[[GEngine]+Engine.GameInstance]+GameInstance.LocalPlayers]]+Player.PlayerController]+Actor.Character]+Character.CharacterMovement]+CharacterMovementComponent.MaxFlySpeed'
,'[[[[[[[GEngine]+Engine.GameInstance]+GameInstance.LocalPlayers]]+Player.PlayerController]+Actor.Character]+Character.CharacterMovement]+CharacterMovementComponent.MaxCustomMovementSpeed'
,'[[[[[[[GEngine]+Engine.GameInstance]+GameInstance.LocalPlayers]]+Player.PlayerController]+Actor.Character]+Character.CharacterMovement]+CharacterMovementComponent.MaxAcceleration'
}

if not speedvar then
  speedvar={}
  for i=1,#str1 do
    speedvar[i]=readFloat(str1[i])
  end
end

[ENABLE]
speedvarmuti=createHotkey(function() speedvarmutiplier=speedvarmutiplier+0.5 end,VK_NUMPAD3)
speedv = createTimer()
speedv.setInterval(100)
speedv.OnTimer = function()
  for i=1,#str1 do
    address=getAddressSafe(str1[i])
    if address then writeFloat(address,speedvar[i]*speedvarmutiplier)end
  end
end
[DISABLE]
speedv.destroy()
speedvarmuti.destroy()

for i=1,#str1 do
  address=getAddressSafe(str1[i])
  if address then writeFloat(address,speedvar[i]*speedvarmutiplier)end
end
speedvar=nil
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>99</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>98</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>26052</ID>
          <Description>"UWorld"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <GroupHeader>1</GroupHeader>
          <Address>GEngine</Address>
          <Offsets>
            <Offset>0</Offset>
            <Offset>GameViewportClient.World</Offset>
            <Offset>Engine.GameViewport</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>25848</ID>
          <Description>"Player"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <GroupHeader>1</GroupHeader>
          <Address>GEngine</Address>
          <Offsets>
            <Offset>0</Offset>
            <Offset>Actor.Character</Offset>
            <Offset>Player.PlayerController</Offset>
            <Offset>0</Offset>
            <Offset>GameInstance.LocalPlayers</Offset>
            <Offset>Engine.GameInstance</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>25853</ID>
              <Description>"CharacterMovement"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <GroupHeader>1</GroupHeader>
              <Address>+Character.CharacterMovement</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>25854</ID>
                  <Description>"JumpZVelocity"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>+CharacterMovementComponent.JumpZVelocity</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>25855</ID>
                  <Description>"MaxWalkSpeed"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>+CharacterMovementComponent.MaxWalkSpeed</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>25857</ID>
                  <Description>"MaxWalkSpeedCrouched"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>+CharacterMovementComponent.MaxWalkSpeedCrouched</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>25858</ID>
                  <Description>"MaxAcceleration"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>+CharacterMovementComponent.MaxAcceleration</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>26124</ID>
              <Description>"WeaponDamage"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>GEngine</Address>
              <Offsets>
                <Offset>97c</Offset>
                <Offset>Actor.Character</Offset>
                <Offset>Player.PlayerController</Offset>
                <Offset>0</Offset>
                <Offset>GameInstance.LocalPlayers</Offset>
                <Offset>Engine.GameInstance</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>26123</ID>
              <Description>"PlayerHealth"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>GEngine</Address>
              <Offsets>
                <Offset>964</Offset>
                <Offset>Actor.Character</Offset>
                <Offset>Player.PlayerController</Offset>
                <Offset>0</Offset>
                <Offset>GameInstance.LocalPlayers</Offset>
                <Offset>Engine.GameInstance</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>26049</ID>
      <Description>"Tools"</Description>
      <Options moHideChildren="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>26048</ID>
          <Description>"FNamePool scanner"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]

print('------------------')
local isUnicode=false
local strlist,result,result2,result3,pointer1,pointer2,pointer3=stringscan('ByteProperty',nil,nil,isUnicode)

for i=1,#strlist do
  result=stringscan('IntProperty',getAddressSafe(strlist[i]),getAddressSafe(strlist[i]..'+50'),isUnicode)
  if #result&gt;0 then
    result=stringscan('None',getAddressSafe(strlist[i]..'-50'),getAddressSafe(strlist[i]),isUnicode)
    print(strlist[i])
    if #result&gt;0 then
      if string.sub(strlist[i],strlist[i]:len()-3,strlist[i]:len()-2)=='00' then
        result=pointerscan(getAddressSafe(string.sub(strlist[i],1,strlist[i]:len()-2)..'00'))
        for j=1,#result do
          pointer1=readPointer(result[j]..(targetIs64Bit() and '+8' or '+4'))
          pointer1=readPointer(pointer1)
          pointer2=readPointer(result[j]..(targetIs64Bit() and '+10' or '+8'))
          pointer2=readPointer(pointer2)
          pointer3=readPointer(result[j]..(targetIs64Bit() and '+18' or '+C'))
          pointer3=readPointer(pointer3)

          if pointer1 and pointer2 and pointer3 then
            print(strlist[i]..'&lt;-'..result[j])
            unregisterSymbol('FNamePool')
            registerSymbol('FNamePool',result[j]..'-10',true)
            if ue4versioncheck()==0 then UE4ver=23 end

            if string.sub(result[j],result[j]:len()-1,result[j]:len())=='00' then
              result2=pointerscan(getAddressSafe(result[j]))
              for k=1,#result2 do
                print(strlist[i]..'&lt;-'..result[j]..'&lt;-'..result2[k])
                result3=pointerscan(getAddressSafe(result2[k]),process)
                for l=1,#result3 do
                  print(strlist[i]..'&lt;-'..result[j]..'&lt;-'..result2[k]..'&lt;-'..result3[l])
                  if getAddress(result3[l])%4==0 then
                    unregisterSymbol('FNamePool')
                    registerSymbol('FNamePool',result3[l],true)
                    if ue4versioncheck()==0 then UE4ver=22 end
                    goto done
                  end
                end
              end
            end
          end
        end
      end
    end
  end
end
::done::
print('done')

[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26096</ID>
          <Description>"FNamePool scanner V2 (Generic)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]

print('------------------')
local isUnicode=false
local strlist,result,result2,result3,pointer1,pointer2,pointer3=stringscan('ByteProperty',nil,nil,isUnicode)

for i=1,#strlist do
  result=stringscan('IntProperty',getAddressSafe(strlist[i]),getAddressSafe(strlist[i]..'+50'),isUnicode)
  if #result&gt;0 then
    result=stringscan('None',getAddressSafe(strlist[i]..'-50'),getAddressSafe(strlist[i]),isUnicode)
    print(strlist[i])
    if #result&gt;0 then
      if string.sub(strlist[i],strlist[i]:len()-3,strlist[i]:len()-2)=='00' then
        result=pointerscan(getAddressSafe(string.sub(strlist[i],1,strlist[i]:len()-2)..'00'),nil,nil,getAddressSafe(string.sub(strlist[i],1,strlist[i]:len()-2)..'00')+0x50)
        for j=1,#result do
          pointer1=readPointer(result[j]..(targetIs64Bit() and '+8' or '+4'))
          pointer1=readPointer(pointer1)
          pointer2=readPointer(result[j]..(targetIs64Bit() and '+10' or '+8'))
          pointer2=readPointer(pointer2)
          pointer3=readPointer(result[j]..(targetIs64Bit() and '+18' or '+C'))
          pointer3=readPointer(pointer3)

          if pointer1 and pointer2 and pointer3 then
            print(strlist[i]..'&lt;-'..result[j])
            unregisterSymbol('FNamePool')
            registerSymbol('FNamePool',result[j]..'-10',true)
            if ue4versioncheck()==0 then UE4ver=23 end

            if getAddress(result[j])%4==0 then
              result2=pointerscan(getAddressSafe(result[j]))
              for k=1,#result2 do
                print(strlist[i]..'&lt;-'..result[j]..'&lt;-'..result2[k])
                if getAddress(result2[k])%4==0 then
                  if inModule(result2[k]) then UE4ver=ue4versioncheck() unregisterSymbol('FNamePool') registerSymbol('FNamePool',result2[k],true) goto done end
                  result3=pointerscan(getAddressSafe(result2[k]),getAddress(process),getAddress(process)+getModuleSize(process))
                  for l=1,#result3 do
                    print(strlist[i]..'&lt;-'..result[j]..'&lt;-'..result2[k]..'&lt;-'..result3[l])
                    if getAddress(result3[l])%4==0 then
                      unregisterSymbol('FNamePool')
                      registerSymbol('FNamePool',result3[l],true)
                      if ue4versioncheck()==0 then UE4ver=22 end
                      goto done
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end
end
::done::
if readPointer('FNamePool') then print(string.format('FNamePool=%X',getAddress('FNamePool'))) end
print('done')

[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26099</ID>
          <Description>"FNamePool scanner V3 (Unicode)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]

print('------------------')
local isUnicode=true
local strlist,result,result2,result3,pointer1,pointer2,pointer3=stringscan('ByteProperty',nil,nil,isUnicode)

for i=1,#strlist do
  print(strlist[i])
  result=pointerscan(getAddress(strlist[i])-0x50,nil,nil,getAddress(strlist[i]))
  for j=1,#result do
    if string.sub(result[j],result[j]:len()-3,result[j]:len()-2)=='00' then
      print(result[j])
      pointer1=readPointer(result[j]..(targetIs64Bit() and '+8' or '+4'))
      pointer1=readPointer(pointer1)
      pointer2=readPointer(result[j]..(targetIs64Bit() and '+10' or '+8'))
      pointer2=readPointer(pointer2)
      pointer3=readPointer(result[j]..(targetIs64Bit() and '+18' or '+C'))
      pointer3=readPointer(pointer3)
      if pointer1 and pointer2 and pointer3 then
         print(strlist[i]..'&lt;-'..result[j])
         result2=pointerscan(getAddressSafe(string.sub(result[j],1,result[j]:len()-2)..'00'))
         for k=1,#result2 do
           print(strlist[i]..'&lt;-'..result[j]..'&lt;-'..result2[k])
           if inModule(result2[k]) then UE4ver=ue4versioncheck() unregisterSymbol('FNamePool') registerSymbol('FNamePool',result2[k],true) goto done end

         end
      end
    end
  end
end
::done::
print('done')
[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26105</ID>
          <Description>"FNamePool scanner V4 (BatmanAk)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]

print('------------------')
local isUnicode=false
local size= targetIs64Bit() and 8 or 4
local result2,result,result3,result4,pointer1,pointer2,pointer3,tempstringoffset,str,tempfnamepooloffset=stringscan('ByteProperty',nil,nil,isUnicode)
for i=1,#result2 do
--print(result2[i])
  result=pointerscan(getAddress(result2[i]..'-50'),nil,nil,getAddress(result2[i]))

  for j=1,#result do
    tempstringoffset=getAddress(result2[i])-readPointer(getAddress(result[j]))

    for k=size,0x50,4 do
      str=readString(readPointer(getAddress(result[j])+k)+tempstringoffset,0x30,isUnicode)
      if str and str=='IntProperty' then
        stringoffset=tempstringoffset
        print(result2[i]..'&lt;-'..result[j])

        result3=pointerscan(getAddress(result[j]..'-50')-k,nil,nil,getAddress(result[j]))
        for m=1,#result3 do


          pointer1=readPointer(result3[m]..(targetIs64Bit() and '+8' or '+4'))
          pointer1=readPointer(pointer1)
          pointer2=readPointer(result3[m]..(targetIs64Bit() and '+10' or '+8'))
          pointer2=readPointer(pointer2)
          pointer3=readPointer(result3[m]..(targetIs64Bit() and '+18' or '+C'))
          pointer3=readPointer(pointer3)

          if pointer1 and pointer2 and pointer3 then
            print(result2[i]..'&lt;-'..result[j]..'&lt;-'..result3[m])

            --print(result2[i]..'&lt;-'..result[j]..'&lt;-'..result3[m])
            stringoffset2=0xc--((getAddress(result[j])-readPointer(result3[m])+size)/2)-size
          --print(string.format('%X',((getAddress(result[j])-readPointer(result3[m])+size)/2)-size))
            stringmul=k

            result4=pointerscan(getAddress(result3[m])-0x50,process,nil,getAddress(result3[m])+0x50)
            for n=1,#result4 do
              print(result2[i]..'&lt;-'..result[j]..'&lt;-'..result3[m]..'&lt;-'..result4[n])
              unregisterSymbol('FNamePool') registerSymbol('FNamePool',result4[n],true)
            end
          end
        end
      end
    end
  end
end
::done::
print('done')



[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26080</ID>
          <Description>"UE4 Object scanner (region)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$lua}

if syntaxcheck then return end

[ENABLE]
--unregisterSymbol('FNamePool')
--registerSymbol('FNamePool','libUE4.so+41DE8A4',true)
--UE4ver=nil
--if not UE4ver then ue4versioncheck()end
--ue4config()
--ue4parsetable()
ue4parsetableFNamePool()

FNameStringAlgo(1,true)
FNameStringAlgo(3,true)
if not stringoffset then print('error: stringoffset/ByteProperty not found') error() end

Aligned=true
function ue4parsetablecheck()
end

local CoreUObject=FindStringFName('/Script/CoreUObject')
if not UObject then  UObject = {} end
print(CoreUObject)
local address,pointer=getAddress('FNamePool')
local size,regionsize,baseaddress=getregionsize(address)
size=size+getregionsize(address+size+1)
size=size+getregionsize(address+size+1)
size=size+getregionsize(address+size+1)
size=size+getregionsize(address+size+1)
size=size+getregionsize(address+size+1)
print(string.format('%X ~ %X',address,address+size))
for i=address,address+size,4 do
  if readPointer(readPointer(readPointer(readPointer(i)))) then
    pointer=readPointer(readPointer(i))
    if checkvalue(pointer,0x50,CoreUObject,4)then print(string.format('%X',i)) unregisterSymbol('GUObjectArray') registerSymbol('GUObjectArray',i,true) break end
    pointer=readPointer(pointer)
    if checkvalue(pointer,0x50,CoreUObject,4)then print(string.format('%X',i)) unregisterSymbol('GUObjectArray') registerSymbol('GUObjectArray',i,true) break end
  end
end

if ue4versioncheck()&lt;=2 and targetIs64Bit() and UE4ver&lt;23 then
  if readInteger('GUObjectArray+24')==0xFFFFFFFF then UE4ver=18
  else UE4ver=20 end
end

print('done\n')

ue4parsetable() 
[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26121</ID>
          <Description>"UE4 Object scanner"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$lua}

if syntaxcheck then return end

[ENABLE]
--unregisterSymbol('FNamePool')
--registerSymbol('FNamePool','libUE4.so+41DE8A4',true)
--UE4ver=nil
--if not UE4ver then ue4versioncheck()end
--ue4config()
--ue4parsetable()
ue4parsetableFNamePool()

FNameStringAlgo(1,true)
FNameStringAlgo(3,true)
if not stringoffset then print('error: stringoffset/ByteProperty not found') error() end

Aligned=true
function ue4parsetablecheck()
end


local Object=FindStringFName('Object')
local Class=FindStringFName('Class')
local CoreUObject=FindStringFName('/Script/CoreUObject')
if not UObject then  UObject = {} end
print(Object)
print(Class)
print(CoreUObject)
local size,pointer,pointer2,pointer3=(targetIs64Bit() and 8 or 4)
local result,result2=groupscan('4:'..Object)
print(#result)
for i=1,#result do
  if checkvalue(getAddress(result[i])-0x50,0x50,1,4)then
    for j=0,0x100,size do
      pointer=readPointer(getAddress(result[i])-0x50+j)
      if not pointer then break end
      if checkvalue(pointer,0x50,Class,4) then
        pointer3=pointer
        for k=0,0x100,size do
          local pointer=readPointer(getAddress(result[i])-0x50+k)
          if not pointer then break end
          if checkvalue(pointer,0x50,CoreUObject,4)then

            --print(result[i])
            local value=targetIs64Bit() and readInteger(pointer+4) or readSmallInteger(pointer+2)
            --print(string.format('%X',readInteger(pointer)))

            if targetIs64Bit() then pointer2=checkvalue(getAddress(result[i])-0x50,0x50,value,(size/2))
            else
              for p=0,10 do
                if pointer2 then break end
                pointer2=checkvalue(getAddress(result[i])-0x50,0x50,value-5+p,(size/2))
              end
            end
            if pointer2 then
              pointer2=pointer2-(size/2)
              print(string.format('%X',pointer2))

              if checkvalue(pointer2+size,0x50,1,4)then UObject.ObjectId=checkvalue(pointer2+size,0x50,1,4)-pointer2
              else UObject.ObjectId=checkvalue(pointer2,0x50,1,4)-pointer2 end
              UObject.Class=checkvalue(pointer2+size,0x50,pointer3,size)-pointer2
              UObject.FNameIndex=checkvalue(pointer2+size,0x50,Object,4)-pointer2
              UObject.Outer=checkvalue(pointer2+size,0x50,pointer,size)-pointer2

              local str
              if UE4ver&lt;9 and targetIs64Bit() then
                str=string.format('8:0x%X 8:0x%X',pointer,pointer2)
              elseif UE4ver&lt;9 then
                str=string.format('4:0x%X 4:0x%X',pointer,pointer2)
              elseif targetIs64Bit() then
                str=string.format('8:0x%X 8:* 8:* 8:0x%X',pointer,pointer2)
              else
                str=string.format('4:0x%X 4:* 4:* 4:* 4:0x%X',pointer,pointer2)
              end
              print(str)
              result2=groupscan(str)
              for n=1,#result2 do
                local result3
                if not Aligned or getAddress(result2[n])%size==0 then
                  print(string.format('%X&lt;-%s',pointer2,result2[n]))
                  --result3=pointerscan(getAddress(result2[n]:sub(1,result2[n]:len()-2)..'00'))
                end
                if not result3 or #result3&lt;=0 then result3=pointerscan(getAddress(result2[n]))end
                for o=1,#result3 do
                  local result4
                  if not Aligned or getAddress(result3[o])%size==0 then

                    --if not inModule(result3[o]) then
                      print(string.format('%X&lt;-%s&lt;-%s',pointer2,result2[n],result3[o]))

                    --end

                    if inModule(result3[o]) and (readInteger(result3[o]..'-10+1C')&lt;0x7FFFFF or readInteger(result3[o]..'-10+24')&lt;0x7FFFFF) then
                      unregisterSymbol('GUObjectArray')
                      registerSymbol('GUObjectArray',result3[o]..'-10',true)
                      goto done
                    end

                    result4=pointerscan(getAddress(result3[o]))


                  end
                  if not result4 then result4={}end
                  for q=1,#result4 do
                    if not Aligned or getAddress(result4[q])%size==0 then
                      print(string.format('%X&lt;-%s&lt;-%s&lt;-%s',pointer2,result2[n],result3[o],result4[q]))

                      if inModule(result4[q]) then
                        unregisterSymbol('GUObjectArray')
                        registerSymbol('GUObjectArray',result4[q]..'-10',true)
                        goto done
                      end

                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end
end
::done::

if ue4versioncheck()&lt;=2 and targetIs64Bit() and UE4ver&lt;23 then
  if readInteger('GUObjectArray+24')==0xFFFFFFFF then UE4ver=18
  else UE4ver=20 end
end

print('done\n')

ue4parsetable() 
[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26086</ID>
          <Description>"UE4 Object scanner V2"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$lua}

if syntaxcheck then return end

[ENABLE]
--unregisterSymbol('FNamePool')
--registerSymbol('FNamePool','libUE4.so+41DE8A4',true)
--UE4ver=nil
--if not UE4ver then ue4versioncheck()end
--ue4config()
--ue4parsetable()
ue4parsetableFNamePool()

FNameStringAlgo(1,true)
FNameStringAlgo(3,true)
if not stringoffset then print('error: stringoffset/ByteProperty not found') error() end

Aligned=true
function ue4parsetablecheck()
end


local Object=FindStringFName('Object')
local Class=FindStringFName('Class')
local CoreUObject=FindStringFName('/Script/CoreUObject')
if not UObject then  UObject = {} end
print(Object)
print(Class)
print(CoreUObject)
local size,pointer,pointer2,pointer3=(targetIs64Bit() and 8 or 4)
local result,result2=groupscan('4:'..Object)
print(#result)
for i=1,#result do
  if checkvalue(getAddress(result[i])-0x50,0x50,1,4)then
    for j=0,0x100,size do
      pointer=readPointer(getAddress(result[i])-0x50+j)
      if not pointer then break end
      if checkvalue(pointer,0x50,Class,4) then
        pointer3=pointer
        for k=0,0x100,size do
          local pointer=readPointer(getAddress(result[i])-0x50+k)
          if not pointer then break end
          if checkvalue(pointer,0x50,CoreUObject,4)then

            --print(result[i])
            local value=targetIs64Bit() and readInteger(pointer+4) or readSmallInteger(pointer+2)
            --print(string.format('%X',readInteger(pointer)))

            if targetIs64Bit() then pointer2=checkvalue(getAddress(result[i])-0x50,0x50,value,(size/2))
            else
              for p=0,10 do
                if pointer2 then break end
                pointer2=checkvalue(getAddress(result[i])-0x50,0x50,value-5+p,(size/2))
              end
            end
            if pointer2 then
              pointer2=pointer2-(size/2)
              print(string.format('%X',pointer2))

              UObject.ObjectId=checkvalue(pointer2+size,0x50,1,4)-pointer2
              UObject.Class=checkvalue(pointer2+size,0x50,pointer3,size)-pointer2
              UObject.FNameIndex=checkvalue(pointer2+size,0x50,Object,4)-pointer2
              UObject.Outer=checkvalue(pointer2+size,0x50,pointer,size)-pointer2

              local str

              for p=4,0,-1 do
                str=string.format('%u:0x%X',size,pointer)
                for q=1,p do
                  str=str..' 4:*'
                end
                str=str..string.format(' %u:0x%X',size,pointer2)
                UObjectMul=(4*p)+size

                print(str)


                result2=groupscan(str)
                for n=1,#result2 do
                  local result3
                  if result2[n]:sub(result2[n]:len()-1,result2[n]:len())=='00' then
                    print(string.format('%X&lt;-%s',pointer2,result2[n]))
                    result3=pointerscan(getAddress(result2[n]))
                  end
                  if not result3  then result3={}end
                  for o=1,#result3 do
                    local result4
                    if not Aligned or getAddress(result3[o])%size==0 then
                      --if not inModule(result3[o]) then
                        print(string.format('%X&lt;-%s&lt;-%s',pointer2,result2[n],result3[o]))
                      --end
                      if inModule(result3[o]) and (readInteger(result3[o]..'-10+1C')&lt;0x7FFFFF or readInteger(result3[o]..'-10+24')&lt;0x7FFFFF) then
                        unregisterSymbol('GUObjectArray')
                        registerSymbol('GUObjectArray',result3[o]..'-10',true)
                        result4=pointerscan(getAddress(result3[o]..'-10'),process)
                        if result4[1] then
                          print(string.format('%X&lt;-%s&lt;-%s&lt;-%s',pointer2,result2[n],result3[o],result4[1]))
                          unregisterSymbol('GUObjectArray')
                          registerSymbol('GUObjectArray',result4[1],true)
                        end
                        goto done
                      end
                      result4=pointerscan(getAddress(result3[o]))
                    end
                    if not result4 then result4={}end
                    for q=1,#result4 do
                      if not Aligned or getAddress(result4[q])%size==0 then
                        print(string.format('%X&lt;-%s&lt;-%s&lt;-%s',pointer2,result2[n],result3[o],result4[q]))
                        if inModule(result4[q]) then
                          unregisterSymbol('GUObjectArray')
                          registerSymbol('GUObjectArray',result4[q]..'-10',true)

                          goto done
                        end
                      end
                    end
                  end
                end
              end

            end
          end
        end
      end
    end
  end
end
::done::

if ue4versioncheck()&lt;=2 and targetIs64Bit() and UE4ver&lt;23 then
  if readInteger('GUObjectArray+24')==0xFFFFFFFF then UE4ver=18
  elseif readInteger('GUObjectArray+14')==0 then UE4ver=9
  else UE4ver=20 end
end

print('done\n')

ue4parsetable() 
[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26120</ID>
          <Description>"UE3 Namepool &amp; ObjectArray scanner (using string reference)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
print('------------------')
local result1,num,address,result2,result3,pointer,flag1,flag2,flag3=stringscan('i&gt;=0 &amp;&amp; (i&lt;ArrayNum||(i==0',process),0
local size=targetIs64Bit() and 8 or 4
if targetIs64Bit() then result2=sigscan('48 8D',process)end
for i=1,#result1 do
  print(result1[i])
  if not targetIs64Bit() then result2=pointerscan(getAddress(result1[i]),process)end
  for j=1,#result2 do
    if (targetIs64Bit() and string.find(disassemble(result2[j]),result1[i])) or not targetIs64Bit() then
      if findOpcode(result2[j],(targetIs64Bit() and '*8' or '*4'),0x100) and readPointer(readPointer(findAddress('Array',0,result2[j]..'+4',nil,nil,nil,nil,nil,nil,0x10)[1]))  then
        --print(result1[i]..'&lt;-'..result2[j])
        result3=findAddress('GUObjectArray',0,result2[j]..'+4')
        for k=1,#result3 do
          flag3=false
          address=getAddress(result3[k])
          flag2=ValidateFNamePool(getAddress(address))
          if flag2 then print(string.format('FNamePool=%X',getAddressSafe('FNamePool'))) end
          pointer=readPointer(address)
          if readPointer(readPointer(pointer)) then
            for m=0,1 do
              for n=0,20*size,size do
                if not readPointer(readPointer(readPointer(pointer+n))) then break end
                if n==20*size then flag3=true end
              end
              if flag3 then break end
              pointer=readPointer(pointer)
            end
          end
          if flag3 and getAddressSafe('GUObjectArray')~=getAddress(address) and getAddressSafe('FNamePool')~=getAddress(address) and getAddress(address)%4==0 and readPointer(readPointer(readPointer(address))) and readPointer(readPointer(address))%4==0 then unregisterSymbol('GUObjectArray')registerSymbol('GUObjectArray',address,true) print(string.format('GUObjectArray=%X',getAddress('GUObjectArray'))) flag1=true goto done end
          if flag1 and flag2 then goto done end
        end
        --UObjectMul=targetIs64Bit() and 8 or 4
        --if num&gt;1 then break end
      end
    end
  end
end
::done::
--[[
if not readPointer('GUObjectArray')then
  result1=stringscan('Core',process)
  for i=1,#result1 do
    print(result1[i])
    if not targetIs64Bit() then result2=pointerscan(getAddress(result1[i]),process)end
    for j=1,#result2 do
      if (targetIs64Bit() and string.find(disassemble(result2[j]),result1[i])) or not targetIs64Bit() then
        if findOpcode(result2[j],(targetIs64Bit() and '*8' or '*4'),0x100) and readPointer(readPointer(findAddress('Array',0,result2[j]..'+4',nil,nil,nil,nil,nil,nil,0x10)[1]))  then
          print(result1[i]..'&lt;-'..result2[j])
          findAddress('GUObjectArray',1,result2[j]..'+4',nil,nil,nil,nil,nil,nil,0x10)
          break
        end
      end
    end
  end
end
]]
print('done')
[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26104</ID>
          <Description>"UE3 Object scanner"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$lua}

if syntaxcheck then return end

[ENABLE]
UE4ver=ue4versioncheck()
--unregisterSymbol('FNamePool')
--registerSymbol('FNamePool','libUE4.so+41DE8A4',true)
--UE4ver=nil
--if not UE4ver then ue4versioncheck()end
--ue4config()
--ue4parsetable()
ue4parsetableFNamePool()

FNameStringAlgo(1,true)
FNameStringAlgo(3,true)
if not stringoffset then print('error: stringoffset/ByteProperty not found') error() end

Aligned=true
function ue4parsetablecheck()
end


local Object=FindStringFName('Object',isMassEffect)
if not UObject then  UObject = {} end
print(Object)
local size,pointer,pointer1,pointer2,pointer3=(targetIs64Bit() and 8 or 4)
local result,result2=groupscan('4:'..Object)
print(#result)
for i=1,#result do
  pointer=getAddress(result[i])-0x50
  for j=0,0x200,4 do
    pointer1=checkvalue(readPointer(pointer+j),0x200,'Class',1)
    if pointer1 then
      for k=0,0x200,4 do
        pointer2=checkvalue(readPointer(pointer+k),0x200,'Core',1)
        if pointer2 then
          print(result[i])
          pointer1=pointer1-readPointer(pointer+j)
          pointer2=pointer2-readPointer(pointer+k)
          if pointer1==pointer2 then
            pointer=getAddress(result[i])-pointer1
            print(string.format('%X',pointer))
            for l=1,3 do
              pointer3=checkvalue(pointer+size,0x100,l,4)
              if pointer3 then print(l)
                UObject.ObjectId=pointer3-pointer
                UObject.FNameIndex=pointer1
                UObject.Class=pointer1+j-0x50
                UObject.Outer=pointer1+k-0x50

                result2=pointerscan(pointer)
                for m=1,#result2 do
                  local val=0
                  for o=1,100 do
                    val=o
                    if not readPointer(readPointer(readPointer(getAddress(result2[m])+o*size))) then break end
                  end

                  if val==100 then
                    print(string.format('%X',getAddressSafe(result2[m])-(size*l)))
                    result=pointerscan(getAddressSafe(result2[m])-(size*l),process)
                    unregisterSymbol('GUObjectArray')
                    registerSymbol('GUObjectArray',getAddressSafe(result2[m])-(size*l),true)
                    NOGUObjectsize=true

                    for n=1,#result do
                      print(result2[m]..'&lt;-'..result[n])
                      if inModule(result[n]) and getAddress(result[n])%4==0 then
                        unregisterSymbol('GUObjectArray')
                        registerSymbol('GUObjectArray',result[n],true)
                        NOGUObjectsize=nil
                        goto done
                      end
                    end
                  end
                  if m==#result2 then goto done end
                end
              end
            end
          end
        end
      end
    end
  end
end
::done::
--[[
if ue4versioncheck()&lt;=2 and targetIs64Bit() and UE4ver&lt;23 then
  if readInteger('GUObjectArray+24')==0xFFFFFFFF then UE4ver=18
  elseif readInteger('GUObjectArray+14')==0 then UE4ver=9
  else UE4ver=20 end
end
]]

if readPointer('GUObjectArray') then ue4parsetable() end
print('done\n')
[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26092</ID>
          <Description>"to Single Line Address"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function toStr(rec)
  local tec,str,list=rec,'',{}
  while(true)do
    if not tec or not tec.Address then break end
    list[#list+1]=tec
    if tec.Address:sub(1,1)~='+' then break end
    tec=tec.Parent
  end
  for i=#list,1,-1 do
    str=string.format('%s%s',str,list[i].Address)
    for j=list[i].OffsetCount-1,0,-1 do
      str=string.format('[%s]+%s',str,list[i].OffsetText[j])
    end
  end
  return str
end

if syntaxcheck then return end
[ENABLE]



for i=0,memrec.Count do
  memrec.Child[i].Address=toStr(memrec.Child[i]) memrec.Child[i].OffsetCount=0
end
[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26093</ID>
          <Description>"to Structural Address"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function toStr(rec)
  local tec,str,list=rec,'',{}
  while(true)do
    if not tec or not tec.Address then break end
    list[#list+1]=tec
    if tec.Address:sub(1,1)~='+' then break end
    tec=tec.Parent
  end
  for i=#list,1,-1 do
    str=string.format('%s%s',str,list[i].Address)
    for j=list[i].OffsetCount-1,0,-1 do
      str=string.format('[%s]+%s',str,list[i].OffsetText[j])
    end
  end
  return str
end

function toStructural(rec)
  local str,str2,list=toStr(rec),'',{}
  if str:find(']') then str2=str:sub(1,str:find(']')-1):gsub('%[','')
  else str2=str end
  rec.Address=str2
  while(true)do
    if not str:find(']') then break end
    str=str:sub(str:find(']')+2,str:len())
    if str:find(']') then str2=str:sub(1,str:find(']')-1):gsub('%[','')
    else str2=str end
    list[#list+1]=str2
  end
  rec.OffsetCount=#list
  for i=#list,1,-1 do
    rec.OffsetText[#list-i]=list[i]
  end
end

if syntaxcheck then return end
[ENABLE]

for i=0,memrec.Count do
  toStructural(memrec.Child[i])
end

[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26107</ID>
          <Description>"Auto Assemble script"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function GetFullName(object)
  if not GetFullNameMem then GetFullNameMem=allocateMemory(0x100)end
  executeCodeEx(0, nil, getAddress('GetFullName'), object, GetFullNameMem)
  local str=readPointer(GetFullNameMem)
  if str then str=readString(str,readInteger(GetFullNameMem+0x8)*2,true) end
  return str
end


if syntaxcheck then return end
[ENABLE]


 
 
[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26029</ID>
          <Description>"DissectCode (Memory View -&gt; Ctrl+J or (Tools -&gt; Dissect code) )"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>26028</ID>
              <Description>"Save DissectCode"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local path=string.format('C:\\Users\\%s\\Documents\\My Cheat Tables\\%s_dissectCode',os.getenv('USERNAME'),process:sub(1,string.find(process,'%.')-1))
getDissectCode().saveToFile(path)
--getDissectCode().loadFromFile(path)
 
[DISABLE]

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>26030</ID>
              <Description>"Load DissectCode"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local path=string.format('C:\\Users\\%s\\Documents\\My Cheat Tables\\%s_dissectCode',os.getenv('USERNAME'),process:sub(1,string.find(process,'%.')-1))
--getDissectCode().saveToFile(path)
getDissectCode().loadFromFile(path)
 
[DISABLE]

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
    <Structure Name="BMICharacter_C" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="Pointer" Bytesize="8" OffsetHex="00000000" Description="VTable" DisplayMethod="unsigned integer"/>
        <Element Offset="12" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000000C" Description="ObjectIndex" DisplayMethod="unsigned integer"/>
        <Element Offset="16" Vartype="Pointer" Bytesize="8" OffsetHex="00000010" Description="Class/Type" DisplayMethod="unsigned integer"/>
        <Element Offset="24" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000018" Description="FNameIndex" DisplayMethod="unsigned integer"/>
        <Element Offset="28" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000001C" DisplayMethod="unsigned integer"/>
        <Element Offset="32" Vartype="Pointer" Bytesize="8" OffsetHex="00000020" Description="Outer" DisplayMethod="unsigned integer"/>
        <Element Offset="40" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000028" Description="PrimaryActorTick" DisplayMethod="unsigned integer"/>
        <Element Offset="44" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000002C" DisplayMethod="unsigned integer"/>
        <Element Offset="48" Vartype="Byte" Bytesize="1" OffsetHex="00000030" Description="PrimaryActorTick.TickGroup" DisplayMethod="unsigned integer"/>
        <Element Offset="49" Vartype="Byte" Bytesize="1" OffsetHex="00000031" Description="PrimaryActorTick.EndTickGroup" DisplayMethod="unsigned integer"/>
        <Element Offset="50" Vartype="Byte" Bytesize="1" OffsetHex="00000032" Description="PrimaryActorTick.bCanEverTick" DisplayMethod="unsigned integer" ChildStructStart="2"/>
        <Element Offset="50" Vartype="Byte" Bytesize="1" OffsetHex="00000032" Description="PrimaryActorTick.bStartWithTickEnabled" DisplayMethod="unsigned integer" ChildStructStart="4"/>
        <Element Offset="50" Vartype="Byte" Bytesize="1" OffsetHex="00000032" Description="PrimaryActorTick.bAllowTickOnDedicatedServer" DisplayMethod="unsigned integer" ChildStructStart="8"/>
        <Element Offset="50" Vartype="Byte" Bytesize="1" OffsetHex="00000032" Description="PrimaryActorTick.bTickEvenWhenPaused" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="52" Vartype="Float" Bytesize="4" OffsetHex="00000034" Description="PrimaryActorTick.TickInterval" DisplayMethod="unsigned integer"/>
        <Element Offset="56" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00000038" DisplayMethod="unsigned integer"/>
        <Element Offset="88" Vartype="Byte" Bytesize="1" OffsetHex="00000058" Description="bNetTemporary" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="88" Vartype="Byte" Bytesize="1" OffsetHex="00000058" Description="bAlwaysRelevant" DisplayMethod="unsigned integer" ChildStructStart="8"/>
        <Element Offset="88" Vartype="Byte" Bytesize="1" OffsetHex="00000058" Description="bOnlyRelevantToOwner" DisplayMethod="unsigned integer" ChildStructStart="4"/>
        <Element Offset="88" Vartype="Byte" Bytesize="1" OffsetHex="00000058" Description="bNetStartup" DisplayMethod="unsigned integer" ChildStructStart="2"/>
        <Element Offset="88" Vartype="Byte" Bytesize="1" OffsetHex="00000058" Description="bReplicateMovement" DisplayMethod="unsigned integer" ChildStructStart="16"/>
        <Element Offset="88" Vartype="Byte" Bytesize="1" OffsetHex="00000058" Description="bHidden" DisplayMethod="unsigned integer" ChildStructStart="32"/>
        <Element Offset="88" Vartype="Byte" Bytesize="1" OffsetHex="00000058" Description="bTearOff" DisplayMethod="unsigned integer" ChildStructStart="64"/>
        <Element Offset="88" Vartype="Byte" Bytesize="1" OffsetHex="00000058" Description="bExchangedRoles" DisplayMethod="unsigned integer" ChildStructStart="128"/>
        <Element Offset="89" Vartype="Byte" Bytesize="1" OffsetHex="00000059" Description="bNetLoadOnClient" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="89" Vartype="Byte" Bytesize="1" OffsetHex="00000059" Description="bRelevantForLevelBounds" DisplayMethod="unsigned integer" ChildStructStart="8"/>
        <Element Offset="89" Vartype="Byte" Bytesize="1" OffsetHex="00000059" Description="bCanBeDamaged" DisplayMethod="unsigned integer" ChildStructStart="128"/>
        <Element Offset="89" Vartype="Byte" Bytesize="1" OffsetHex="00000059" Description="bAutoDestroyWhenFinished" DisplayMethod="unsigned integer" ChildStructStart="64"/>
        <Element Offset="89" Vartype="Byte" Bytesize="1" OffsetHex="00000059" Description="bAllowTickBeforeBeginPlay" DisplayMethod="unsigned integer" ChildStructStart="32"/>
        <Element Offset="89" Vartype="Byte" Bytesize="1" OffsetHex="00000059" Description="bReplayRewindable" DisplayMethod="unsigned integer" ChildStructStart="16"/>
        <Element Offset="89" Vartype="Byte" Bytesize="1" OffsetHex="00000059" Description="bNetUseOwnerRelevancy" DisplayMethod="unsigned integer" ChildStructStart="2"/>
        <Element Offset="89" Vartype="Byte" Bytesize="1" OffsetHex="00000059" Description="bRelevantForNetworkReplays" DisplayMethod="unsigned integer" ChildStructStart="4"/>
        <Element Offset="90" Vartype="Byte" Bytesize="1" OffsetHex="0000005A" Description="bCollideWhenPlacing" DisplayMethod="unsigned integer" ChildStructStart="2"/>
        <Element Offset="90" Vartype="Byte" Bytesize="1" OffsetHex="0000005A" Description="bEnableAutoLODGeneration" DisplayMethod="unsigned integer" ChildStructStart="32"/>
        <Element Offset="90" Vartype="Byte" Bytesize="1" OffsetHex="0000005A" Description="bIsEditorOnlyActor" DisplayMethod="unsigned integer" ChildStructStart="64"/>
        <Element Offset="90" Vartype="Byte" Bytesize="1" OffsetHex="0000005A" Description="bActorSeamlessTraveled" DisplayMethod="unsigned integer" ChildStructStart="128"/>
        <Element Offset="90" Vartype="Byte" Bytesize="1" OffsetHex="0000005A" Description="bGenerateOverlapEventsDuringLevelStreaming" DisplayMethod="unsigned integer" ChildStructStart="8"/>
        <Element Offset="90" Vartype="Byte" Bytesize="1" OffsetHex="0000005A" Description="bIgnoresOriginShifting" DisplayMethod="unsigned integer" ChildStructStart="16"/>
        <Element Offset="90" Vartype="Byte" Bytesize="1" OffsetHex="0000005A" Description="bBlockInput" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="90" Vartype="Byte" Bytesize="1" OffsetHex="0000005A" Description="bFindCameraComponentWhenViewTarget" DisplayMethod="unsigned integer" ChildStructStart="4"/>
        <Element Offset="91" Vartype="Byte" Bytesize="1" OffsetHex="0000005B" Description="bReplicates" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="91" Vartype="Byte" Bytesize="1" OffsetHex="0000005B" Description="bAllowReceiveTickEventOnDedicatedServer" DisplayMethod="unsigned integer" ChildStructStart="4"/>
        <Element Offset="91" Vartype="Byte" Bytesize="1" OffsetHex="0000005B" Description="bCanBeInCluster" DisplayMethod="unsigned integer" ChildStructStart="2"/>
        <Element Offset="92" Vartype="Byte" Bytesize="1" OffsetHex="0000005C" Description="bActorEnableCollision" DisplayMethod="unsigned integer" ChildStructStart="4"/>
        <Element Offset="92" Vartype="Byte" Bytesize="1" OffsetHex="0000005C" Description="bActorIsBeingDestroyed" DisplayMethod="unsigned integer" ChildStructStart="8"/>
        <Element Offset="93" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000005D" Description="UpdateOverlapsMethodDuringLevelStreaming" DisplayMethod="unsigned integer"/>
        <Element Offset="94" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000005E" Description="DefaultUpdateOverlapsMethodDuringLevelStreaming" DisplayMethod="unsigned integer"/>
        <Element Offset="95" Vartype="Byte" Bytesize="1" OffsetHex="0000005F" Description="RemoteRole" DisplayMethod="unsigned integer"/>
        <Element Offset="96" Vartype="Float" Bytesize="4" OffsetHex="00000060" Description="ReplicatedMovement.LinearVelocity.X" DisplayMethod="unsigned integer"/>
        <Element Offset="100" Vartype="Float" Bytesize="4" OffsetHex="00000064" Description="ReplicatedMovement.LinearVelocity.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="104" Vartype="Float" Bytesize="4" OffsetHex="00000068" Description="ReplicatedMovement.LinearVelocity.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="108" Vartype="Float" Bytesize="4" OffsetHex="0000006C" Description="ReplicatedMovement.AngularVelocity.X" DisplayMethod="unsigned integer"/>
        <Element Offset="112" Vartype="Float" Bytesize="4" OffsetHex="00000070" Description="ReplicatedMovement.AngularVelocity.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="116" Vartype="Float" Bytesize="4" OffsetHex="00000074" Description="ReplicatedMovement.AngularVelocity.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="120" Vartype="Float" Bytesize="4" OffsetHex="00000078" Description="ReplicatedMovement.Location.X" DisplayMethod="unsigned integer"/>
        <Element Offset="124" Vartype="Float" Bytesize="4" OffsetHex="0000007C" Description="ReplicatedMovement.Location.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="128" Vartype="Float" Bytesize="4" OffsetHex="00000080" Description="ReplicatedMovement.Location.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="132" Vartype="Float" Bytesize="4" OffsetHex="00000084" Description="ReplicatedMovement.Rotation.Pitch" DisplayMethod="unsigned integer"/>
        <Element Offset="136" Vartype="Float" Bytesize="4" OffsetHex="00000088" Description="ReplicatedMovement.Rotation.Yaw" DisplayMethod="unsigned integer"/>
        <Element Offset="140" Vartype="Float" Bytesize="4" OffsetHex="0000008C" Description="ReplicatedMovement.Rotation.Roll" DisplayMethod="unsigned integer"/>
        <Element Offset="144" Vartype="Byte" Bytesize="1" OffsetHex="00000090" Description="ReplicatedMovement.bSimulatedPhysicSleep" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="144" Vartype="Byte" Bytesize="1" OffsetHex="00000090" Description="ReplicatedMovement.bRepPhysics" DisplayMethod="unsigned integer" ChildStructStart="2"/>
        <Element Offset="145" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000091" Description="ReplicatedMovement.LocationQuantizationLevel" DisplayMethod="unsigned integer"/>
        <Element Offset="146" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000092" Description="ReplicatedMovement.VelocityQuantizationLevel" DisplayMethod="unsigned integer"/>
        <Element Offset="147" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000093" Description="ReplicatedMovement.RotationQuantizationLevel" DisplayMethod="unsigned integer"/>
        <Element Offset="148" Vartype="Float" Bytesize="4" OffsetHex="00000094" Description="InitialLifeSpan" DisplayMethod="unsigned integer"/>
        <Element Offset="152" Vartype="Float" Bytesize="4" OffsetHex="00000098" Description="CustomTimeDilation" DisplayMethod="unsigned integer"/>
        <Element Offset="156" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000009C" DisplayMethod="unsigned integer"/>
        <Element Offset="160" Vartype="Pointer" Bytesize="8" OffsetHex="000000A0" Description="AttachmentReplication.AttachParent" DisplayMethod="unsigned integer"/>
        <Element Offset="168" Vartype="Float" Bytesize="4" OffsetHex="000000A8" Description="AttachmentReplication.LocationOffset.X" DisplayMethod="unsigned integer"/>
        <Element Offset="172" Vartype="Float" Bytesize="4" OffsetHex="000000AC" Description="AttachmentReplication.LocationOffset.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="176" Vartype="Float" Bytesize="4" OffsetHex="000000B0" Description="AttachmentReplication.LocationOffset.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="180" Vartype="Float" Bytesize="4" OffsetHex="000000B4" Description="AttachmentReplication.RelativeScale3D.X" DisplayMethod="unsigned integer"/>
        <Element Offset="184" Vartype="Float" Bytesize="4" OffsetHex="000000B8" Description="AttachmentReplication.RelativeScale3D.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="188" Vartype="Float" Bytesize="4" OffsetHex="000000BC" Description="AttachmentReplication.RelativeScale3D.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="192" Vartype="Float" Bytesize="4" OffsetHex="000000C0" Description="AttachmentReplication.RotationOffset.Pitch" DisplayMethod="unsigned integer"/>
        <Element Offset="196" Vartype="Float" Bytesize="4" OffsetHex="000000C4" Description="AttachmentReplication.RotationOffset.Yaw" DisplayMethod="unsigned integer"/>
        <Element Offset="200" Vartype="Float" Bytesize="4" OffsetHex="000000C8" Description="AttachmentReplication.RotationOffset.Roll" DisplayMethod="unsigned integer"/>
        <Element Offset="204" Vartype="8 Bytes" Bytesize="8" OffsetHex="000000CC" Description="AttachmentReplication.AttachSocket" DisplayMethod="unsigned integer"/>
        <Element Offset="216" Vartype="Pointer" Bytesize="8" OffsetHex="000000D8" Description="AttachmentReplication.AttachComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="224" Vartype="Pointer" Bytesize="8" OffsetHex="000000E0" Description="Owner" DisplayMethod="unsigned integer"/>
        <Element Offset="232" Vartype="8 Bytes" Bytesize="8" OffsetHex="000000E8" Description="NetDriverName" DisplayMethod="unsigned integer"/>
        <Element Offset="240" Vartype="Byte" Bytesize="1" OffsetHex="000000F0" Description="Role" DisplayMethod="unsigned integer"/>
        <Element Offset="241" Vartype="Byte" Bytesize="1" OffsetHex="000000F1" Description="NetDormancy" DisplayMethod="unsigned integer"/>
        <Element Offset="242" Vartype="4 Bytes" Bytesize="4" OffsetHex="000000F2" Description="SpawnCollisionHandlingMethod" DisplayMethod="unsigned integer"/>
        <Element Offset="243" Vartype="Byte" Bytesize="1" OffsetHex="000000F3" Description="AutoReceiveInput" DisplayMethod="unsigned integer"/>
        <Element Offset="244" Vartype="4 Bytes" Bytesize="4" OffsetHex="000000F4" Description="InputPriority" DisplayMethod="unsigned integer"/>
        <Element Offset="248" Vartype="Pointer" Bytesize="8" OffsetHex="000000F8" Description="InputComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="256" Vartype="Float" Bytesize="4" OffsetHex="00000100" Description="NetCullDistanceSquared" DisplayMethod="unsigned integer"/>
        <Element Offset="260" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000104" Description="NetTag" DisplayMethod="unsigned integer"/>
        <Element Offset="264" Vartype="Float" Bytesize="4" OffsetHex="00000108" Description="NetUpdateFrequency" DisplayMethod="unsigned integer"/>
        <Element Offset="268" Vartype="Float" Bytesize="4" OffsetHex="0000010C" Description="MinNetUpdateFrequency" DisplayMethod="unsigned integer"/>
        <Element Offset="272" Vartype="Float" Bytesize="4" OffsetHex="00000110" Description="NetPriority" DisplayMethod="unsigned integer"/>
        <Element Offset="276" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000114" DisplayMethod="unsigned integer"/>
        <Element Offset="280" Vartype="Pointer" Bytesize="8" OffsetHex="00000118" Description="Instigator" DisplayMethod="unsigned integer"/>
        <Element Offset="288" Vartype="Pointer" Bytesize="8" OffsetHex="00000120" Description="Children" DisplayMethod="unsigned integer">
          <Structure Name="Children[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="Pointer" Bytesize="8" OffsetHex="00000000" Description="[0] Children" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="Pointer" Bytesize="8" OffsetHex="00000008" Description="[1] Children" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="Pointer" Bytesize="8" OffsetHex="00000010" Description="[2] Children" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="Pointer" Bytesize="8" OffsetHex="00000018" Description="[3] Children" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="Pointer" Bytesize="8" OffsetHex="00000020" Description="[4] Children" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="Pointer" Bytesize="8" OffsetHex="00000028" Description="[5] Children" DisplayMethod="unsigned integer"/>
              <Element Offset="48" Vartype="Pointer" Bytesize="8" OffsetHex="00000030" Description="[6] Children" DisplayMethod="unsigned integer"/>
              <Element Offset="56" Vartype="Pointer" Bytesize="8" OffsetHex="00000038" Description="[7] Children" DisplayMethod="unsigned integer"/>
              <Element Offset="64" Vartype="Pointer" Bytesize="8" OffsetHex="00000040" Description="[8] Children" DisplayMethod="unsigned integer"/>
              <Element Offset="72" Vartype="Pointer" Bytesize="8" OffsetHex="00000048" Description="[9] Children" DisplayMethod="unsigned integer"/>
              <Element Offset="80" Vartype="Pointer" Bytesize="8" OffsetHex="00000050" Description="[10] Children" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="296" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000128" Description="Children_size" DisplayMethod="unsigned integer"/>
        <Element Offset="300" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000012C" Description="Children_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="304" Vartype="Pointer" Bytesize="8" OffsetHex="00000130" Description="RootComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="312" Vartype="Pointer" Bytesize="8" OffsetHex="00000138" Description="ControllingMatineeActors" DisplayMethod="unsigned integer">
          <Structure Name="ControllingMatineeActors[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="Pointer" Bytesize="8" OffsetHex="00000000" Description="[0] ControllingMatineeActors" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="Pointer" Bytesize="8" OffsetHex="00000008" Description="[1] ControllingMatineeActors" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="Pointer" Bytesize="8" OffsetHex="00000010" Description="[2] ControllingMatineeActors" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="Pointer" Bytesize="8" OffsetHex="00000018" Description="[3] ControllingMatineeActors" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="Pointer" Bytesize="8" OffsetHex="00000020" Description="[4] ControllingMatineeActors" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="Pointer" Bytesize="8" OffsetHex="00000028" Description="[5] ControllingMatineeActors" DisplayMethod="unsigned integer"/>
              <Element Offset="48" Vartype="Pointer" Bytesize="8" OffsetHex="00000030" Description="[6] ControllingMatineeActors" DisplayMethod="unsigned integer"/>
              <Element Offset="56" Vartype="Pointer" Bytesize="8" OffsetHex="00000038" Description="[7] ControllingMatineeActors" DisplayMethod="unsigned integer"/>
              <Element Offset="64" Vartype="Pointer" Bytesize="8" OffsetHex="00000040" Description="[8] ControllingMatineeActors" DisplayMethod="unsigned integer"/>
              <Element Offset="72" Vartype="Pointer" Bytesize="8" OffsetHex="00000048" Description="[9] ControllingMatineeActors" DisplayMethod="unsigned integer"/>
              <Element Offset="80" Vartype="Pointer" Bytesize="8" OffsetHex="00000050" Description="[10] ControllingMatineeActors" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="320" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000140" Description="ControllingMatineeActors_size" DisplayMethod="unsigned integer"/>
        <Element Offset="324" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000144" Description="ControllingMatineeActors_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="328" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000148" DisplayMethod="unsigned integer"/>
        <Element Offset="336" Vartype="Pointer" Bytesize="8" OffsetHex="00000150" Description="Layers" DisplayMethod="unsigned integer">
          <Structure Name="Layers[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000000" Description="[0] Layers" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000008" Description="[1] Layers" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000010" Description="[2] Layers" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000018" Description="[3] Layers" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000020" Description="[4] Layers" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000028" Description="[5] Layers" DisplayMethod="unsigned integer"/>
              <Element Offset="48" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000030" Description="[6] Layers" DisplayMethod="unsigned integer"/>
              <Element Offset="56" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000038" Description="[7] Layers" DisplayMethod="unsigned integer"/>
              <Element Offset="64" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000040" Description="[8] Layers" DisplayMethod="unsigned integer"/>
              <Element Offset="72" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000048" Description="[9] Layers" DisplayMethod="unsigned integer"/>
              <Element Offset="80" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000050" Description="[10] Layers" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="344" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000158" Description="Layers_size" DisplayMethod="unsigned integer"/>
        <Element Offset="348" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000015C" Description="Layers_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="352" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000160" Description="ParentComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="356" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000164" DisplayMethod="unsigned integer"/>
        <Element Offset="368" Vartype="Pointer" Bytesize="8" OffsetHex="00000170" Description="Tags" DisplayMethod="unsigned integer">
          <Structure Name="Tags[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000000" Description="[0] Tags" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000008" Description="[1] Tags" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000010" Description="[2] Tags" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000018" Description="[3] Tags" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000020" Description="[4] Tags" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000028" Description="[5] Tags" DisplayMethod="unsigned integer"/>
              <Element Offset="48" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000030" Description="[6] Tags" DisplayMethod="unsigned integer"/>
              <Element Offset="56" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000038" Description="[7] Tags" DisplayMethod="unsigned integer"/>
              <Element Offset="64" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000040" Description="[8] Tags" DisplayMethod="unsigned integer"/>
              <Element Offset="72" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000048" Description="[9] Tags" DisplayMethod="unsigned integer"/>
              <Element Offset="80" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000050" Description="[10] Tags" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="376" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000178" Description="Tags_size" DisplayMethod="unsigned integer"/>
        <Element Offset="380" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000017C" Description="Tags_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="384" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000180" Description="OnTakeAnyDamage" DisplayMethod="unsigned integer"/>
        <Element Offset="385" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000181" Description="OnTakePointDamage" DisplayMethod="unsigned integer"/>
        <Element Offset="386" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000182" Description="OnTakeRadialDamage" DisplayMethod="unsigned integer"/>
        <Element Offset="387" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000183" Description="OnActorBeginOverlap" DisplayMethod="unsigned integer"/>
        <Element Offset="388" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000184" Description="OnActorEndOverlap" DisplayMethod="unsigned integer"/>
        <Element Offset="389" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000185" Description="OnBeginCursorOver" DisplayMethod="unsigned integer"/>
        <Element Offset="390" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000186" Description="OnEndCursorOver" DisplayMethod="unsigned integer"/>
        <Element Offset="391" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000187" Description="OnClicked" DisplayMethod="unsigned integer"/>
        <Element Offset="392" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000188" Description="OnReleased" DisplayMethod="unsigned integer"/>
        <Element Offset="393" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000189" Description="OnInputTouchBegin" DisplayMethod="unsigned integer"/>
        <Element Offset="394" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000018A" Description="OnInputTouchEnd" DisplayMethod="unsigned integer"/>
        <Element Offset="395" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000018B" Description="OnInputTouchEnter" DisplayMethod="unsigned integer"/>
        <Element Offset="396" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000018C" Description="OnInputTouchLeave" DisplayMethod="unsigned integer"/>
        <Element Offset="397" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000018D" Description="OnActorHit" DisplayMethod="unsigned integer"/>
        <Element Offset="398" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000018E" Description="OnDestroyed" DisplayMethod="unsigned integer"/>
        <Element Offset="399" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000018F" Description="OnEndPlay" DisplayMethod="unsigned integer"/>
        <Element Offset="404" Vartype="4 Bytes" Bytesize="4" RLECount="23" OffsetHex="00000194" DisplayMethod="unsigned integer"/>
        <Element Offset="496" Vartype="Pointer" Bytesize="8" OffsetHex="000001F0" Description="InstanceComponents" DisplayMethod="unsigned integer">
          <Structure Name="InstanceComponents[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="Pointer" Bytesize="8" OffsetHex="00000000" Description="[0] InstanceComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="Pointer" Bytesize="8" OffsetHex="00000008" Description="[1] InstanceComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="Pointer" Bytesize="8" OffsetHex="00000010" Description="[2] InstanceComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="Pointer" Bytesize="8" OffsetHex="00000018" Description="[3] InstanceComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="Pointer" Bytesize="8" OffsetHex="00000020" Description="[4] InstanceComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="Pointer" Bytesize="8" OffsetHex="00000028" Description="[5] InstanceComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="48" Vartype="Pointer" Bytesize="8" OffsetHex="00000030" Description="[6] InstanceComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="56" Vartype="Pointer" Bytesize="8" OffsetHex="00000038" Description="[7] InstanceComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="64" Vartype="Pointer" Bytesize="8" OffsetHex="00000040" Description="[8] InstanceComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="72" Vartype="Pointer" Bytesize="8" OffsetHex="00000048" Description="[9] InstanceComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="80" Vartype="Pointer" Bytesize="8" OffsetHex="00000050" Description="[10] InstanceComponents" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="504" Vartype="4 Bytes" Bytesize="4" OffsetHex="000001F8" Description="InstanceComponents_size" DisplayMethod="unsigned integer"/>
        <Element Offset="508" Vartype="4 Bytes" Bytesize="4" OffsetHex="000001FC" Description="InstanceComponents_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="512" Vartype="Pointer" Bytesize="8" OffsetHex="00000200" Description="BlueprintCreatedComponents" DisplayMethod="unsigned integer">
          <Structure Name="BlueprintCreatedComponents[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="Pointer" Bytesize="8" OffsetHex="00000000" Description="[0] BlueprintCreatedComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="Pointer" Bytesize="8" OffsetHex="00000008" Description="[1] BlueprintCreatedComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="Pointer" Bytesize="8" OffsetHex="00000010" Description="[2] BlueprintCreatedComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="Pointer" Bytesize="8" OffsetHex="00000018" Description="[3] BlueprintCreatedComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="Pointer" Bytesize="8" OffsetHex="00000020" Description="[4] BlueprintCreatedComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="Pointer" Bytesize="8" OffsetHex="00000028" Description="[5] BlueprintCreatedComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="48" Vartype="Pointer" Bytesize="8" OffsetHex="00000030" Description="[6] BlueprintCreatedComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="56" Vartype="Pointer" Bytesize="8" OffsetHex="00000038" Description="[7] BlueprintCreatedComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="64" Vartype="Pointer" Bytesize="8" OffsetHex="00000040" Description="[8] BlueprintCreatedComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="72" Vartype="Pointer" Bytesize="8" OffsetHex="00000048" Description="[9] BlueprintCreatedComponents" DisplayMethod="unsigned integer"/>
              <Element Offset="80" Vartype="Pointer" Bytesize="8" OffsetHex="00000050" Description="[10] BlueprintCreatedComponents" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="520" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000208" Description="BlueprintCreatedComponents_size" DisplayMethod="unsigned integer"/>
        <Element Offset="524" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000020C" Description="BlueprintCreatedComponents_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="528" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000210" DisplayMethod="unsigned integer"/>
        <Element Offset="552" Vartype="Byte" Bytesize="1" OffsetHex="00000228" Description="bUseControllerRotationYaw" DisplayMethod="unsigned integer" ChildStructStart="2"/>
        <Element Offset="552" Vartype="Byte" Bytesize="1" OffsetHex="00000228" Description="bUseControllerRotationPitch" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="552" Vartype="Byte" Bytesize="1" OffsetHex="00000228" Description="bUseControllerRotationRoll" DisplayMethod="unsigned integer" ChildStructStart="4"/>
        <Element Offset="552" Vartype="Byte" Bytesize="1" OffsetHex="00000228" Description="bCanAffectNavigationGeneration" DisplayMethod="unsigned integer" ChildStructStart="8"/>
        <Element Offset="556" Vartype="Float" Bytesize="4" OffsetHex="0000022C" Description="BaseEyeHeight" DisplayMethod="unsigned integer"/>
        <Element Offset="560" Vartype="Byte" Bytesize="1" OffsetHex="00000230" Description="AutoPossessPlayer" DisplayMethod="unsigned integer"/>
        <Element Offset="561" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000231" Description="AutoPossessAI" DisplayMethod="unsigned integer"/>
        <Element Offset="562" Vartype="Byte" Bytesize="1" OffsetHex="00000232" Description="RemoteViewPitch" DisplayMethod="unsigned integer"/>
        <Element Offset="568" Vartype="Pointer" Bytesize="8" OffsetHex="00000238" Description="AIControllerClass" DisplayMethod="unsigned integer"/>
        <Element Offset="576" Vartype="Pointer" Bytesize="8" OffsetHex="00000240" Description="PlayerState" DisplayMethod="unsigned integer"/>
        <Element Offset="584" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000248" DisplayMethod="unsigned integer"/>
        <Element Offset="592" Vartype="Pointer" Bytesize="8" OffsetHex="00000250" Description="LastHitBy" DisplayMethod="unsigned integer"/>
        <Element Offset="600" Vartype="Pointer" Bytesize="8" OffsetHex="00000258" Description="Controller" DisplayMethod="unsigned integer"/>
        <Element Offset="612" Vartype="Float" Bytesize="4" OffsetHex="00000264" Description="ControlInputVector.X" DisplayMethod="unsigned integer"/>
        <Element Offset="616" Vartype="Float" Bytesize="4" OffsetHex="00000268" Description="ControlInputVector.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="620" Vartype="Float" Bytesize="4" OffsetHex="0000026C" Description="ControlInputVector.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="624" Vartype="Float" Bytesize="4" OffsetHex="00000270" Description="LastControlInputVector.X" DisplayMethod="unsigned integer"/>
        <Element Offset="628" Vartype="Float" Bytesize="4" OffsetHex="00000274" Description="LastControlInputVector.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="632" Vartype="Float" Bytesize="4" OffsetHex="00000278" Description="LastControlInputVector.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="636" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000027C" DisplayMethod="unsigned integer"/>
        <Element Offset="640" Vartype="Pointer" Bytesize="8" OffsetHex="00000280" Description="Mesh" DisplayMethod="unsigned integer"/>
        <Element Offset="648" Vartype="Pointer" Bytesize="8" OffsetHex="00000288" Description="CharacterMovement" DisplayMethod="unsigned integer"/>
        <Element Offset="656" Vartype="Pointer" Bytesize="8" OffsetHex="00000290" Description="CapsuleComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="664" Vartype="Pointer" Bytesize="8" OffsetHex="00000298" Description="BasedMovement.MovementBase" DisplayMethod="unsigned integer"/>
        <Element Offset="672" Vartype="8 Bytes" Bytesize="8" OffsetHex="000002A0" Description="BasedMovement.BoneName" DisplayMethod="unsigned integer"/>
        <Element Offset="680" Vartype="Float" Bytesize="4" OffsetHex="000002A8" Description="BasedMovement.Location.X" DisplayMethod="unsigned integer"/>
        <Element Offset="684" Vartype="Float" Bytesize="4" OffsetHex="000002AC" Description="BasedMovement.Location.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="688" Vartype="Float" Bytesize="4" OffsetHex="000002B0" Description="BasedMovement.Location.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="692" Vartype="Float" Bytesize="4" OffsetHex="000002B4" Description="BasedMovement.Rotation.Pitch" DisplayMethod="unsigned integer"/>
        <Element Offset="696" Vartype="Float" Bytesize="4" OffsetHex="000002B8" Description="BasedMovement.Rotation.Yaw" DisplayMethod="unsigned integer"/>
        <Element Offset="700" Vartype="Float" Bytesize="4" OffsetHex="000002BC" Description="BasedMovement.Rotation.Roll" DisplayMethod="unsigned integer"/>
        <Element Offset="704" Vartype="Byte" Bytesize="1" OffsetHex="000002C0" Description="BasedMovement.bServerHasBaseComponent" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="705" Vartype="Byte" Bytesize="1" OffsetHex="000002C1" Description="BasedMovement.bRelativeRotation" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="706" Vartype="Byte" Bytesize="1" OffsetHex="000002C2" Description="BasedMovement.bServerHasVelocity" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="712" Vartype="Pointer" Bytesize="8" OffsetHex="000002C8" Description="ReplicatedBasedMovement.MovementBase" DisplayMethod="unsigned integer"/>
        <Element Offset="720" Vartype="8 Bytes" Bytesize="8" OffsetHex="000002D0" Description="ReplicatedBasedMovement.BoneName" DisplayMethod="unsigned integer"/>
        <Element Offset="728" Vartype="Float" Bytesize="4" OffsetHex="000002D8" Description="ReplicatedBasedMovement.Location.X" DisplayMethod="unsigned integer"/>
        <Element Offset="732" Vartype="Float" Bytesize="4" OffsetHex="000002DC" Description="ReplicatedBasedMovement.Location.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="736" Vartype="Float" Bytesize="4" OffsetHex="000002E0" Description="ReplicatedBasedMovement.Location.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="740" Vartype="Float" Bytesize="4" OffsetHex="000002E4" Description="ReplicatedBasedMovement.Rotation.Pitch" DisplayMethod="unsigned integer"/>
        <Element Offset="744" Vartype="Float" Bytesize="4" OffsetHex="000002E8" Description="ReplicatedBasedMovement.Rotation.Yaw" DisplayMethod="unsigned integer"/>
        <Element Offset="748" Vartype="Float" Bytesize="4" OffsetHex="000002EC" Description="ReplicatedBasedMovement.Rotation.Roll" DisplayMethod="unsigned integer"/>
        <Element Offset="752" Vartype="Byte" Bytesize="1" OffsetHex="000002F0" Description="ReplicatedBasedMovement.bServerHasBaseComponent" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="753" Vartype="Byte" Bytesize="1" OffsetHex="000002F1" Description="ReplicatedBasedMovement.bRelativeRotation" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="754" Vartype="Byte" Bytesize="1" OffsetHex="000002F2" Description="ReplicatedBasedMovement.bServerHasVelocity" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="760" Vartype="Float" Bytesize="4" OffsetHex="000002F8" Description="AnimRootMotionTranslationScale" DisplayMethod="unsigned integer"/>
        <Element Offset="764" Vartype="Float" Bytesize="4" OffsetHex="000002FC" Description="BaseTranslationOffset.X" DisplayMethod="unsigned integer"/>
        <Element Offset="768" Vartype="Float" Bytesize="4" OffsetHex="00000300" Description="BaseTranslationOffset.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="772" Vartype="Float" Bytesize="4" OffsetHex="00000304" Description="BaseTranslationOffset.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="776" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000308" DisplayMethod="unsigned integer"/>
        <Element Offset="784" Vartype="Float" Bytesize="4" OffsetHex="00000310" Description="BaseRotationOffset.X" DisplayMethod="unsigned integer"/>
        <Element Offset="788" Vartype="Float" Bytesize="4" OffsetHex="00000314" Description="BaseRotationOffset.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="792" Vartype="Float" Bytesize="4" OffsetHex="00000318" Description="BaseRotationOffset.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="796" Vartype="Float" Bytesize="4" OffsetHex="0000031C" Description="BaseRotationOffset.W" DisplayMethod="unsigned integer"/>
        <Element Offset="800" Vartype="Float" Bytesize="4" OffsetHex="00000320" Description="ReplicatedServerLastTransformUpdateTimeStamp" DisplayMethod="unsigned integer"/>
        <Element Offset="804" Vartype="Float" Bytesize="4" OffsetHex="00000324" Description="ReplayLastTransformUpdateTimeStamp" DisplayMethod="unsigned integer"/>
        <Element Offset="808" Vartype="Byte" Bytesize="1" OffsetHex="00000328" Description="ReplicatedMovementMode" DisplayMethod="unsigned integer"/>
        <Element Offset="809" Vartype="Byte" Bytesize="1" OffsetHex="00000329" Description="bInBaseReplication" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="812" Vartype="Float" Bytesize="4" OffsetHex="0000032C" Description="CrouchedEyeHeight" DisplayMethod="unsigned integer"/>
        <Element Offset="816" Vartype="Byte" Bytesize="1" OffsetHex="00000330" Description="bIsCrouched" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="816" Vartype="Byte" Bytesize="1" OffsetHex="00000330" Description="bClientUpdating" DisplayMethod="unsigned integer" ChildStructStart="8"/>
        <Element Offset="816" Vartype="Byte" Bytesize="1" OffsetHex="00000330" Description="bPressedJump" DisplayMethod="unsigned integer" ChildStructStart="4"/>
        <Element Offset="816" Vartype="Byte" Bytesize="1" OffsetHex="00000330" Description="bProxyIsJumpForceApplied" DisplayMethod="unsigned integer" ChildStructStart="2"/>
        <Element Offset="816" Vartype="Byte" Bytesize="1" OffsetHex="00000330" Description="bClientWasFalling" DisplayMethod="unsigned integer" ChildStructStart="16"/>
        <Element Offset="816" Vartype="Byte" Bytesize="1" OffsetHex="00000330" Description="bClientResimulateRootMotion" DisplayMethod="unsigned integer" ChildStructStart="32"/>
        <Element Offset="816" Vartype="Byte" Bytesize="1" OffsetHex="00000330" Description="bClientResimulateRootMotionSources" DisplayMethod="unsigned integer" ChildStructStart="64"/>
        <Element Offset="816" Vartype="Byte" Bytesize="1" OffsetHex="00000330" Description="bSimGravityDisabled" DisplayMethod="unsigned integer" ChildStructStart="128"/>
        <Element Offset="817" Vartype="Byte" Bytesize="1" OffsetHex="00000331" Description="bClientCheckEncroachmentOnNetUpdate" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="817" Vartype="Byte" Bytesize="1" OffsetHex="00000331" Description="bWasJumping" DisplayMethod="unsigned integer" ChildStructStart="4"/>
        <Element Offset="817" Vartype="Byte" Bytesize="1" OffsetHex="00000331" Description="bServerMoveIgnoreRootMotion" DisplayMethod="unsigned integer" ChildStructStart="2"/>
        <Element Offset="820" Vartype="Float" Bytesize="4" OffsetHex="00000334" Description="JumpKeyHoldTime" DisplayMethod="unsigned integer"/>
        <Element Offset="824" Vartype="Float" Bytesize="4" OffsetHex="00000338" Description="JumpForceTimeRemaining" DisplayMethod="unsigned integer"/>
        <Element Offset="828" Vartype="Float" Bytesize="4" OffsetHex="0000033C" Description="ProxyJumpForceStartedTime" DisplayMethod="unsigned integer"/>
        <Element Offset="832" Vartype="Float" Bytesize="4" OffsetHex="00000340" Description="JumpMaxHoldTime" DisplayMethod="unsigned integer"/>
        <Element Offset="836" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000344" Description="JumpMaxCount" DisplayMethod="unsigned integer"/>
        <Element Offset="840" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000348" Description="JumpCurrentCount" DisplayMethod="unsigned integer"/>
        <Element Offset="844" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000034C" Description="JumpCurrentCountPreJump" DisplayMethod="unsigned integer"/>
        <Element Offset="848" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000350" DisplayMethod="unsigned integer"/>
        <Element Offset="856" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000358" Description="OnReachedJumpApex" DisplayMethod="unsigned integer"/>
        <Element Offset="860" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="0000035C" DisplayMethod="unsigned integer"/>
        <Element Offset="888" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000378" Description="MovementModeChangedDelegate" DisplayMethod="unsigned integer"/>
        <Element Offset="892" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="0000037C" DisplayMethod="unsigned integer"/>
        <Element Offset="904" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000388" Description="OnCharacterMovementUpdated" DisplayMethod="unsigned integer"/>
        <Element Offset="908" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="0000038C" DisplayMethod="unsigned integer"/>
        <Element Offset="920" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000398" Description="SavedRootMotion" DisplayMethod="unsigned integer"/>
        <Element Offset="924" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="0000039C" DisplayMethod="unsigned integer"/>
        <Element Offset="960" Vartype="Byte" Bytesize="1" OffsetHex="000003C0" Description="SavedRootMotion.bHasOverrideSources" DisplayMethod="unsigned integer" ChildStructStart="2"/>
        <Element Offset="960" Vartype="Byte" Bytesize="1" OffsetHex="000003C0" Description="SavedRootMotion.bHasAdditiveSources" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="960" Vartype="Byte" Bytesize="1" OffsetHex="000003C0" Description="SavedRootMotion.bIsAdditiveVelocityApplied" DisplayMethod="unsigned integer" ChildStructStart="8"/>
        <Element Offset="960" Vartype="Byte" Bytesize="1" OffsetHex="000003C0" Description="SavedRootMotion.bHasOverrideSourcesWithIgnoreZAccumulate" DisplayMethod="unsigned integer" ChildStructStart="4"/>
        <Element Offset="961" Vartype="Byte" Bytesize="1" OffsetHex="000003C1" Description="SavedRootMotion.LastAccumulatedSettings.Flags" DisplayMethod="unsigned integer"/>
        <Element Offset="964" Vartype="Float" Bytesize="4" OffsetHex="000003C4" Description="SavedRootMotion.LastPreAdditiveVelocity.X" DisplayMethod="unsigned integer"/>
        <Element Offset="968" Vartype="Float" Bytesize="4" OffsetHex="000003C8" Description="SavedRootMotion.LastPreAdditiveVelocity.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="972" Vartype="Float" Bytesize="4" OffsetHex="000003CC" Description="SavedRootMotion.LastPreAdditiveVelocity.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="976" Vartype="Byte" Bytesize="1" OffsetHex="000003D0" Description="ClientRootMotionParams.bHasRootMotion" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="980" Vartype="Float" Bytesize="4" OffsetHex="000003D4" Description="ClientRootMotionParams.BlendWeight" DisplayMethod="unsigned integer"/>
        <Element Offset="984" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000003D8" DisplayMethod="unsigned integer"/>
        <Element Offset="992" Vartype="Float" Bytesize="4" OffsetHex="000003E0" Description="ClientRootMotionParams.RootMotionTransform.Rotation.X" DisplayMethod="unsigned integer"/>
        <Element Offset="996" Vartype="Float" Bytesize="4" OffsetHex="000003E4" Description="ClientRootMotionParams.RootMotionTransform.Rotation.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="1000" Vartype="Float" Bytesize="4" OffsetHex="000003E8" Description="ClientRootMotionParams.RootMotionTransform.Rotation.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="1004" Vartype="Float" Bytesize="4" OffsetHex="000003EC" Description="ClientRootMotionParams.RootMotionTransform.Rotation.W" DisplayMethod="unsigned integer"/>
        <Element Offset="1008" Vartype="Float" Bytesize="4" OffsetHex="000003F0" Description="ClientRootMotionParams.RootMotionTransform.Translation.X" DisplayMethod="unsigned integer"/>
        <Element Offset="1012" Vartype="Float" Bytesize="4" OffsetHex="000003F4" Description="ClientRootMotionParams.RootMotionTransform.Translation.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="1016" Vartype="Float" Bytesize="4" OffsetHex="000003F8" Description="ClientRootMotionParams.RootMotionTransform.Translation.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="1020" Vartype="4 Bytes" Bytesize="4" OffsetHex="000003FC" DisplayMethod="unsigned integer"/>
        <Element Offset="1024" Vartype="Float" Bytesize="4" OffsetHex="00000400" Description="ClientRootMotionParams.RootMotionTransform.Scale3D.X" DisplayMethod="unsigned integer"/>
        <Element Offset="1028" Vartype="Float" Bytesize="4" OffsetHex="00000404" Description="ClientRootMotionParams.RootMotionTransform.Scale3D.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="1032" Vartype="Float" Bytesize="4" OffsetHex="00000408" Description="ClientRootMotionParams.RootMotionTransform.Scale3D.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="1036" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000040C" DisplayMethod="unsigned integer"/>
        <Element Offset="1040" Vartype="Pointer" Bytesize="8" OffsetHex="00000410" Description="RootMotionRepMoves" DisplayMethod="unsigned integer">
          <Structure Name="SimulatedRootMotionReplicatedMove[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="Float" Bytesize="4" OffsetHex="00000000" Description="[0] Time" DisplayMethod="unsigned integer"/>
              <Element Offset="4" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000004" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="Byte" Bytesize="1" OffsetHex="00000008" Description="[0] RootMotion.bIsActive" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="12" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000000C" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="Pointer" Bytesize="8" OffsetHex="00000010" Description="[0] RootMotion.AnimMontage" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="Float" Bytesize="4" OffsetHex="00000018" Description="[0] RootMotion.Position" DisplayMethod="unsigned integer"/>
              <Element Offset="28" Vartype="Float" Bytesize="4" OffsetHex="0000001C" Description="[0] RootMotion.Location.X" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="Float" Bytesize="4" OffsetHex="00000020" Description="[0] RootMotion.Location.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="36" Vartype="Float" Bytesize="4" OffsetHex="00000024" Description="[0] RootMotion.Location.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="Float" Bytesize="4" OffsetHex="00000028" Description="[0] RootMotion.Rotation.Pitch" DisplayMethod="unsigned integer"/>
              <Element Offset="44" Vartype="Float" Bytesize="4" OffsetHex="0000002C" Description="[0] RootMotion.Rotation.Yaw" DisplayMethod="unsigned integer"/>
              <Element Offset="48" Vartype="Float" Bytesize="4" OffsetHex="00000030" Description="[0] RootMotion.Rotation.Roll" DisplayMethod="unsigned integer"/>
              <Element Offset="52" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000034" DisplayMethod="unsigned integer"/>
              <Element Offset="56" Vartype="Pointer" Bytesize="8" OffsetHex="00000038" Description="[0] RootMotion.MovementBase" DisplayMethod="unsigned integer"/>
              <Element Offset="64" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000040" Description="[0] RootMotion.MovementBaseBoneName" DisplayMethod="unsigned integer"/>
              <Element Offset="72" Vartype="Byte" Bytesize="1" OffsetHex="00000048" Description="[0] RootMotion.bRelativePosition" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="73" Vartype="Byte" Bytesize="1" OffsetHex="00000049" Description="[0] RootMotion.bRelativeRotation" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="80" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000050" Description="[0] RootMotion.AuthoritativeRootMotion" DisplayMethod="unsigned integer"/>
              <Element Offset="84" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="00000054" DisplayMethod="unsigned integer"/>
              <Element Offset="120" Vartype="Byte" Bytesize="1" OffsetHex="00000078" Description="[0] RootMotion.AuthoritativeRootMotion.bHasAdditiveSources" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="120" Vartype="Byte" Bytesize="1" OffsetHex="00000078" Description="[0] RootMotion.AuthoritativeRootMotion.bHasOverrideSources" DisplayMethod="unsigned integer" ChildStructStart="2"/>
              <Element Offset="120" Vartype="Byte" Bytesize="1" OffsetHex="00000078" Description="[0] RootMotion.AuthoritativeRootMotion.bHasOverrideSourcesWithIgnoreZAccumulate" DisplayMethod="unsigned integer" ChildStructStart="4"/>
              <Element Offset="120" Vartype="Byte" Bytesize="1" OffsetHex="00000078" Description="[0] RootMotion.AuthoritativeRootMotion.bIsAdditiveVelocityApplied" DisplayMethod="unsigned integer" ChildStructStart="8"/>
              <Element Offset="121" Vartype="Byte" Bytesize="1" OffsetHex="00000079" Description="[0] RootMotion.AuthoritativeRootMotion.LastAccumulatedSettings.Flags" DisplayMethod="unsigned integer"/>
              <Element Offset="124" Vartype="Float" Bytesize="4" OffsetHex="0000007C" Description="[0] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="128" Vartype="Float" Bytesize="4" OffsetHex="00000080" Description="[0] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="132" Vartype="Float" Bytesize="4" OffsetHex="00000084" Description="[0] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="136" Vartype="Float" Bytesize="4" OffsetHex="00000088" Description="[0] RootMotion.Acceleration.X" DisplayMethod="unsigned integer"/>
              <Element Offset="140" Vartype="Float" Bytesize="4" OffsetHex="0000008C" Description="[0] RootMotion.Acceleration.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="144" Vartype="Float" Bytesize="4" OffsetHex="00000090" Description="[0] RootMotion.Acceleration.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="148" Vartype="Float" Bytesize="4" OffsetHex="00000094" Description="[0] RootMotion.LinearVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="152" Vartype="Float" Bytesize="4" OffsetHex="00000098" Description="[0] RootMotion.LinearVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="156" Vartype="Float" Bytesize="4" OffsetHex="0000009C" Description="[0] RootMotion.LinearVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="160" Vartype="Float" Bytesize="4" OffsetHex="000000A0" Description="[1] Time" DisplayMethod="unsigned integer"/>
              <Element Offset="164" Vartype="4 Bytes" Bytesize="4" OffsetHex="000000A4" DisplayMethod="unsigned integer"/>
              <Element Offset="168" Vartype="Byte" Bytesize="1" OffsetHex="000000A8" Description="[1] RootMotion.bIsActive" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="172" Vartype="4 Bytes" Bytesize="4" OffsetHex="000000AC" DisplayMethod="unsigned integer"/>
              <Element Offset="176" Vartype="Pointer" Bytesize="8" OffsetHex="000000B0" Description="[1] RootMotion.AnimMontage" DisplayMethod="unsigned integer"/>
              <Element Offset="184" Vartype="Float" Bytesize="4" OffsetHex="000000B8" Description="[1] RootMotion.Position" DisplayMethod="unsigned integer"/>
              <Element Offset="188" Vartype="Float" Bytesize="4" OffsetHex="000000BC" Description="[1] RootMotion.Location.X" DisplayMethod="unsigned integer"/>
              <Element Offset="192" Vartype="Float" Bytesize="4" OffsetHex="000000C0" Description="[1] RootMotion.Location.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="196" Vartype="Float" Bytesize="4" OffsetHex="000000C4" Description="[1] RootMotion.Location.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="200" Vartype="Float" Bytesize="4" OffsetHex="000000C8" Description="[1] RootMotion.Rotation.Pitch" DisplayMethod="unsigned integer"/>
              <Element Offset="204" Vartype="Float" Bytesize="4" OffsetHex="000000CC" Description="[1] RootMotion.Rotation.Yaw" DisplayMethod="unsigned integer"/>
              <Element Offset="208" Vartype="Float" Bytesize="4" OffsetHex="000000D0" Description="[1] RootMotion.Rotation.Roll" DisplayMethod="unsigned integer"/>
              <Element Offset="212" Vartype="4 Bytes" Bytesize="4" OffsetHex="000000D4" DisplayMethod="unsigned integer"/>
              <Element Offset="216" Vartype="Pointer" Bytesize="8" OffsetHex="000000D8" Description="[1] RootMotion.MovementBase" DisplayMethod="unsigned integer"/>
              <Element Offset="224" Vartype="8 Bytes" Bytesize="8" OffsetHex="000000E0" Description="[1] RootMotion.MovementBaseBoneName" DisplayMethod="unsigned integer"/>
              <Element Offset="232" Vartype="Byte" Bytesize="1" OffsetHex="000000E8" Description="[1] RootMotion.bRelativePosition" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="233" Vartype="Byte" Bytesize="1" OffsetHex="000000E9" Description="[1] RootMotion.bRelativeRotation" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="240" Vartype="4 Bytes" Bytesize="4" OffsetHex="000000F0" Description="[1] RootMotion.AuthoritativeRootMotion" DisplayMethod="unsigned integer"/>
              <Element Offset="244" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="000000F4" DisplayMethod="unsigned integer"/>
              <Element Offset="280" Vartype="Byte" Bytesize="1" OffsetHex="00000118" Description="[1] RootMotion.AuthoritativeRootMotion.bHasAdditiveSources" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="280" Vartype="Byte" Bytesize="1" OffsetHex="00000118" Description="[1] RootMotion.AuthoritativeRootMotion.bHasOverrideSources" DisplayMethod="unsigned integer" ChildStructStart="2"/>
              <Element Offset="280" Vartype="Byte" Bytesize="1" OffsetHex="00000118" Description="[1] RootMotion.AuthoritativeRootMotion.bHasOverrideSourcesWithIgnoreZAccumulate" DisplayMethod="unsigned integer" ChildStructStart="4"/>
              <Element Offset="280" Vartype="Byte" Bytesize="1" OffsetHex="00000118" Description="[1] RootMotion.AuthoritativeRootMotion.bIsAdditiveVelocityApplied" DisplayMethod="unsigned integer" ChildStructStart="8"/>
              <Element Offset="281" Vartype="Byte" Bytesize="1" OffsetHex="00000119" Description="[1] RootMotion.AuthoritativeRootMotion.LastAccumulatedSettings.Flags" DisplayMethod="unsigned integer"/>
              <Element Offset="284" Vartype="Float" Bytesize="4" OffsetHex="0000011C" Description="[1] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="288" Vartype="Float" Bytesize="4" OffsetHex="00000120" Description="[1] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="292" Vartype="Float" Bytesize="4" OffsetHex="00000124" Description="[1] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="296" Vartype="Float" Bytesize="4" OffsetHex="00000128" Description="[1] RootMotion.Acceleration.X" DisplayMethod="unsigned integer"/>
              <Element Offset="300" Vartype="Float" Bytesize="4" OffsetHex="0000012C" Description="[1] RootMotion.Acceleration.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="304" Vartype="Float" Bytesize="4" OffsetHex="00000130" Description="[1] RootMotion.Acceleration.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="308" Vartype="Float" Bytesize="4" OffsetHex="00000134" Description="[1] RootMotion.LinearVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="312" Vartype="Float" Bytesize="4" OffsetHex="00000138" Description="[1] RootMotion.LinearVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="316" Vartype="Float" Bytesize="4" OffsetHex="0000013C" Description="[1] RootMotion.LinearVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="320" Vartype="Float" Bytesize="4" OffsetHex="00000140" Description="[2] Time" DisplayMethod="unsigned integer"/>
              <Element Offset="324" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000144" DisplayMethod="unsigned integer"/>
              <Element Offset="328" Vartype="Byte" Bytesize="1" OffsetHex="00000148" Description="[2] RootMotion.bIsActive" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="332" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000014C" DisplayMethod="unsigned integer"/>
              <Element Offset="336" Vartype="Pointer" Bytesize="8" OffsetHex="00000150" Description="[2] RootMotion.AnimMontage" DisplayMethod="unsigned integer"/>
              <Element Offset="344" Vartype="Float" Bytesize="4" OffsetHex="00000158" Description="[2] RootMotion.Position" DisplayMethod="unsigned integer"/>
              <Element Offset="348" Vartype="Float" Bytesize="4" OffsetHex="0000015C" Description="[2] RootMotion.Location.X" DisplayMethod="unsigned integer"/>
              <Element Offset="352" Vartype="Float" Bytesize="4" OffsetHex="00000160" Description="[2] RootMotion.Location.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="356" Vartype="Float" Bytesize="4" OffsetHex="00000164" Description="[2] RootMotion.Location.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="360" Vartype="Float" Bytesize="4" OffsetHex="00000168" Description="[2] RootMotion.Rotation.Pitch" DisplayMethod="unsigned integer"/>
              <Element Offset="364" Vartype="Float" Bytesize="4" OffsetHex="0000016C" Description="[2] RootMotion.Rotation.Yaw" DisplayMethod="unsigned integer"/>
              <Element Offset="368" Vartype="Float" Bytesize="4" OffsetHex="00000170" Description="[2] RootMotion.Rotation.Roll" DisplayMethod="unsigned integer"/>
              <Element Offset="372" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000174" DisplayMethod="unsigned integer"/>
              <Element Offset="376" Vartype="Pointer" Bytesize="8" OffsetHex="00000178" Description="[2] RootMotion.MovementBase" DisplayMethod="unsigned integer"/>
              <Element Offset="384" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000180" Description="[2] RootMotion.MovementBaseBoneName" DisplayMethod="unsigned integer"/>
              <Element Offset="392" Vartype="Byte" Bytesize="1" OffsetHex="00000188" Description="[2] RootMotion.bRelativePosition" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="393" Vartype="Byte" Bytesize="1" OffsetHex="00000189" Description="[2] RootMotion.bRelativeRotation" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="400" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000190" Description="[2] RootMotion.AuthoritativeRootMotion" DisplayMethod="unsigned integer"/>
              <Element Offset="404" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="00000194" DisplayMethod="unsigned integer"/>
              <Element Offset="440" Vartype="Byte" Bytesize="1" OffsetHex="000001B8" Description="[2] RootMotion.AuthoritativeRootMotion.bHasAdditiveSources" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="440" Vartype="Byte" Bytesize="1" OffsetHex="000001B8" Description="[2] RootMotion.AuthoritativeRootMotion.bHasOverrideSources" DisplayMethod="unsigned integer" ChildStructStart="2"/>
              <Element Offset="440" Vartype="Byte" Bytesize="1" OffsetHex="000001B8" Description="[2] RootMotion.AuthoritativeRootMotion.bHasOverrideSourcesWithIgnoreZAccumulate" DisplayMethod="unsigned integer" ChildStructStart="4"/>
              <Element Offset="440" Vartype="Byte" Bytesize="1" OffsetHex="000001B8" Description="[2] RootMotion.AuthoritativeRootMotion.bIsAdditiveVelocityApplied" DisplayMethod="unsigned integer" ChildStructStart="8"/>
              <Element Offset="441" Vartype="Byte" Bytesize="1" OffsetHex="000001B9" Description="[2] RootMotion.AuthoritativeRootMotion.LastAccumulatedSettings.Flags" DisplayMethod="unsigned integer"/>
              <Element Offset="444" Vartype="Float" Bytesize="4" OffsetHex="000001BC" Description="[2] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="448" Vartype="Float" Bytesize="4" OffsetHex="000001C0" Description="[2] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="452" Vartype="Float" Bytesize="4" OffsetHex="000001C4" Description="[2] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="456" Vartype="Float" Bytesize="4" OffsetHex="000001C8" Description="[2] RootMotion.Acceleration.X" DisplayMethod="unsigned integer"/>
              <Element Offset="460" Vartype="Float" Bytesize="4" OffsetHex="000001CC" Description="[2] RootMotion.Acceleration.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="464" Vartype="Float" Bytesize="4" OffsetHex="000001D0" Description="[2] RootMotion.Acceleration.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="468" Vartype="Float" Bytesize="4" OffsetHex="000001D4" Description="[2] RootMotion.LinearVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="472" Vartype="Float" Bytesize="4" OffsetHex="000001D8" Description="[2] RootMotion.LinearVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="476" Vartype="Float" Bytesize="4" OffsetHex="000001DC" Description="[2] RootMotion.LinearVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="480" Vartype="Float" Bytesize="4" OffsetHex="000001E0" Description="[3] Time" DisplayMethod="unsigned integer"/>
              <Element Offset="484" Vartype="4 Bytes" Bytesize="4" OffsetHex="000001E4" DisplayMethod="unsigned integer"/>
              <Element Offset="488" Vartype="Byte" Bytesize="1" OffsetHex="000001E8" Description="[3] RootMotion.bIsActive" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="492" Vartype="4 Bytes" Bytesize="4" OffsetHex="000001EC" DisplayMethod="unsigned integer"/>
              <Element Offset="496" Vartype="Pointer" Bytesize="8" OffsetHex="000001F0" Description="[3] RootMotion.AnimMontage" DisplayMethod="unsigned integer"/>
              <Element Offset="504" Vartype="Float" Bytesize="4" OffsetHex="000001F8" Description="[3] RootMotion.Position" DisplayMethod="unsigned integer"/>
              <Element Offset="508" Vartype="Float" Bytesize="4" OffsetHex="000001FC" Description="[3] RootMotion.Location.X" DisplayMethod="unsigned integer"/>
              <Element Offset="512" Vartype="Float" Bytesize="4" OffsetHex="00000200" Description="[3] RootMotion.Location.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="516" Vartype="Float" Bytesize="4" OffsetHex="00000204" Description="[3] RootMotion.Location.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="520" Vartype="Float" Bytesize="4" OffsetHex="00000208" Description="[3] RootMotion.Rotation.Pitch" DisplayMethod="unsigned integer"/>
              <Element Offset="524" Vartype="Float" Bytesize="4" OffsetHex="0000020C" Description="[3] RootMotion.Rotation.Yaw" DisplayMethod="unsigned integer"/>
              <Element Offset="528" Vartype="Float" Bytesize="4" OffsetHex="00000210" Description="[3] RootMotion.Rotation.Roll" DisplayMethod="unsigned integer"/>
              <Element Offset="532" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000214" DisplayMethod="unsigned integer"/>
              <Element Offset="536" Vartype="Pointer" Bytesize="8" OffsetHex="00000218" Description="[3] RootMotion.MovementBase" DisplayMethod="unsigned integer"/>
              <Element Offset="544" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000220" Description="[3] RootMotion.MovementBaseBoneName" DisplayMethod="unsigned integer"/>
              <Element Offset="552" Vartype="Byte" Bytesize="1" OffsetHex="00000228" Description="[3] RootMotion.bRelativePosition" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="553" Vartype="Byte" Bytesize="1" OffsetHex="00000229" Description="[3] RootMotion.bRelativeRotation" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="560" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000230" Description="[3] RootMotion.AuthoritativeRootMotion" DisplayMethod="unsigned integer"/>
              <Element Offset="564" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="00000234" DisplayMethod="unsigned integer"/>
              <Element Offset="600" Vartype="Byte" Bytesize="1" OffsetHex="00000258" Description="[3] RootMotion.AuthoritativeRootMotion.bHasOverrideSources" DisplayMethod="unsigned integer" ChildStructStart="2"/>
              <Element Offset="600" Vartype="Byte" Bytesize="1" OffsetHex="00000258" Description="[3] RootMotion.AuthoritativeRootMotion.bHasAdditiveSources" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="600" Vartype="Byte" Bytesize="1" OffsetHex="00000258" Description="[3] RootMotion.AuthoritativeRootMotion.bIsAdditiveVelocityApplied" DisplayMethod="unsigned integer" ChildStructStart="8"/>
              <Element Offset="600" Vartype="Byte" Bytesize="1" OffsetHex="00000258" Description="[3] RootMotion.AuthoritativeRootMotion.bHasOverrideSourcesWithIgnoreZAccumulate" DisplayMethod="unsigned integer" ChildStructStart="4"/>
              <Element Offset="601" Vartype="Byte" Bytesize="1" OffsetHex="00000259" Description="[3] RootMotion.AuthoritativeRootMotion.LastAccumulatedSettings.Flags" DisplayMethod="unsigned integer"/>
              <Element Offset="604" Vartype="Float" Bytesize="4" OffsetHex="0000025C" Description="[3] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="608" Vartype="Float" Bytesize="4" OffsetHex="00000260" Description="[3] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="612" Vartype="Float" Bytesize="4" OffsetHex="00000264" Description="[3] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="616" Vartype="Float" Bytesize="4" OffsetHex="00000268" Description="[3] RootMotion.Acceleration.X" DisplayMethod="unsigned integer"/>
              <Element Offset="620" Vartype="Float" Bytesize="4" OffsetHex="0000026C" Description="[3] RootMotion.Acceleration.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="624" Vartype="Float" Bytesize="4" OffsetHex="00000270" Description="[3] RootMotion.Acceleration.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="628" Vartype="Float" Bytesize="4" OffsetHex="00000274" Description="[3] RootMotion.LinearVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="632" Vartype="Float" Bytesize="4" OffsetHex="00000278" Description="[3] RootMotion.LinearVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="636" Vartype="Float" Bytesize="4" OffsetHex="0000027C" Description="[3] RootMotion.LinearVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="640" Vartype="Float" Bytesize="4" OffsetHex="00000280" Description="[4] Time" DisplayMethod="unsigned integer"/>
              <Element Offset="644" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000284" DisplayMethod="unsigned integer"/>
              <Element Offset="648" Vartype="Byte" Bytesize="1" OffsetHex="00000288" Description="[4] RootMotion.bIsActive" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="652" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000028C" DisplayMethod="unsigned integer"/>
              <Element Offset="656" Vartype="Pointer" Bytesize="8" OffsetHex="00000290" Description="[4] RootMotion.AnimMontage" DisplayMethod="unsigned integer"/>
              <Element Offset="664" Vartype="Float" Bytesize="4" OffsetHex="00000298" Description="[4] RootMotion.Position" DisplayMethod="unsigned integer"/>
              <Element Offset="668" Vartype="Float" Bytesize="4" OffsetHex="0000029C" Description="[4] RootMotion.Location.X" DisplayMethod="unsigned integer"/>
              <Element Offset="672" Vartype="Float" Bytesize="4" OffsetHex="000002A0" Description="[4] RootMotion.Location.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="676" Vartype="Float" Bytesize="4" OffsetHex="000002A4" Description="[4] RootMotion.Location.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="680" Vartype="Float" Bytesize="4" OffsetHex="000002A8" Description="[4] RootMotion.Rotation.Pitch" DisplayMethod="unsigned integer"/>
              <Element Offset="684" Vartype="Float" Bytesize="4" OffsetHex="000002AC" Description="[4] RootMotion.Rotation.Yaw" DisplayMethod="unsigned integer"/>
              <Element Offset="688" Vartype="Float" Bytesize="4" OffsetHex="000002B0" Description="[4] RootMotion.Rotation.Roll" DisplayMethod="unsigned integer"/>
              <Element Offset="692" Vartype="4 Bytes" Bytesize="4" OffsetHex="000002B4" DisplayMethod="unsigned integer"/>
              <Element Offset="696" Vartype="Pointer" Bytesize="8" OffsetHex="000002B8" Description="[4] RootMotion.MovementBase" DisplayMethod="unsigned integer"/>
              <Element Offset="704" Vartype="8 Bytes" Bytesize="8" OffsetHex="000002C0" Description="[4] RootMotion.MovementBaseBoneName" DisplayMethod="unsigned integer"/>
              <Element Offset="712" Vartype="Byte" Bytesize="1" OffsetHex="000002C8" Description="[4] RootMotion.bRelativePosition" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="713" Vartype="Byte" Bytesize="1" OffsetHex="000002C9" Description="[4] RootMotion.bRelativeRotation" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="720" Vartype="4 Bytes" Bytesize="4" OffsetHex="000002D0" Description="[4] RootMotion.AuthoritativeRootMotion" DisplayMethod="unsigned integer"/>
              <Element Offset="724" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="000002D4" DisplayMethod="unsigned integer"/>
              <Element Offset="760" Vartype="Byte" Bytesize="1" OffsetHex="000002F8" Description="[4] RootMotion.AuthoritativeRootMotion.bHasOverrideSources" DisplayMethod="unsigned integer" ChildStructStart="2"/>
              <Element Offset="760" Vartype="Byte" Bytesize="1" OffsetHex="000002F8" Description="[4] RootMotion.AuthoritativeRootMotion.bHasOverrideSourcesWithIgnoreZAccumulate" DisplayMethod="unsigned integer" ChildStructStart="4"/>
              <Element Offset="760" Vartype="Byte" Bytesize="1" OffsetHex="000002F8" Description="[4] RootMotion.AuthoritativeRootMotion.bIsAdditiveVelocityApplied" DisplayMethod="unsigned integer" ChildStructStart="8"/>
              <Element Offset="760" Vartype="Byte" Bytesize="1" OffsetHex="000002F8" Description="[4] RootMotion.AuthoritativeRootMotion.bHasAdditiveSources" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="761" Vartype="Byte" Bytesize="1" OffsetHex="000002F9" Description="[4] RootMotion.AuthoritativeRootMotion.LastAccumulatedSettings.Flags" DisplayMethod="unsigned integer"/>
              <Element Offset="764" Vartype="Float" Bytesize="4" OffsetHex="000002FC" Description="[4] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="768" Vartype="Float" Bytesize="4" OffsetHex="00000300" Description="[4] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="772" Vartype="Float" Bytesize="4" OffsetHex="00000304" Description="[4] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="776" Vartype="Float" Bytesize="4" OffsetHex="00000308" Description="[4] RootMotion.Acceleration.X" DisplayMethod="unsigned integer"/>
              <Element Offset="780" Vartype="Float" Bytesize="4" OffsetHex="0000030C" Description="[4] RootMotion.Acceleration.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="784" Vartype="Float" Bytesize="4" OffsetHex="00000310" Description="[4] RootMotion.Acceleration.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="788" Vartype="Float" Bytesize="4" OffsetHex="00000314" Description="[4] RootMotion.LinearVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="792" Vartype="Float" Bytesize="4" OffsetHex="00000318" Description="[4] RootMotion.LinearVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="796" Vartype="Float" Bytesize="4" OffsetHex="0000031C" Description="[4] RootMotion.LinearVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="800" Vartype="Float" Bytesize="4" OffsetHex="00000320" Description="[5] Time" DisplayMethod="unsigned integer"/>
              <Element Offset="804" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000324" DisplayMethod="unsigned integer"/>
              <Element Offset="808" Vartype="Byte" Bytesize="1" OffsetHex="00000328" Description="[5] RootMotion.bIsActive" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="812" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000032C" DisplayMethod="unsigned integer"/>
              <Element Offset="816" Vartype="Pointer" Bytesize="8" OffsetHex="00000330" Description="[5] RootMotion.AnimMontage" DisplayMethod="unsigned integer"/>
              <Element Offset="824" Vartype="Float" Bytesize="4" OffsetHex="00000338" Description="[5] RootMotion.Position" DisplayMethod="unsigned integer"/>
              <Element Offset="828" Vartype="Float" Bytesize="4" OffsetHex="0000033C" Description="[5] RootMotion.Location.X" DisplayMethod="unsigned integer"/>
              <Element Offset="832" Vartype="Float" Bytesize="4" OffsetHex="00000340" Description="[5] RootMotion.Location.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="836" Vartype="Float" Bytesize="4" OffsetHex="00000344" Description="[5] RootMotion.Location.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="840" Vartype="Float" Bytesize="4" OffsetHex="00000348" Description="[5] RootMotion.Rotation.Pitch" DisplayMethod="unsigned integer"/>
              <Element Offset="844" Vartype="Float" Bytesize="4" OffsetHex="0000034C" Description="[5] RootMotion.Rotation.Yaw" DisplayMethod="unsigned integer"/>
              <Element Offset="848" Vartype="Float" Bytesize="4" OffsetHex="00000350" Description="[5] RootMotion.Rotation.Roll" DisplayMethod="unsigned integer"/>
              <Element Offset="852" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000354" DisplayMethod="unsigned integer"/>
              <Element Offset="856" Vartype="Pointer" Bytesize="8" OffsetHex="00000358" Description="[5] RootMotion.MovementBase" DisplayMethod="unsigned integer"/>
              <Element Offset="864" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000360" Description="[5] RootMotion.MovementBaseBoneName" DisplayMethod="unsigned integer"/>
              <Element Offset="872" Vartype="Byte" Bytesize="1" OffsetHex="00000368" Description="[5] RootMotion.bRelativePosition" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="873" Vartype="Byte" Bytesize="1" OffsetHex="00000369" Description="[5] RootMotion.bRelativeRotation" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="880" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000370" Description="[5] RootMotion.AuthoritativeRootMotion" DisplayMethod="unsigned integer"/>
              <Element Offset="884" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="00000374" DisplayMethod="unsigned integer"/>
              <Element Offset="920" Vartype="Byte" Bytesize="1" OffsetHex="00000398" Description="[5] RootMotion.AuthoritativeRootMotion.bHasOverrideSources" DisplayMethod="unsigned integer" ChildStructStart="2"/>
              <Element Offset="920" Vartype="Byte" Bytesize="1" OffsetHex="00000398" Description="[5] RootMotion.AuthoritativeRootMotion.bHasAdditiveSources" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="920" Vartype="Byte" Bytesize="1" OffsetHex="00000398" Description="[5] RootMotion.AuthoritativeRootMotion.bIsAdditiveVelocityApplied" DisplayMethod="unsigned integer" ChildStructStart="8"/>
              <Element Offset="920" Vartype="Byte" Bytesize="1" OffsetHex="00000398" Description="[5] RootMotion.AuthoritativeRootMotion.bHasOverrideSourcesWithIgnoreZAccumulate" DisplayMethod="unsigned integer" ChildStructStart="4"/>
              <Element Offset="921" Vartype="Byte" Bytesize="1" OffsetHex="00000399" Description="[5] RootMotion.AuthoritativeRootMotion.LastAccumulatedSettings.Flags" DisplayMethod="unsigned integer"/>
              <Element Offset="924" Vartype="Float" Bytesize="4" OffsetHex="0000039C" Description="[5] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="928" Vartype="Float" Bytesize="4" OffsetHex="000003A0" Description="[5] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="932" Vartype="Float" Bytesize="4" OffsetHex="000003A4" Description="[5] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="936" Vartype="Float" Bytesize="4" OffsetHex="000003A8" Description="[5] RootMotion.Acceleration.X" DisplayMethod="unsigned integer"/>
              <Element Offset="940" Vartype="Float" Bytesize="4" OffsetHex="000003AC" Description="[5] RootMotion.Acceleration.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="944" Vartype="Float" Bytesize="4" OffsetHex="000003B0" Description="[5] RootMotion.Acceleration.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="948" Vartype="Float" Bytesize="4" OffsetHex="000003B4" Description="[5] RootMotion.LinearVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="952" Vartype="Float" Bytesize="4" OffsetHex="000003B8" Description="[5] RootMotion.LinearVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="956" Vartype="Float" Bytesize="4" OffsetHex="000003BC" Description="[5] RootMotion.LinearVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="960" Vartype="Float" Bytesize="4" OffsetHex="000003C0" Description="[6] Time" DisplayMethod="unsigned integer"/>
              <Element Offset="964" Vartype="4 Bytes" Bytesize="4" OffsetHex="000003C4" DisplayMethod="unsigned integer"/>
              <Element Offset="968" Vartype="Byte" Bytesize="1" OffsetHex="000003C8" Description="[6] RootMotion.bIsActive" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="972" Vartype="4 Bytes" Bytesize="4" OffsetHex="000003CC" DisplayMethod="unsigned integer"/>
              <Element Offset="976" Vartype="Pointer" Bytesize="8" OffsetHex="000003D0" Description="[6] RootMotion.AnimMontage" DisplayMethod="unsigned integer"/>
              <Element Offset="984" Vartype="Float" Bytesize="4" OffsetHex="000003D8" Description="[6] RootMotion.Position" DisplayMethod="unsigned integer"/>
              <Element Offset="988" Vartype="Float" Bytesize="4" OffsetHex="000003DC" Description="[6] RootMotion.Location.X" DisplayMethod="unsigned integer"/>
              <Element Offset="992" Vartype="Float" Bytesize="4" OffsetHex="000003E0" Description="[6] RootMotion.Location.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="996" Vartype="Float" Bytesize="4" OffsetHex="000003E4" Description="[6] RootMotion.Location.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1000" Vartype="Float" Bytesize="4" OffsetHex="000003E8" Description="[6] RootMotion.Rotation.Pitch" DisplayMethod="unsigned integer"/>
              <Element Offset="1004" Vartype="Float" Bytesize="4" OffsetHex="000003EC" Description="[6] RootMotion.Rotation.Yaw" DisplayMethod="unsigned integer"/>
              <Element Offset="1008" Vartype="Float" Bytesize="4" OffsetHex="000003F0" Description="[6] RootMotion.Rotation.Roll" DisplayMethod="unsigned integer"/>
              <Element Offset="1012" Vartype="4 Bytes" Bytesize="4" OffsetHex="000003F4" DisplayMethod="unsigned integer"/>
              <Element Offset="1016" Vartype="Pointer" Bytesize="8" OffsetHex="000003F8" Description="[6] RootMotion.MovementBase" DisplayMethod="unsigned integer"/>
              <Element Offset="1024" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000400" Description="[6] RootMotion.MovementBaseBoneName" DisplayMethod="unsigned integer"/>
              <Element Offset="1032" Vartype="Byte" Bytesize="1" OffsetHex="00000408" Description="[6] RootMotion.bRelativePosition" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1033" Vartype="Byte" Bytesize="1" OffsetHex="00000409" Description="[6] RootMotion.bRelativeRotation" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1040" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000410" Description="[6] RootMotion.AuthoritativeRootMotion" DisplayMethod="unsigned integer"/>
              <Element Offset="1044" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="00000414" DisplayMethod="unsigned integer"/>
              <Element Offset="1080" Vartype="Byte" Bytesize="1" OffsetHex="00000438" Description="[6] RootMotion.AuthoritativeRootMotion.bHasOverrideSourcesWithIgnoreZAccumulate" DisplayMethod="unsigned integer" ChildStructStart="4"/>
              <Element Offset="1080" Vartype="Byte" Bytesize="1" OffsetHex="00000438" Description="[6] RootMotion.AuthoritativeRootMotion.bIsAdditiveVelocityApplied" DisplayMethod="unsigned integer" ChildStructStart="8"/>
              <Element Offset="1080" Vartype="Byte" Bytesize="1" OffsetHex="00000438" Description="[6] RootMotion.AuthoritativeRootMotion.bHasOverrideSources" DisplayMethod="unsigned integer" ChildStructStart="2"/>
              <Element Offset="1080" Vartype="Byte" Bytesize="1" OffsetHex="00000438" Description="[6] RootMotion.AuthoritativeRootMotion.bHasAdditiveSources" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1081" Vartype="Byte" Bytesize="1" OffsetHex="00000439" Description="[6] RootMotion.AuthoritativeRootMotion.LastAccumulatedSettings.Flags" DisplayMethod="unsigned integer"/>
              <Element Offset="1084" Vartype="Float" Bytesize="4" OffsetHex="0000043C" Description="[6] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1088" Vartype="Float" Bytesize="4" OffsetHex="00000440" Description="[6] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1092" Vartype="Float" Bytesize="4" OffsetHex="00000444" Description="[6] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1096" Vartype="Float" Bytesize="4" OffsetHex="00000448" Description="[6] RootMotion.Acceleration.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1100" Vartype="Float" Bytesize="4" OffsetHex="0000044C" Description="[6] RootMotion.Acceleration.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1104" Vartype="Float" Bytesize="4" OffsetHex="00000450" Description="[6] RootMotion.Acceleration.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1108" Vartype="Float" Bytesize="4" OffsetHex="00000454" Description="[6] RootMotion.LinearVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1112" Vartype="Float" Bytesize="4" OffsetHex="00000458" Description="[6] RootMotion.LinearVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1116" Vartype="Float" Bytesize="4" OffsetHex="0000045C" Description="[6] RootMotion.LinearVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1120" Vartype="Float" Bytesize="4" OffsetHex="00000460" Description="[7] Time" DisplayMethod="unsigned integer"/>
              <Element Offset="1124" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000464" DisplayMethod="unsigned integer"/>
              <Element Offset="1128" Vartype="Byte" Bytesize="1" OffsetHex="00000468" Description="[7] RootMotion.bIsActive" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1132" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000046C" DisplayMethod="unsigned integer"/>
              <Element Offset="1136" Vartype="Pointer" Bytesize="8" OffsetHex="00000470" Description="[7] RootMotion.AnimMontage" DisplayMethod="unsigned integer"/>
              <Element Offset="1144" Vartype="Float" Bytesize="4" OffsetHex="00000478" Description="[7] RootMotion.Position" DisplayMethod="unsigned integer"/>
              <Element Offset="1148" Vartype="Float" Bytesize="4" OffsetHex="0000047C" Description="[7] RootMotion.Location.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1152" Vartype="Float" Bytesize="4" OffsetHex="00000480" Description="[7] RootMotion.Location.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1156" Vartype="Float" Bytesize="4" OffsetHex="00000484" Description="[7] RootMotion.Location.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1160" Vartype="Float" Bytesize="4" OffsetHex="00000488" Description="[7] RootMotion.Rotation.Pitch" DisplayMethod="unsigned integer"/>
              <Element Offset="1164" Vartype="Float" Bytesize="4" OffsetHex="0000048C" Description="[7] RootMotion.Rotation.Yaw" DisplayMethod="unsigned integer"/>
              <Element Offset="1168" Vartype="Float" Bytesize="4" OffsetHex="00000490" Description="[7] RootMotion.Rotation.Roll" DisplayMethod="unsigned integer"/>
              <Element Offset="1172" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000494" DisplayMethod="unsigned integer"/>
              <Element Offset="1176" Vartype="Pointer" Bytesize="8" OffsetHex="00000498" Description="[7] RootMotion.MovementBase" DisplayMethod="unsigned integer"/>
              <Element Offset="1184" Vartype="8 Bytes" Bytesize="8" OffsetHex="000004A0" Description="[7] RootMotion.MovementBaseBoneName" DisplayMethod="unsigned integer"/>
              <Element Offset="1192" Vartype="Byte" Bytesize="1" OffsetHex="000004A8" Description="[7] RootMotion.bRelativePosition" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1193" Vartype="Byte" Bytesize="1" OffsetHex="000004A9" Description="[7] RootMotion.bRelativeRotation" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1200" Vartype="4 Bytes" Bytesize="4" OffsetHex="000004B0" Description="[7] RootMotion.AuthoritativeRootMotion" DisplayMethod="unsigned integer"/>
              <Element Offset="1204" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="000004B4" DisplayMethod="unsigned integer"/>
              <Element Offset="1240" Vartype="Byte" Bytesize="1" OffsetHex="000004D8" Description="[7] RootMotion.AuthoritativeRootMotion.bHasOverrideSources" DisplayMethod="unsigned integer" ChildStructStart="2"/>
              <Element Offset="1240" Vartype="Byte" Bytesize="1" OffsetHex="000004D8" Description="[7] RootMotion.AuthoritativeRootMotion.bHasOverrideSourcesWithIgnoreZAccumulate" DisplayMethod="unsigned integer" ChildStructStart="4"/>
              <Element Offset="1240" Vartype="Byte" Bytesize="1" OffsetHex="000004D8" Description="[7] RootMotion.AuthoritativeRootMotion.bIsAdditiveVelocityApplied" DisplayMethod="unsigned integer" ChildStructStart="8"/>
              <Element Offset="1240" Vartype="Byte" Bytesize="1" OffsetHex="000004D8" Description="[7] RootMotion.AuthoritativeRootMotion.bHasAdditiveSources" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1241" Vartype="Byte" Bytesize="1" OffsetHex="000004D9" Description="[7] RootMotion.AuthoritativeRootMotion.LastAccumulatedSettings.Flags" DisplayMethod="unsigned integer"/>
              <Element Offset="1244" Vartype="Float" Bytesize="4" OffsetHex="000004DC" Description="[7] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1248" Vartype="Float" Bytesize="4" OffsetHex="000004E0" Description="[7] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1252" Vartype="Float" Bytesize="4" OffsetHex="000004E4" Description="[7] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1256" Vartype="Float" Bytesize="4" OffsetHex="000004E8" Description="[7] RootMotion.Acceleration.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1260" Vartype="Float" Bytesize="4" OffsetHex="000004EC" Description="[7] RootMotion.Acceleration.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1264" Vartype="Float" Bytesize="4" OffsetHex="000004F0" Description="[7] RootMotion.Acceleration.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1268" Vartype="Float" Bytesize="4" OffsetHex="000004F4" Description="[7] RootMotion.LinearVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1272" Vartype="Float" Bytesize="4" OffsetHex="000004F8" Description="[7] RootMotion.LinearVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1276" Vartype="Float" Bytesize="4" OffsetHex="000004FC" Description="[7] RootMotion.LinearVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1280" Vartype="Float" Bytesize="4" OffsetHex="00000500" Description="[8] Time" DisplayMethod="unsigned integer"/>
              <Element Offset="1284" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000504" DisplayMethod="unsigned integer"/>
              <Element Offset="1288" Vartype="Byte" Bytesize="1" OffsetHex="00000508" Description="[8] RootMotion.bIsActive" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1292" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000050C" DisplayMethod="unsigned integer"/>
              <Element Offset="1296" Vartype="Pointer" Bytesize="8" OffsetHex="00000510" Description="[8] RootMotion.AnimMontage" DisplayMethod="unsigned integer"/>
              <Element Offset="1304" Vartype="Float" Bytesize="4" OffsetHex="00000518" Description="[8] RootMotion.Position" DisplayMethod="unsigned integer"/>
              <Element Offset="1308" Vartype="Float" Bytesize="4" OffsetHex="0000051C" Description="[8] RootMotion.Location.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1312" Vartype="Float" Bytesize="4" OffsetHex="00000520" Description="[8] RootMotion.Location.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1316" Vartype="Float" Bytesize="4" OffsetHex="00000524" Description="[8] RootMotion.Location.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1320" Vartype="Float" Bytesize="4" OffsetHex="00000528" Description="[8] RootMotion.Rotation.Pitch" DisplayMethod="unsigned integer"/>
              <Element Offset="1324" Vartype="Float" Bytesize="4" OffsetHex="0000052C" Description="[8] RootMotion.Rotation.Yaw" DisplayMethod="unsigned integer"/>
              <Element Offset="1328" Vartype="Float" Bytesize="4" OffsetHex="00000530" Description="[8] RootMotion.Rotation.Roll" DisplayMethod="unsigned integer"/>
              <Element Offset="1332" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000534" DisplayMethod="unsigned integer"/>
              <Element Offset="1336" Vartype="Pointer" Bytesize="8" OffsetHex="00000538" Description="[8] RootMotion.MovementBase" DisplayMethod="unsigned integer"/>
              <Element Offset="1344" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000540" Description="[8] RootMotion.MovementBaseBoneName" DisplayMethod="unsigned integer"/>
              <Element Offset="1352" Vartype="Byte" Bytesize="1" OffsetHex="00000548" Description="[8] RootMotion.bRelativePosition" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1353" Vartype="Byte" Bytesize="1" OffsetHex="00000549" Description="[8] RootMotion.bRelativeRotation" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1360" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000550" Description="[8] RootMotion.AuthoritativeRootMotion" DisplayMethod="unsigned integer"/>
              <Element Offset="1364" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="00000554" DisplayMethod="unsigned integer"/>
              <Element Offset="1400" Vartype="Byte" Bytesize="1" OffsetHex="00000578" Description="[8] RootMotion.AuthoritativeRootMotion.bIsAdditiveVelocityApplied" DisplayMethod="unsigned integer" ChildStructStart="8"/>
              <Element Offset="1400" Vartype="Byte" Bytesize="1" OffsetHex="00000578" Description="[8] RootMotion.AuthoritativeRootMotion.bHasOverrideSourcesWithIgnoreZAccumulate" DisplayMethod="unsigned integer" ChildStructStart="4"/>
              <Element Offset="1400" Vartype="Byte" Bytesize="1" OffsetHex="00000578" Description="[8] RootMotion.AuthoritativeRootMotion.bHasOverrideSources" DisplayMethod="unsigned integer" ChildStructStart="2"/>
              <Element Offset="1400" Vartype="Byte" Bytesize="1" OffsetHex="00000578" Description="[8] RootMotion.AuthoritativeRootMotion.bHasAdditiveSources" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1401" Vartype="Byte" Bytesize="1" OffsetHex="00000579" Description="[8] RootMotion.AuthoritativeRootMotion.LastAccumulatedSettings.Flags" DisplayMethod="unsigned integer"/>
              <Element Offset="1404" Vartype="Float" Bytesize="4" OffsetHex="0000057C" Description="[8] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1408" Vartype="Float" Bytesize="4" OffsetHex="00000580" Description="[8] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1412" Vartype="Float" Bytesize="4" OffsetHex="00000584" Description="[8] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1416" Vartype="Float" Bytesize="4" OffsetHex="00000588" Description="[8] RootMotion.Acceleration.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1420" Vartype="Float" Bytesize="4" OffsetHex="0000058C" Description="[8] RootMotion.Acceleration.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1424" Vartype="Float" Bytesize="4" OffsetHex="00000590" Description="[8] RootMotion.Acceleration.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1428" Vartype="Float" Bytesize="4" OffsetHex="00000594" Description="[8] RootMotion.LinearVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1432" Vartype="Float" Bytesize="4" OffsetHex="00000598" Description="[8] RootMotion.LinearVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1436" Vartype="Float" Bytesize="4" OffsetHex="0000059C" Description="[8] RootMotion.LinearVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1440" Vartype="Float" Bytesize="4" OffsetHex="000005A0" Description="[9] Time" DisplayMethod="unsigned integer"/>
              <Element Offset="1444" Vartype="4 Bytes" Bytesize="4" OffsetHex="000005A4" DisplayMethod="unsigned integer"/>
              <Element Offset="1448" Vartype="Byte" Bytesize="1" OffsetHex="000005A8" Description="[9] RootMotion.bIsActive" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1452" Vartype="4 Bytes" Bytesize="4" OffsetHex="000005AC" DisplayMethod="unsigned integer"/>
              <Element Offset="1456" Vartype="Pointer" Bytesize="8" OffsetHex="000005B0" Description="[9] RootMotion.AnimMontage" DisplayMethod="unsigned integer"/>
              <Element Offset="1464" Vartype="Float" Bytesize="4" OffsetHex="000005B8" Description="[9] RootMotion.Position" DisplayMethod="unsigned integer"/>
              <Element Offset="1468" Vartype="Float" Bytesize="4" OffsetHex="000005BC" Description="[9] RootMotion.Location.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1472" Vartype="Float" Bytesize="4" OffsetHex="000005C0" Description="[9] RootMotion.Location.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1476" Vartype="Float" Bytesize="4" OffsetHex="000005C4" Description="[9] RootMotion.Location.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1480" Vartype="Float" Bytesize="4" OffsetHex="000005C8" Description="[9] RootMotion.Rotation.Pitch" DisplayMethod="unsigned integer"/>
              <Element Offset="1484" Vartype="Float" Bytesize="4" OffsetHex="000005CC" Description="[9] RootMotion.Rotation.Yaw" DisplayMethod="unsigned integer"/>
              <Element Offset="1488" Vartype="Float" Bytesize="4" OffsetHex="000005D0" Description="[9] RootMotion.Rotation.Roll" DisplayMethod="unsigned integer"/>
              <Element Offset="1492" Vartype="4 Bytes" Bytesize="4" OffsetHex="000005D4" DisplayMethod="unsigned integer"/>
              <Element Offset="1496" Vartype="Pointer" Bytesize="8" OffsetHex="000005D8" Description="[9] RootMotion.MovementBase" DisplayMethod="unsigned integer"/>
              <Element Offset="1504" Vartype="8 Bytes" Bytesize="8" OffsetHex="000005E0" Description="[9] RootMotion.MovementBaseBoneName" DisplayMethod="unsigned integer"/>
              <Element Offset="1512" Vartype="Byte" Bytesize="1" OffsetHex="000005E8" Description="[9] RootMotion.bRelativePosition" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1513" Vartype="Byte" Bytesize="1" OffsetHex="000005E9" Description="[9] RootMotion.bRelativeRotation" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1520" Vartype="4 Bytes" Bytesize="4" OffsetHex="000005F0" Description="[9] RootMotion.AuthoritativeRootMotion" DisplayMethod="unsigned integer"/>
              <Element Offset="1524" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="000005F4" DisplayMethod="unsigned integer"/>
              <Element Offset="1560" Vartype="Byte" Bytesize="1" OffsetHex="00000618" Description="[9] RootMotion.AuthoritativeRootMotion.bHasOverrideSources" DisplayMethod="unsigned integer" ChildStructStart="2"/>
              <Element Offset="1560" Vartype="Byte" Bytesize="1" OffsetHex="00000618" Description="[9] RootMotion.AuthoritativeRootMotion.bHasOverrideSourcesWithIgnoreZAccumulate" DisplayMethod="unsigned integer" ChildStructStart="4"/>
              <Element Offset="1560" Vartype="Byte" Bytesize="1" OffsetHex="00000618" Description="[9] RootMotion.AuthoritativeRootMotion.bIsAdditiveVelocityApplied" DisplayMethod="unsigned integer" ChildStructStart="8"/>
              <Element Offset="1560" Vartype="Byte" Bytesize="1" OffsetHex="00000618" Description="[9] RootMotion.AuthoritativeRootMotion.bHasAdditiveSources" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1561" Vartype="Byte" Bytesize="1" OffsetHex="00000619" Description="[9] RootMotion.AuthoritativeRootMotion.LastAccumulatedSettings.Flags" DisplayMethod="unsigned integer"/>
              <Element Offset="1564" Vartype="Float" Bytesize="4" OffsetHex="0000061C" Description="[9] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1568" Vartype="Float" Bytesize="4" OffsetHex="00000620" Description="[9] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1572" Vartype="Float" Bytesize="4" OffsetHex="00000624" Description="[9] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1576" Vartype="Float" Bytesize="4" OffsetHex="00000628" Description="[9] RootMotion.Acceleration.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1580" Vartype="Float" Bytesize="4" OffsetHex="0000062C" Description="[9] RootMotion.Acceleration.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1584" Vartype="Float" Bytesize="4" OffsetHex="00000630" Description="[9] RootMotion.Acceleration.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1588" Vartype="Float" Bytesize="4" OffsetHex="00000634" Description="[9] RootMotion.LinearVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1592" Vartype="Float" Bytesize="4" OffsetHex="00000638" Description="[9] RootMotion.LinearVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1596" Vartype="Float" Bytesize="4" OffsetHex="0000063C" Description="[9] RootMotion.LinearVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1600" Vartype="Float" Bytesize="4" OffsetHex="00000640" Description="[10] Time" DisplayMethod="unsigned integer"/>
              <Element Offset="1604" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000644" DisplayMethod="unsigned integer"/>
              <Element Offset="1608" Vartype="Byte" Bytesize="1" OffsetHex="00000648" Description="[10] RootMotion.bIsActive" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1612" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000064C" DisplayMethod="unsigned integer"/>
              <Element Offset="1616" Vartype="Pointer" Bytesize="8" OffsetHex="00000650" Description="[10] RootMotion.AnimMontage" DisplayMethod="unsigned integer"/>
              <Element Offset="1624" Vartype="Float" Bytesize="4" OffsetHex="00000658" Description="[10] RootMotion.Position" DisplayMethod="unsigned integer"/>
              <Element Offset="1628" Vartype="Float" Bytesize="4" OffsetHex="0000065C" Description="[10] RootMotion.Location.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1632" Vartype="Float" Bytesize="4" OffsetHex="00000660" Description="[10] RootMotion.Location.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1636" Vartype="Float" Bytesize="4" OffsetHex="00000664" Description="[10] RootMotion.Location.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1640" Vartype="Float" Bytesize="4" OffsetHex="00000668" Description="[10] RootMotion.Rotation.Pitch" DisplayMethod="unsigned integer"/>
              <Element Offset="1644" Vartype="Float" Bytesize="4" OffsetHex="0000066C" Description="[10] RootMotion.Rotation.Yaw" DisplayMethod="unsigned integer"/>
              <Element Offset="1648" Vartype="Float" Bytesize="4" OffsetHex="00000670" Description="[10] RootMotion.Rotation.Roll" DisplayMethod="unsigned integer"/>
              <Element Offset="1652" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000674" DisplayMethod="unsigned integer"/>
              <Element Offset="1656" Vartype="Pointer" Bytesize="8" OffsetHex="00000678" Description="[10] RootMotion.MovementBase" DisplayMethod="unsigned integer"/>
              <Element Offset="1664" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000680" Description="[10] RootMotion.MovementBaseBoneName" DisplayMethod="unsigned integer"/>
              <Element Offset="1672" Vartype="Byte" Bytesize="1" OffsetHex="00000688" Description="[10] RootMotion.bRelativePosition" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1673" Vartype="Byte" Bytesize="1" OffsetHex="00000689" Description="[10] RootMotion.bRelativeRotation" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1680" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000690" Description="[10] RootMotion.AuthoritativeRootMotion" DisplayMethod="unsigned integer"/>
              <Element Offset="1684" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="00000694" DisplayMethod="unsigned integer"/>
              <Element Offset="1720" Vartype="Byte" Bytesize="1" OffsetHex="000006B8" Description="[10] RootMotion.AuthoritativeRootMotion.bIsAdditiveVelocityApplied" DisplayMethod="unsigned integer" ChildStructStart="8"/>
              <Element Offset="1720" Vartype="Byte" Bytesize="1" OffsetHex="000006B8" Description="[10] RootMotion.AuthoritativeRootMotion.bHasOverrideSourcesWithIgnoreZAccumulate" DisplayMethod="unsigned integer" ChildStructStart="4"/>
              <Element Offset="1720" Vartype="Byte" Bytesize="1" OffsetHex="000006B8" Description="[10] RootMotion.AuthoritativeRootMotion.bHasAdditiveSources" DisplayMethod="unsigned integer" ChildStructStart="1"/>
              <Element Offset="1720" Vartype="Byte" Bytesize="1" OffsetHex="000006B8" Description="[10] RootMotion.AuthoritativeRootMotion.bHasOverrideSources" DisplayMethod="unsigned integer" ChildStructStart="2"/>
              <Element Offset="1721" Vartype="Byte" Bytesize="1" OffsetHex="000006B9" Description="[10] RootMotion.AuthoritativeRootMotion.LastAccumulatedSettings.Flags" DisplayMethod="unsigned integer"/>
              <Element Offset="1724" Vartype="Float" Bytesize="4" OffsetHex="000006BC" Description="[10] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1728" Vartype="Float" Bytesize="4" OffsetHex="000006C0" Description="[10] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1732" Vartype="Float" Bytesize="4" OffsetHex="000006C4" Description="[10] RootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1736" Vartype="Float" Bytesize="4" OffsetHex="000006C8" Description="[10] RootMotion.Acceleration.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1740" Vartype="Float" Bytesize="4" OffsetHex="000006CC" Description="[10] RootMotion.Acceleration.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1744" Vartype="Float" Bytesize="4" OffsetHex="000006D0" Description="[10] RootMotion.Acceleration.Z" DisplayMethod="unsigned integer"/>
              <Element Offset="1748" Vartype="Float" Bytesize="4" OffsetHex="000006D4" Description="[10] RootMotion.LinearVelocity.X" DisplayMethod="unsigned integer"/>
              <Element Offset="1752" Vartype="Float" Bytesize="4" OffsetHex="000006D8" Description="[10] RootMotion.LinearVelocity.Y" DisplayMethod="unsigned integer"/>
              <Element Offset="1756" Vartype="Float" Bytesize="4" OffsetHex="000006DC" Description="[10] RootMotion.LinearVelocity.Z" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="1048" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000418" Description="RootMotionRepMoves_size" DisplayMethod="unsigned integer"/>
        <Element Offset="1052" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000041C" Description="RootMotionRepMoves_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="1056" Vartype="Byte" Bytesize="1" OffsetHex="00000420" Description="RepRootMotion.bIsActive" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="1060" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000424" DisplayMethod="unsigned integer"/>
        <Element Offset="1064" Vartype="Pointer" Bytesize="8" OffsetHex="00000428" Description="RepRootMotion.AnimMontage" DisplayMethod="unsigned integer"/>
        <Element Offset="1072" Vartype="Float" Bytesize="4" OffsetHex="00000430" Description="RepRootMotion.Position" DisplayMethod="unsigned integer"/>
        <Element Offset="1076" Vartype="Float" Bytesize="4" OffsetHex="00000434" Description="RepRootMotion.Location.X" DisplayMethod="unsigned integer"/>
        <Element Offset="1080" Vartype="Float" Bytesize="4" OffsetHex="00000438" Description="RepRootMotion.Location.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="1084" Vartype="Float" Bytesize="4" OffsetHex="0000043C" Description="RepRootMotion.Location.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="1088" Vartype="Float" Bytesize="4" OffsetHex="00000440" Description="RepRootMotion.Rotation.Pitch" DisplayMethod="unsigned integer"/>
        <Element Offset="1092" Vartype="Float" Bytesize="4" OffsetHex="00000444" Description="RepRootMotion.Rotation.Yaw" DisplayMethod="unsigned integer"/>
        <Element Offset="1096" Vartype="Float" Bytesize="4" OffsetHex="00000448" Description="RepRootMotion.Rotation.Roll" DisplayMethod="unsigned integer"/>
        <Element Offset="1100" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000044C" DisplayMethod="unsigned integer"/>
        <Element Offset="1104" Vartype="Pointer" Bytesize="8" OffsetHex="00000450" Description="RepRootMotion.MovementBase" DisplayMethod="unsigned integer"/>
        <Element Offset="1112" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000458" Description="RepRootMotion.MovementBaseBoneName" DisplayMethod="unsigned integer"/>
        <Element Offset="1120" Vartype="Byte" Bytesize="1" OffsetHex="00000460" Description="RepRootMotion.bRelativePosition" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="1121" Vartype="Byte" Bytesize="1" OffsetHex="00000461" Description="RepRootMotion.bRelativeRotation" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="1128" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000468" Description="RepRootMotion.AuthoritativeRootMotion" DisplayMethod="unsigned integer"/>
        <Element Offset="1132" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="0000046C" DisplayMethod="unsigned integer"/>
        <Element Offset="1168" Vartype="Byte" Bytesize="1" OffsetHex="00000490" Description="RepRootMotion.AuthoritativeRootMotion.bIsAdditiveVelocityApplied" DisplayMethod="unsigned integer" ChildStructStart="8"/>
        <Element Offset="1168" Vartype="Byte" Bytesize="1" OffsetHex="00000490" Description="RepRootMotion.AuthoritativeRootMotion.bHasAdditiveSources" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="1168" Vartype="Byte" Bytesize="1" OffsetHex="00000490" Description="RepRootMotion.AuthoritativeRootMotion.bHasOverrideSourcesWithIgnoreZAccumulate" DisplayMethod="unsigned integer" ChildStructStart="4"/>
        <Element Offset="1168" Vartype="Byte" Bytesize="1" OffsetHex="00000490" Description="RepRootMotion.AuthoritativeRootMotion.bHasOverrideSources" DisplayMethod="unsigned integer" ChildStructStart="2"/>
        <Element Offset="1169" Vartype="Byte" Bytesize="1" OffsetHex="00000491" Description="RepRootMotion.AuthoritativeRootMotion.LastAccumulatedSettings.Flags" DisplayMethod="unsigned integer"/>
        <Element Offset="1172" Vartype="Float" Bytesize="4" OffsetHex="00000494" Description="RepRootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.X" DisplayMethod="unsigned integer"/>
        <Element Offset="1176" Vartype="Float" Bytesize="4" OffsetHex="00000498" Description="RepRootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="1180" Vartype="Float" Bytesize="4" OffsetHex="0000049C" Description="RepRootMotion.AuthoritativeRootMotion.LastPreAdditiveVelocity.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="1184" Vartype="Float" Bytesize="4" OffsetHex="000004A0" Description="RepRootMotion.Acceleration.X" DisplayMethod="unsigned integer"/>
        <Element Offset="1188" Vartype="Float" Bytesize="4" OffsetHex="000004A4" Description="RepRootMotion.Acceleration.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="1192" Vartype="Float" Bytesize="4" OffsetHex="000004A8" Description="RepRootMotion.Acceleration.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="1196" Vartype="Float" Bytesize="4" OffsetHex="000004AC" Description="RepRootMotion.LinearVelocity.X" DisplayMethod="unsigned integer"/>
        <Element Offset="1200" Vartype="Float" Bytesize="4" OffsetHex="000004B0" Description="RepRootMotion.LinearVelocity.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="1204" Vartype="Float" Bytesize="4" OffsetHex="000004B4" Description="RepRootMotion.LinearVelocity.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="1208" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000004B8" DisplayMethod="unsigned integer"/>
        <Element Offset="1216" Vartype="4 Bytes" Bytesize="4" OffsetHex="000004C0" Description="UberGraphFrame" DisplayMethod="unsigned integer"/>
        <Element Offset="1220" Vartype="4 Bytes" Bytesize="4" OffsetHex="000004C4" DisplayMethod="unsigned integer"/>
        <Element Offset="1224" Vartype="Pointer" Bytesize="8" OffsetHex="000004C8" Description="UpLightSwrodJumpZ" DisplayMethod="unsigned integer"/>
        <Element Offset="1232" Vartype="Pointer" Bytesize="8" OffsetHex="000004D0" Description="Melee_XuLiParRed" DisplayMethod="unsigned integer"/>
        <Element Offset="1240" Vartype="Pointer" Bytesize="8" OffsetHex="000004D8" Description="MeleeEdmRed" DisplayMethod="unsigned integer"/>
        <Element Offset="1248" Vartype="Pointer" Bytesize="8" OffsetHex="000004E0" Description="UpLightSwrodMoveLoc_3" DisplayMethod="unsigned integer"/>
        <Element Offset="1256" Vartype="Pointer" Bytesize="8" OffsetHex="000004E8" Description="UpLightSwrodMoveLoc_2" DisplayMethod="unsigned integer"/>
        <Element Offset="1264" Vartype="Pointer" Bytesize="8" OffsetHex="000004F0" Description="UpLightSwrodMoveLoc_1" DisplayMethod="unsigned integer"/>
        <Element Offset="1272" Vartype="Pointer" Bytesize="8" OffsetHex="000004F8" Description="Melee_XuLiPar_OK" DisplayMethod="unsigned integer"/>
        <Element Offset="1280" Vartype="Pointer" Bytesize="8" OffsetHex="00000500" Description="Melee_XuLiPar" DisplayMethod="unsigned integer"/>
        <Element Offset="1288" Vartype="Pointer" Bytesize="8" OffsetHex="00000508" Description="Sprint_XuLiPar_OK" DisplayMethod="unsigned integer"/>
        <Element Offset="1296" Vartype="Pointer" Bytesize="8" OffsetHex="00000510" Description="Sprint_XuLiPar" DisplayMethod="unsigned integer"/>
        <Element Offset="1304" Vartype="Pointer" Bytesize="8" OffsetHex="00000518" Description="SprintEdm" DisplayMethod="unsigned integer"/>
        <Element Offset="1312" Vartype="Pointer" Bytesize="8" OffsetHex="00000520" Description="JumpAttackEdm" DisplayMethod="unsigned integer"/>
        <Element Offset="1320" Vartype="Pointer" Bytesize="8" OffsetHex="00000528" Description="MeleeEdm" DisplayMethod="unsigned integer"/>
        <Element Offset="1328" Vartype="Pointer" Bytesize="8" OffsetHex="00000530" Description="MeleePowerMoveLoc" DisplayMethod="unsigned integer"/>
        <Element Offset="1336" Vartype="Pointer" Bytesize="8" OffsetHex="00000538" Description="OutWaterPar" DisplayMethod="unsigned integer"/>
        <Element Offset="1344" Vartype="Pointer" Bytesize="8" OffsetHex="00000540" Description="HuaChanFoot_CG" DisplayMethod="unsigned integer"/>
        <Element Offset="1352" Vartype="Pointer" Bytesize="8" OffsetHex="00000548" Description="SprintAttackMoveLoc" DisplayMethod="unsigned integer"/>
        <Element Offset="1360" Vartype="Pointer" Bytesize="8" OffsetHex="00000550" Description="SprintAttack_Hand" DisplayMethod="unsigned integer"/>
        <Element Offset="1368" Vartype="Pointer" Bytesize="8" OffsetHex="00000558" Description="LightSwordWP4" DisplayMethod="unsigned integer"/>
        <Element Offset="1376" Vartype="Pointer" Bytesize="8" OffsetHex="00000560" Description="QYQStillZ" DisplayMethod="unsigned integer"/>
        <Element Offset="1384" Vartype="Pointer" Bytesize="8" OffsetHex="00000568" Description="HuaChanTrace" DisplayMethod="unsigned integer"/>
        <Element Offset="1392" Vartype="Pointer" Bytesize="8" OffsetHex="00000570" Description="RunWallLeaveCheckBox" DisplayMethod="unsigned integer"/>
        <Element Offset="1400" Vartype="Pointer" Bytesize="8" OffsetHex="00000578" Description="Melee_Powers" DisplayMethod="unsigned integer"/>
        <Element Offset="1408" Vartype="Pointer" Bytesize="8" OffsetHex="00000580" Description="ClimbLimbCameraEnd" DisplayMethod="unsigned integer"/>
        <Element Offset="1416" Vartype="Pointer" Bytesize="8" OffsetHex="00000588" Description="ClimbLimbCameraStart" DisplayMethod="unsigned integer"/>
        <Element Offset="1424" Vartype="Pointer" Bytesize="8" OffsetHex="00000590" Description="ClimbForwardMove" DisplayMethod="unsigned integer"/>
        <Element Offset="1432" Vartype="Pointer" Bytesize="8" OffsetHex="00000598" Description="LightZhaDiCameraJump" DisplayMethod="unsigned integer"/>
        <Element Offset="1440" Vartype="Pointer" Bytesize="8" OffsetHex="000005A0" Description="LightZhaDiCameraDown" DisplayMethod="unsigned integer"/>
        <Element Offset="1448" Vartype="Pointer" Bytesize="8" OffsetHex="000005A8" Description="AITelePortLoc" DisplayMethod="unsigned integer"/>
        <Element Offset="1456" Vartype="Pointer" Bytesize="8" OffsetHex="000005B0" Description="QYQAIHand" DisplayMethod="unsigned integer"/>
        <Element Offset="1464" Vartype="Pointer" Bytesize="8" OffsetHex="000005B8" Description="JumpAttackZ" DisplayMethod="unsigned integer"/>
        <Element Offset="1472" Vartype="Pointer" Bytesize="8" OffsetHex="000005C0" Description="HuaChanFoot" DisplayMethod="unsigned integer"/>
        <Element Offset="1480" Vartype="Pointer" Bytesize="8" OffsetHex="000005C8" Description="UpLightSwrodAttackMove" DisplayMethod="unsigned integer"/>
        <Element Offset="1488" Vartype="Pointer" Bytesize="8" OffsetHex="000005D0" Description="UpLightSwrodMoveLoc_0" DisplayMethod="unsigned integer"/>
        <Element Offset="1496" Vartype="Pointer" Bytesize="8" OffsetHex="000005D8" Description="EMPHand" DisplayMethod="unsigned integer"/>
        <Element Offset="1504" Vartype="Pointer" Bytesize="8" OffsetHex="000005E0" Description="QYQ_ShengZi" DisplayMethod="unsigned integer"/>
        <Element Offset="1512" Vartype="Pointer" Bytesize="8" OffsetHex="000005E8" Description="QYQ" DisplayMethod="unsigned integer"/>
        <Element Offset="1520" Vartype="Pointer" Bytesize="8" OffsetHex="000005F0" Description="KanJiHand" DisplayMethod="unsigned integer"/>
        <Element Offset="1528" Vartype="Pointer" Bytesize="8" OffsetHex="000005F8" Description="LightSwordWP3" DisplayMethod="unsigned integer"/>
        <Element Offset="1536" Vartype="Pointer" Bytesize="8" OffsetHex="00000600" Description="UpLightSword_Hand" DisplayMethod="unsigned integer"/>
        <Element Offset="1544" Vartype="Pointer" Bytesize="8" OffsetHex="00000608" Description="JumpAttackSword_Hand" DisplayMethod="unsigned integer"/>
        <Element Offset="1552" Vartype="Pointer" Bytesize="8" OffsetHex="00000610" Description="LightSwordWP2" DisplayMethod="unsigned integer"/>
        <Element Offset="1560" Vartype="Pointer" Bytesize="8" OffsetHex="00000618" Description="Defu_Hand" DisplayMethod="unsigned integer"/>
        <Element Offset="1568" Vartype="Pointer" Bytesize="8" OffsetHex="00000620" Description="LightSwordWP1" DisplayMethod="unsigned integer"/>
        <Element Offset="1576" Vartype="Pointer" Bytesize="8" OffsetHex="00000628" Description="SpringArm_Move" DisplayMethod="unsigned integer"/>
        <Element Offset="1584" Vartype="Pointer" Bytesize="8" OffsetHex="00000630" Description="WeaponRotArrow" DisplayMethod="unsigned integer"/>
        <Element Offset="1592" Vartype="Pointer" Bytesize="8" OffsetHex="00000638" Description="WeaponSwayArrow" DisplayMethod="unsigned integer"/>
        <Element Offset="1600" Vartype="Pointer" Bytesize="8" OffsetHex="00000640" Description="SpringArm" DisplayMethod="unsigned integer"/>
        <Element Offset="1608" Vartype="Pointer" Bytesize="8" OffsetHex="00000648" Description="Shun_Par" DisplayMethod="unsigned integer"/>
        <Element Offset="1616" Vartype="Pointer" Bytesize="8" OffsetHex="00000650" Description="BP_CircleDamageIndicatorComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="1624" Vartype="Pointer" Bytesize="8" OffsetHex="00000658" Description="Arrow1" DisplayMethod="unsigned integer"/>
        <Element Offset="1632" Vartype="Pointer" Bytesize="8" OffsetHex="00000660" Description="LightSwordWP" DisplayMethod="unsigned integer"/>
        <Element Offset="1640" Vartype="Pointer" Bytesize="8" OffsetHex="00000668" Description="PawnNoiseEmitter" DisplayMethod="unsigned integer"/>
        <Element Offset="1648" Vartype="Pointer" Bytesize="8" OffsetHex="00000670" Description="LowHealth_PostProcess" DisplayMethod="unsigned integer"/>
        <Element Offset="1656" Vartype="Pointer" Bytesize="8" OffsetHex="00000678" Description="Cable" DisplayMethod="unsigned integer"/>
        <Element Offset="1664" Vartype="Pointer" Bytesize="8" OffsetHex="00000680" Description="Player_Foot" DisplayMethod="unsigned integer"/>
        <Element Offset="1672" Vartype="Pointer" Bytesize="8" OffsetHex="00000688" Description="Foot_SpringArm" DisplayMethod="unsigned integer"/>
        <Element Offset="1680" Vartype="Pointer" Bytesize="8" OffsetHex="00000690" Description="PlayerFootHeight" DisplayMethod="unsigned integer"/>
        <Element Offset="1688" Vartype="Pointer" Bytesize="8" OffsetHex="00000698" Description="Hand" DisplayMethod="unsigned integer"/>
        <Element Offset="1696" Vartype="Pointer" Bytesize="8" OffsetHex="000006A0" Description="Player_WidgetInteraction" DisplayMethod="unsigned integer"/>
        <Element Offset="1704" Vartype="Pointer" Bytesize="8" OffsetHex="000006A8" Description="WeaponMesh" DisplayMethod="unsigned integer"/>
        <Element Offset="1712" Vartype="Pointer" Bytesize="8" OffsetHex="000006B0" Description="Camera" DisplayMethod="unsigned integer"/>
        <Element Offset="1720" Vartype="Float" Bytesize="4" OffsetHex="000006B8" Description="StartAnJiao_EXp_8344377C411C1933CBCD8589ABEFE12F" DisplayMethod="unsigned integer"/>
        <Element Offset="1724" Vartype="Float" Bytesize="4" OffsetHex="000006BC" Description="StartAnJiao_AnJiao_8344377C411C1933CBCD8589ABEFE12F" DisplayMethod="unsigned integer"/>
        <Element Offset="1728" Vartype="Byte" Bytesize="1" OffsetHex="000006C0" Description="StartAnJiao__Direction_8344377C411C1933CBCD8589ABEFE12F" DisplayMethod="unsigned integer"/>
        <Element Offset="1732" Vartype="4 Bytes" Bytesize="4" OffsetHex="000006C4" DisplayMethod="unsigned integer"/>
        <Element Offset="1736" Vartype="Pointer" Bytesize="8" OffsetHex="000006C8" Description="StartAnJiao" DisplayMethod="unsigned integer"/>
        <Element Offset="1744" Vartype="Float" Bytesize="4" OffsetHex="000006D0" Description="HuiFuDunXia_Exp_2365277048F80C906621EDA695F60D80" DisplayMethod="unsigned integer"/>
        <Element Offset="1748" Vartype="Float" Bytesize="4" OffsetHex="000006D4" Description="HuiFuDunXia_AnJiao_2365277048F80C906621EDA695F60D80" DisplayMethod="unsigned integer"/>
        <Element Offset="1752" Vartype="Byte" Bytesize="1" OffsetHex="000006D8" Description="HuiFuDunXia__Direction_2365277048F80C906621EDA695F60D80" DisplayMethod="unsigned integer"/>
        <Element Offset="1756" Vartype="4 Bytes" Bytesize="4" OffsetHex="000006DC" DisplayMethod="unsigned integer"/>
        <Element Offset="1760" Vartype="Pointer" Bytesize="8" OffsetHex="000006E0" Description="HuiFuDunXia" DisplayMethod="unsigned integer"/>
        <Element Offset="1768" Vartype="Float" Bytesize="4" OffsetHex="000006E8" Description="____2_Chorme_7FAAE2F0471B308EFF3921922B8C7AA8" DisplayMethod="unsigned integer"/>
        <Element Offset="1772" Vartype="Byte" Bytesize="1" OffsetHex="000006EC" Description="____2__Direction_7FAAE2F0471B308EFF3921922B8C7AA8" DisplayMethod="unsigned integer"/>
        <Element Offset="1776" Vartype="Pointer" Bytesize="8" OffsetHex="000006F0" Description="?e?_2" DisplayMethod="unsigned integer"/>
        <Element Offset="1784" Vartype="Float" Bytesize="4" OffsetHex="000006F8" Description="____1_Time_538B4AAA46462A1178FA84BD0D2358FF" DisplayMethod="unsigned integer"/>
        <Element Offset="1788" Vartype="Byte" Bytesize="1" OffsetHex="000006FC" Description="____1__Direction_538B4AAA46462A1178FA84BD0D2358FF" DisplayMethod="unsigned integer"/>
        <Element Offset="1792" Vartype="Pointer" Bytesize="8" OffsetHex="00000700" Description="?e?_1" DisplayMethod="unsigned integer"/>
        <Element Offset="1800" Vartype="Float" Bytesize="4" OffsetHex="00000708" Description="____0_TimeSlow_DC62441D423962A20E9C378981A5058B" DisplayMethod="unsigned integer"/>
        <Element Offset="1804" Vartype="Byte" Bytesize="1" OffsetHex="0000070C" Description="____0__Direction_DC62441D423962A20E9C378981A5058B" DisplayMethod="unsigned integer"/>
        <Element Offset="1808" Vartype="Pointer" Bytesize="8" OffsetHex="00000710" Description="?e?_0" DisplayMethod="unsigned integer"/>
        <Element Offset="1816" Vartype="Float" Bytesize="4" OffsetHex="00000718" Description="EMPSlowTime_TimeSlow_F26A021741FCB602B2895583C47608E2" DisplayMethod="unsigned integer"/>
        <Element Offset="1820" Vartype="Byte" Bytesize="1" OffsetHex="0000071C" Description="EMPSlowTime__Direction_F26A021741FCB602B2895583C47608E2" DisplayMethod="unsigned integer"/>
        <Element Offset="1824" Vartype="Pointer" Bytesize="8" OffsetHex="00000720" Description="EMPSlowTime" DisplayMethod="unsigned integer"/>
        <Element Offset="1832" Vartype="Float" Bytesize="4" OffsetHex="00000728" Description="HuaChanTIMELine_Speed_DA266BB149E2B74251F4DBBE950BC685" DisplayMethod="unsigned integer"/>
        <Element Offset="1836" Vartype="Float" Bytesize="4" OffsetHex="0000072C" Description="HuaChanTIMELine_BJ_DA266BB149E2B74251F4DBBE950BC685" DisplayMethod="unsigned integer"/>
        <Element Offset="1840" Vartype="Float" Bytesize="4" OffsetHex="00000730" Description="HuaChanTIMELine_Z_DA266BB149E2B74251F4DBBE950BC685" DisplayMethod="unsigned integer"/>
        <Element Offset="1844" Vartype="Byte" Bytesize="1" OffsetHex="00000734" Description="HuaChanTIMELine__Direction_DA266BB149E2B74251F4DBBE950BC685" DisplayMethod="unsigned integer"/>
        <Element Offset="1848" Vartype="Pointer" Bytesize="8" OffsetHex="00000738" Description="HuaChanTIMELine" DisplayMethod="unsigned integer"/>
        <Element Offset="1856" Vartype="Float" Bytesize="4" OffsetHex="00000740" Description="HitBlur2_Chorme_399A412148127E37ADE226A35824F656" DisplayMethod="unsigned integer"/>
        <Element Offset="1860" Vartype="Byte" Bytesize="1" OffsetHex="00000744" Description="HitBlur2__Direction_399A412148127E37ADE226A35824F656" DisplayMethod="unsigned integer"/>
        <Element Offset="1864" Vartype="Pointer" Bytesize="8" OffsetHex="00000748" Description="HitBlur2" DisplayMethod="unsigned integer"/>
        <Element Offset="1872" Vartype="Float" Bytesize="4" OffsetHex="00000750" Description="EMPBlur_Chorme_C982946648FDB3368E8DEBB9F77C161F" DisplayMethod="unsigned integer"/>
        <Element Offset="1876" Vartype="Byte" Bytesize="1" OffsetHex="00000754" Description="EMPBlur__Direction_C982946648FDB3368E8DEBB9F77C161F" DisplayMethod="unsigned integer"/>
        <Element Offset="1880" Vartype="Pointer" Bytesize="8" OffsetHex="00000758" Description="EMPBlur" DisplayMethod="unsigned integer"/>
        <Element Offset="1888" Vartype="Float" Bytesize="4" OffsetHex="00000760" Description="TelePostOut_Chorme_CE85550C42871D79092BB1A57545095C" DisplayMethod="unsigned integer"/>
        <Element Offset="1892" Vartype="Byte" Bytesize="1" OffsetHex="00000764" Description="TelePostOut__Direction_CE85550C42871D79092BB1A57545095C" DisplayMethod="unsigned integer"/>
        <Element Offset="1896" Vartype="Pointer" Bytesize="8" OffsetHex="00000768" Description="TelePostOut" DisplayMethod="unsigned integer"/>
        <Element Offset="1904" Vartype="Float" Bytesize="4" OffsetHex="00000770" Description="TelePostIn_Chorme_ACF679BF431B1C8A023B7BBC5558DBD9" DisplayMethod="unsigned integer"/>
        <Element Offset="1908" Vartype="Byte" Bytesize="1" OffsetHex="00000774" Description="TelePostIn__Direction_ACF679BF431B1C8A023B7BBC5558DBD9" DisplayMethod="unsigned integer"/>
        <Element Offset="1912" Vartype="Pointer" Bytesize="8" OffsetHex="00000778" Description="TelePostIn" DisplayMethod="unsigned integer"/>
        <Element Offset="1920" Vartype="Float" Bytesize="4" OffsetHex="00000780" Description="HitBlur_Chorme_3167C4314FD11285E2FDDCB88C580FA7" DisplayMethod="unsigned integer"/>
        <Element Offset="1924" Vartype="Byte" Bytesize="1" OffsetHex="00000784" Description="HitBlur__Direction_3167C4314FD11285E2FDDCB88C580FA7" DisplayMethod="unsigned integer"/>
        <Element Offset="1928" Vartype="Pointer" Bytesize="8" OffsetHex="00000788" Description="HitBlur" DisplayMethod="unsigned integer"/>
        <Element Offset="1936" Vartype="Float" Bytesize="4" OffsetHex="00000790" Description="Timeline_0_Chorme_1103061549402F75D762EFA72BAD2EFC" DisplayMethod="unsigned integer"/>
        <Element Offset="1940" Vartype="Byte" Bytesize="1" OffsetHex="00000794" Description="Timeline_0__Direction_1103061549402F75D762EFA72BAD2EFC" DisplayMethod="unsigned integer"/>
        <Element Offset="1944" Vartype="Pointer" Bytesize="8" OffsetHex="00000798" Description="Timeline_0" DisplayMethod="unsigned integer"/>
        <Element Offset="1952" Vartype="Float" Bytesize="4" OffsetHex="000007A0" Description="PlayerMoveRunWall_RunWall_4EE9B10C42CB9B911CE47C9FFA2E23EC" DisplayMethod="unsigned integer"/>
        <Element Offset="1956" Vartype="Byte" Bytesize="1" OffsetHex="000007A4" Description="PlayerMoveRunWall__Direction_4EE9B10C42CB9B911CE47C9FFA2E23EC" DisplayMethod="unsigned integer"/>
        <Element Offset="1960" Vartype="Pointer" Bytesize="8" OffsetHex="000007A8" Description="PlayerMoveRunWall" DisplayMethod="unsigned integer"/>
        <Element Offset="1968" Vartype="Float" Bytesize="4" OffsetHex="000007B0" Description="ShunBlur_Chorme_AF525CB34202432A4435F38A71A66BB2" DisplayMethod="unsigned integer"/>
        <Element Offset="1972" Vartype="Byte" Bytesize="1" OffsetHex="000007B4" Description="ShunBlur__Direction_AF525CB34202432A4435F38A71A66BB2" DisplayMethod="unsigned integer"/>
        <Element Offset="1976" Vartype="Pointer" Bytesize="8" OffsetHex="000007B8" Description="ShunBlur" DisplayMethod="unsigned integer"/>
        <Element Offset="1984" Vartype="Float" Bytesize="4" OffsetHex="000007C0" Description="MeleePowerSlowTimeHnad_TimeSlow_3A93DE8545CE4C6C116DAA8C3BAD5B1F" DisplayMethod="unsigned integer"/>
        <Element Offset="1988" Vartype="Byte" Bytesize="1" OffsetHex="000007C4" Description="MeleePowerSlowTimeHnad__Direction_3A93DE8545CE4C6C116DAA8C3BAD5B1F" DisplayMethod="unsigned integer"/>
        <Element Offset="1992" Vartype="Pointer" Bytesize="8" OffsetHex="000007C8" Description="MeleePowerSlowTimeHnad" DisplayMethod="unsigned integer"/>
        <Element Offset="2000" Vartype="Float" Bytesize="4" OffsetHex="000007D0" Description="MeleePowerSlowTime_TimeSlow_A6325DDC450533CAA76E799548BC6B9F" DisplayMethod="unsigned integer"/>
        <Element Offset="2004" Vartype="Byte" Bytesize="1" OffsetHex="000007D4" Description="MeleePowerSlowTime__Direction_A6325DDC450533CAA76E799548BC6B9F" DisplayMethod="unsigned integer"/>
        <Element Offset="2008" Vartype="Pointer" Bytesize="8" OffsetHex="000007D8" Description="MeleePowerSlowTime" DisplayMethod="unsigned integer"/>
        <Element Offset="2016" Vartype="Float" Bytesize="4" OffsetHex="000007E0" Description="MeleePowerBlur_Chorme_9484ECE2482B7D3F7A4AC1818CB1C01E" DisplayMethod="unsigned integer"/>
        <Element Offset="2020" Vartype="Byte" Bytesize="1" OffsetHex="000007E4" Description="MeleePowerBlur__Direction_9484ECE2482B7D3F7A4AC1818CB1C01E" DisplayMethod="unsigned integer"/>
        <Element Offset="2024" Vartype="Pointer" Bytesize="8" OffsetHex="000007E8" Description="MeleePowerBlur" DisplayMethod="unsigned integer"/>
        <Element Offset="2032" Vartype="Float" Bytesize="4" OffsetHex="000007F0" Description="GanRao_Chorme_1493B75A4B0D28BF7F67EEAFA91E4620" DisplayMethod="unsigned integer"/>
        <Element Offset="2036" Vartype="Byte" Bytesize="1" OffsetHex="000007F4" Description="GanRao__Direction_1493B75A4B0D28BF7F67EEAFA91E4620" DisplayMethod="unsigned integer"/>
        <Element Offset="2040" Vartype="Pointer" Bytesize="8" OffsetHex="000007F8" Description="GanRao" DisplayMethod="unsigned integer"/>
        <Element Offset="2048" Vartype="Float" Bytesize="4" OffsetHex="00000800" Description="QYQAISlowTime_TimeSlow_446032AE4B187A77E549DEA8D1EEE4D3" DisplayMethod="unsigned integer"/>
        <Element Offset="2052" Vartype="Byte" Bytesize="1" OffsetHex="00000804" Description="QYQAISlowTime__Direction_446032AE4B187A77E549DEA8D1EEE4D3" DisplayMethod="unsigned integer"/>
        <Element Offset="2056" Vartype="Pointer" Bytesize="8" OffsetHex="00000808" Description="QYQAISlowTime" DisplayMethod="unsigned integer"/>
        <Element Offset="2064" Vartype="Float" Bytesize="4" OffsetHex="00000810" Description="UpLightChrome_Chorme_B3995AA542C00741B557A1B04AFA67DC" DisplayMethod="unsigned integer"/>
        <Element Offset="2068" Vartype="Byte" Bytesize="1" OffsetHex="00000814" Description="UpLightChrome__Direction_B3995AA542C00741B557A1B04AFA67DC" DisplayMethod="unsigned integer"/>
        <Element Offset="2072" Vartype="Pointer" Bytesize="8" OffsetHex="00000818" Description="UpLightChrome" DisplayMethod="unsigned integer"/>
        <Element Offset="2080" Vartype="Float" Bytesize="4" OffsetHex="00000820" Description="HuaChanFootMoveLoc_Z_090C0883444B8A92C9367D944F989567" DisplayMethod="unsigned integer"/>
        <Element Offset="2084" Vartype="Float" Bytesize="4" OffsetHex="00000824" Description="HuaChanFootMoveLoc_X_090C0883444B8A92C9367D944F989567" DisplayMethod="unsigned integer"/>
        <Element Offset="2088" Vartype="Byte" Bytesize="1" OffsetHex="00000828" Description="HuaChanFootMoveLoc__Direction_090C0883444B8A92C9367D944F989567" DisplayMethod="unsigned integer"/>
        <Element Offset="2092" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000082C" DisplayMethod="unsigned integer"/>
        <Element Offset="2096" Vartype="Pointer" Bytesize="8" OffsetHex="00000830" Description="HuaChanFootMoveLoc" DisplayMethod="unsigned integer"/>
        <Element Offset="2104" Vartype="Float" Bytesize="4" OffsetHex="00000838" Description="CrouchFootLoc_Scale_A13E0F9D46D33B0DBD35269E0BD123B8.X" DisplayMethod="unsigned integer"/>
        <Element Offset="2108" Vartype="Float" Bytesize="4" OffsetHex="0000083C" Description="CrouchFootLoc_Scale_A13E0F9D46D33B0DBD35269E0BD123B8.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="2112" Vartype="Float" Bytesize="4" OffsetHex="00000840" Description="CrouchFootLoc_Scale_A13E0F9D46D33B0DBD35269E0BD123B8.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="2116" Vartype="Float" Bytesize="4" OffsetHex="00000844" Description="CrouchFootLoc_X_A13E0F9D46D33B0DBD35269E0BD123B8" DisplayMethod="unsigned integer"/>
        <Element Offset="2120" Vartype="Float" Bytesize="4" OffsetHex="00000848" Description="CrouchFootLoc_Z_A13E0F9D46D33B0DBD35269E0BD123B8" DisplayMethod="unsigned integer"/>
        <Element Offset="2124" Vartype="Byte" Bytesize="1" OffsetHex="0000084C" Description="CrouchFootLoc__Direction_A13E0F9D46D33B0DBD35269E0BD123B8" DisplayMethod="unsigned integer"/>
        <Element Offset="2128" Vartype="Pointer" Bytesize="8" OffsetHex="00000850" Description="CrouchFootLoc" DisplayMethod="unsigned integer"/>
        <Element Offset="2136" Vartype="Float" Bytesize="4" OffsetHex="00000858" Description="Chrome2_Chorme_DAA6DEC045777F868CF13B8CBB282F35" DisplayMethod="unsigned integer"/>
        <Element Offset="2140" Vartype="Byte" Bytesize="1" OffsetHex="0000085C" Description="Chrome2__Direction_DAA6DEC045777F868CF13B8CBB282F35" DisplayMethod="unsigned integer"/>
        <Element Offset="2144" Vartype="Pointer" Bytesize="8" OffsetHex="00000860" Description="Chrome2" DisplayMethod="unsigned integer"/>
        <Element Offset="2152" Vartype="Float" Bytesize="4" OffsetHex="00000868" Description="ChromeTimeLine_Chorme_357B7FCA4702629DC81483A65AF4CAC4" DisplayMethod="unsigned integer"/>
        <Element Offset="2156" Vartype="Byte" Bytesize="1" OffsetHex="0000086C" Description="ChromeTimeLine__Direction_357B7FCA4702629DC81483A65AF4CAC4" DisplayMethod="unsigned integer"/>
        <Element Offset="2160" Vartype="Pointer" Bytesize="8" OffsetHex="00000870" Description="ChromeTimeLine" DisplayMethod="unsigned integer"/>
        <Element Offset="2168" Vartype="Float" Bytesize="4" OffsetHex="00000878" Description="JumpAttackSlow_Time_E3AC434B4D1E384BDA8CA6906D8066CB" DisplayMethod="unsigned integer"/>
        <Element Offset="2172" Vartype="Byte" Bytesize="1" OffsetHex="0000087C" Description="JumpAttackSlow__Direction_E3AC434B4D1E384BDA8CA6906D8066CB" DisplayMethod="unsigned integer"/>
        <Element Offset="2176" Vartype="Pointer" Bytesize="8" OffsetHex="00000880" Description="JumpAttackSlow" DisplayMethod="unsigned integer"/>
        <Element Offset="2184" Vartype="Float" Bytesize="4" OffsetHex="00000888" Description="UpLightSwordTimeRate_Time_5C3E321147FF33C2CDBDA0A849C08614" DisplayMethod="unsigned integer"/>
        <Element Offset="2188" Vartype="Byte" Bytesize="1" OffsetHex="0000088C" Description="UpLightSwordTimeRate__Direction_5C3E321147FF33C2CDBDA0A849C08614" DisplayMethod="unsigned integer"/>
        <Element Offset="2192" Vartype="Pointer" Bytesize="8" OffsetHex="00000890" Description="UpLightSwordTimeRate" DisplayMethod="unsigned integer"/>
        <Element Offset="2200" Vartype="Float" Bytesize="4" OffsetHex="00000898" Description="UpLightSwrodCameraLoc_Z_C48951B34CA962A8884A62AF16EFEEED" DisplayMethod="unsigned integer"/>
        <Element Offset="2204" Vartype="Byte" Bytesize="1" OffsetHex="0000089C" Description="UpLightSwrodCameraLoc__Direction_C48951B34CA962A8884A62AF16EFEEED" DisplayMethod="unsigned integer"/>
        <Element Offset="2208" Vartype="Pointer" Bytesize="8" OffsetHex="000008A0" Description="UpLightSwrodCameraLoc" DisplayMethod="unsigned integer"/>
        <Element Offset="2216" Vartype="Float" Bytesize="4" OffsetHex="000008A8" Description="PostPorcess_PostProcess_809A480448348B589F49D7ACEB6C067A" DisplayMethod="unsigned integer"/>
        <Element Offset="2220" Vartype="Byte" Bytesize="1" OffsetHex="000008AC" Description="PostPorcess__Direction_809A480448348B589F49D7ACEB6C067A" DisplayMethod="unsigned integer"/>
        <Element Offset="2224" Vartype="Pointer" Bytesize="8" OffsetHex="000008B0" Description="PostPorcess" DisplayMethod="unsigned integer"/>
        <Element Offset="2232" Vartype="Float" Bytesize="4" OffsetHex="000008B8" Description="Player_HuaDowns_Randio_CBE6E4704F0477EF843757B74DDE2462" DisplayMethod="unsigned integer"/>
        <Element Offset="2236" Vartype="Float" Bytesize="4" OffsetHex="000008BC" Description="Player_HuaDowns_Z_CBE6E4704F0477EF843757B74DDE2462" DisplayMethod="unsigned integer"/>
        <Element Offset="2240" Vartype="Byte" Bytesize="1" OffsetHex="000008C0" Description="Player_HuaDowns__Direction_CBE6E4704F0477EF843757B74DDE2462" DisplayMethod="unsigned integer"/>
        <Element Offset="2244" Vartype="4 Bytes" Bytesize="4" OffsetHex="000008C4" DisplayMethod="unsigned integer"/>
        <Element Offset="2248" Vartype="Pointer" Bytesize="8" OffsetHex="000008C8" Description="Player_HuaDowns" DisplayMethod="unsigned integer"/>
        <Element Offset="2256" Vartype="Float" Bytesize="4" OffsetHex="000008D0" Description="UnCrouch2_Z_7E47216447188BABF198469DFA9A4844" DisplayMethod="unsigned integer"/>
        <Element Offset="2260" Vartype="Byte" Bytesize="1" OffsetHex="000008D4" Description="UnCrouch2__Direction_7E47216447188BABF198469DFA9A4844" DisplayMethod="unsigned integer"/>
        <Element Offset="2264" Vartype="Pointer" Bytesize="8" OffsetHex="000008D8" Description="UnCrouch2" DisplayMethod="unsigned integer"/>
        <Element Offset="2272" Vartype="Float" Bytesize="4" OffsetHex="000008E0" Description="UnCrouch_Z_7395FC5D40268E1293ECCFAFD9053EC0" DisplayMethod="unsigned integer"/>
        <Element Offset="2276" Vartype="Byte" Bytesize="1" OffsetHex="000008E4" Description="UnCrouch__Direction_7395FC5D40268E1293ECCFAFD9053EC0" DisplayMethod="unsigned integer"/>
        <Element Offset="2280" Vartype="Pointer" Bytesize="8" OffsetHex="000008E8" Description="UnCrouch" DisplayMethod="unsigned integer"/>
        <Element Offset="2288" Vartype="Float" Bytesize="4" OffsetHex="000008F0" Description="Crouch_Z_EC1EDB1A45CCC1CAD111C9A091B2AD41" DisplayMethod="unsigned integer"/>
        <Element Offset="2292" Vartype="Byte" Bytesize="1" OffsetHex="000008F4" Description="Crouch__Direction_EC1EDB1A45CCC1CAD111C9A091B2AD41" DisplayMethod="unsigned integer"/>
        <Element Offset="2296" Vartype="Pointer" Bytesize="8" OffsetHex="000008F8" Description="Crouch" DisplayMethod="unsigned integer"/>
        <Element Offset="2304" Vartype="Float" Bytesize="4" OffsetHex="00000900" Description="WeaponParOffset.X" DisplayMethod="unsigned integer"/>
        <Element Offset="2308" Vartype="Float" Bytesize="4" OffsetHex="00000904" Description="WeaponParOffset.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="2312" Vartype="Float" Bytesize="4" OffsetHex="00000908" Description="WeaponParOffset.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="2316" Vartype="Float" Bytesize="4" OffsetHex="0000090C" Description="BaseTurnRate" DisplayMethod="unsigned integer"/>
        <Element Offset="2320" Vartype="Float" Bytesize="4" OffsetHex="00000910" Description="BaseLookUpRate" DisplayMethod="unsigned integer"/>
        <Element Offset="2324" Vartype="Byte" Bytesize="1" OffsetHex="00000914" Description="UsingMotionControllers?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2328" Vartype="Pointer" Bytesize="8" OffsetHex="00000918" Description="Weapon" DisplayMethod="unsigned integer"/>
        <Element Offset="2336" Vartype="Pointer" Bytesize="8" OffsetHex="00000920" Description="Weapon3" DisplayMethod="unsigned integer"/>
        <Element Offset="2344" Vartype="Pointer" Bytesize="8" OffsetHex="00000928" Description="Weapon2" DisplayMethod="unsigned integer"/>
        <Element Offset="2352" Vartype="Pointer" Bytesize="8" OffsetHex="00000930" Description="Weapon9" DisplayMethod="unsigned integer"/>
        <Element Offset="2360" Vartype="Pointer" Bytesize="8" OffsetHex="00000938" Description="WeaponMagTagActor" DisplayMethod="unsigned integer"/>
        <Element Offset="2368" Vartype="Pointer" Bytesize="8" OffsetHex="00000940" Description="NowWeaponTagActor" DisplayMethod="unsigned integer">
          <Structure Name="NowWeaponTagActor[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="Pointer" Bytesize="8" OffsetHex="00000000" Description="[0] NowWeaponTagActor" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="Pointer" Bytesize="8" OffsetHex="00000008" Description="[1] NowWeaponTagActor" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="Pointer" Bytesize="8" OffsetHex="00000010" Description="[2] NowWeaponTagActor" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="Pointer" Bytesize="8" OffsetHex="00000018" Description="[3] NowWeaponTagActor" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="Pointer" Bytesize="8" OffsetHex="00000020" Description="[4] NowWeaponTagActor" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="Pointer" Bytesize="8" OffsetHex="00000028" Description="[5] NowWeaponTagActor" DisplayMethod="unsigned integer"/>
              <Element Offset="48" Vartype="Pointer" Bytesize="8" OffsetHex="00000030" Description="[6] NowWeaponTagActor" DisplayMethod="unsigned integer"/>
              <Element Offset="56" Vartype="Pointer" Bytesize="8" OffsetHex="00000038" Description="[7] NowWeaponTagActor" DisplayMethod="unsigned integer"/>
              <Element Offset="64" Vartype="Pointer" Bytesize="8" OffsetHex="00000040" Description="[8] NowWeaponTagActor" DisplayMethod="unsigned integer"/>
              <Element Offset="72" Vartype="Pointer" Bytesize="8" OffsetHex="00000048" Description="[9] NowWeaponTagActor" DisplayMethod="unsigned integer"/>
              <Element Offset="80" Vartype="Pointer" Bytesize="8" OffsetHex="00000050" Description="[10] NowWeaponTagActor" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="2376" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000948" Description="NowWeaponTagActor_size" DisplayMethod="unsigned integer"/>
        <Element Offset="2380" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000094C" Description="NowWeaponTagActor_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="2384" Vartype="Pointer" Bytesize="8" OffsetHex="00000950" Description="WeaponMeleeMontage" DisplayMethod="unsigned integer"/>
        <Element Offset="2392" Vartype="Pointer" Bytesize="8" OffsetHex="00000958" Description="NowWeaponUILight" DisplayMethod="unsigned integer"/>
        <Element Offset="2400" Vartype="Float" Bytesize="4" OffsetHex="00000960" Description="ReloadTime" DisplayMethod="unsigned integer"/>
        <Element Offset="2404" Vartype="Float" Bytesize="4" OffsetHex="00000964" Description="PlayerHealth" DisplayMethod="unsigned integer"/>
        <Element Offset="2408" Vartype="Float" Bytesize="4" OffsetHex="00000968" Description="MoveRight" DisplayMethod="unsigned integer"/>
        <Element Offset="2412" Vartype="Float" Bytesize="4" OffsetHex="0000096C" Description="MoveForward" DisplayMethod="unsigned integer"/>
        <Element Offset="2416" Vartype="Float" Bytesize="4" OffsetHex="00000970" Description="Reload2Time" DisplayMethod="unsigned integer"/>
        <Element Offset="2420" Vartype="Float" Bytesize="4" OffsetHex="00000974" Description="FireIntervals" DisplayMethod="unsigned integer"/>
        <Element Offset="2424" Vartype="Float" Bytesize="4" OffsetHex="00000978" Description="MeleeIntervals" DisplayMethod="unsigned integer"/>
        <Element Offset="2428" Vartype="Float" Bytesize="4" OffsetHex="0000097C" Description="WeaponDamage" DisplayMethod="unsigned integer"/>
        <Element Offset="2432" Vartype="Pointer" Bytesize="8" OffsetHex="00000980" Description="Skill_LightSword_Touch" DisplayMethod="unsigned integer"/>
        <Element Offset="2440" Vartype="Float" Bytesize="4" OffsetHex="00000988" Description="ReduceHit" DisplayMethod="unsigned integer"/>
        <Element Offset="2444" Vartype="Float" Bytesize="4" OffsetHex="0000098C" Description="MaxRunSpeed" DisplayMethod="unsigned integer"/>
        <Element Offset="2448" Vartype="Float" Bytesize="4" OffsetHex="00000990" Description="MaxWalkSpeed" DisplayMethod="unsigned integer"/>
        <Element Offset="2452" Vartype="Float" Bytesize="4" OffsetHex="00000994" Description="MeleeDamage" DisplayMethod="unsigned integer"/>
        <Element Offset="2456" Vartype="Float" Bytesize="4" OffsetHex="00000998" Description="MaxCrouchSpeed" DisplayMethod="unsigned integer"/>
        <Element Offset="2460" Vartype="Float" Bytesize="4" OffsetHex="0000099C" Description="MaxAddSpeed" DisplayMethod="unsigned integer"/>
        <Element Offset="2464" Vartype="Float" Bytesize="4" OffsetHex="000009A0" Description="SwimmingUp_CameraRot" DisplayMethod="unsigned integer"/>
        <Element Offset="2468" Vartype="Float" Bytesize="4" OffsetHex="000009A4" Description="SwimmingDown_CameraRot" DisplayMethod="unsigned integer"/>
        <Element Offset="2472" Vartype="Float" Bytesize="4" OffsetHex="000009A8" Description="TickTime" DisplayMethod="unsigned integer"/>
        <Element Offset="2476" Vartype="Byte" Bytesize="1" OffsetHex="000009AC" Description="IsFireBP" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2477" Vartype="Byte" Bytesize="1" OffsetHex="000009AD" Description="IsLeftLoc" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2478" Vartype="Byte" Bytesize="1" OffsetHex="000009AE" Description="IsRightLoc" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2479" Vartype="Byte" Bytesize="1" OffsetHex="000009AF" Description="IsReload" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2480" Vartype="Byte" Bytesize="1" OffsetHex="000009B0" Description="IsReload2" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2481" Vartype="Byte" Bytesize="1" OffsetHex="000009B1" Description="IsFireReload" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2482" Vartype="Byte" Bytesize="1" OffsetHex="000009B2" Description="IsRun" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2483" Vartype="Byte" Bytesize="1" OffsetHex="000009B3" Description="NoReaload" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2484" Vartype="Byte" Bytesize="1" OffsetHex="000009B4" Description="NoAmmo" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2485" Vartype="Byte" Bytesize="1" OffsetHex="000009B5" Description="IsAmmo=Max" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2486" Vartype="Byte" Bytesize="1" OffsetHex="000009B6" Description="IsMeleeBP" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2487" Vartype="Byte" Bytesize="1" OffsetHex="000009B7" Description="IsMelee" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2488" Vartype="Byte" Bytesize="1" OffsetHex="000009B8" Description="IsSwing" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2489" Vartype="Byte" Bytesize="1" OffsetHex="000009B9" Description="IsPutDown" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2490" Vartype="Byte" Bytesize="1" OffsetHex="000009BA" Description="IsEqiuWeapon" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2491" Vartype="Byte" Bytesize="1" OffsetHex="000009BB" Description="IsAutoFire" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2492" Vartype="Byte" Bytesize="1" OffsetHex="000009BC" Description="IsShopEquipWeapon" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2493" Vartype="Byte" Bytesize="1" OffsetHex="000009BD" Description="IsPressShift" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2494" Vartype="Byte" Bytesize="1" OffsetHex="000009BE" Description="WSongKai?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2495" Vartype="Byte" Bytesize="1" OffsetHex="000009BF" Description="IsAdd" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2496" Vartype="Byte" Bytesize="1" OffsetHex="000009C0" Description="IsAdd_Close?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2500" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009C4" Description="NowAmmo" DisplayMethod="unsigned integer"/>
        <Element Offset="2504" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009C8" Description="MaxAmmo" DisplayMethod="unsigned integer"/>
        <Element Offset="2508" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009CC" Description="NeedAmmo" DisplayMethod="unsigned integer"/>
        <Element Offset="2512" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009D0" Description="DefuWeaponAmmo" DisplayMethod="unsigned integer"/>
        <Element Offset="2516" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009D4" Description="WeaponID" DisplayMethod="unsigned integer"/>
        <Element Offset="2520" Vartype="Byte" Bytesize="1" OffsetHex="000009D8" Description="IsPressFireButton" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2521" Vartype="Byte" Bytesize="1" OffsetHex="000009D9" Description="DisableR" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2522" Vartype="Byte" Bytesize="1" OffsetHex="000009DA" Description="DisableFire" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2528" Vartype="Pointer" Bytesize="8" OffsetHex="000009E0" Description="GamePlaySave" DisplayMethod="unsigned integer"/>
        <Element Offset="2536" Vartype="Pointer" Bytesize="8" OffsetHex="000009E8" Description="GamePlaySaveName" DisplayMethod="unsigned integer"/>
        <Element Offset="2544" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009F0" DisplayMethod="unsigned integer"/>
        <Element Offset="2552" Vartype="Byte" Bytesize="1" OffsetHex="000009F8" Description="IsNoAmmo" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2553" Vartype="Byte" Bytesize="1" OffsetHex="000009F9" Description="WeaponID1_NoAmmo" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2554" Vartype="Byte" Bytesize="1" OffsetHex="000009FA" Description="WeaponID2_NoAmmo" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2555" Vartype="Byte" Bytesize="1" OffsetHex="000009FB" Description="IsCrouchDrag" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2556" Vartype="Byte" Bytesize="1" OffsetHex="000009FC" Description="IsCrouch" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2557" Vartype="Byte" Bytesize="1" OffsetHex="000009FD" Description="CrouchToRun" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2560" Vartype="Pointer" Bytesize="8" OffsetHex="00000A00" Description="AI_Find_Point" DisplayMethod="unsigned integer"/>
        <Element Offset="2568" Vartype="Float" Bytesize="4" OffsetHex="00000A08" Description="HookLocation.X" DisplayMethod="unsigned integer"/>
        <Element Offset="2572" Vartype="Float" Bytesize="4" OffsetHex="00000A0C" Description="HookLocation.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="2576" Vartype="Float" Bytesize="4" OffsetHex="00000A10" Description="HookLocation.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="2580" Vartype="Byte" Bytesize="1" OffsetHex="00000A14" Description="IsNoHit?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2581" Vartype="Byte" Bytesize="1" OffsetHex="00000A15" Description="IsDead?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2582" Vartype="Byte" Bytesize="1" OffsetHex="00000A16" Description="IsLowHealthRest?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2583" Vartype="Byte" Bytesize="1" OffsetHex="00000A17" Description="Hook" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2584" Vartype="Byte" Bytesize="1" OffsetHex="00000A18" Description="HookMoveFinished" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2588" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A1C" DisplayMethod="unsigned integer"/>
        <Element Offset="2592" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A20" Description="Level_Swing" DisplayMethod="unsigned integer"/>
        <Element Offset="2596" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000A24" DisplayMethod="unsigned integer"/>
        <Element Offset="2608" Vartype="Byte" Bytesize="1" OffsetHex="00000A30" Description="HookCanOff" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2609" Vartype="Byte" Bytesize="1" OffsetHex="00000A31" Description="HookNoSpace" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2616" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A38" Description="Level_LeaveHook" DisplayMethod="unsigned integer"/>
        <Element Offset="2620" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000A3C" DisplayMethod="unsigned integer"/>
        <Element Offset="2632" Vartype="Byte" Bytesize="1" OffsetHex="00000A48" Description="S_ReduceHit" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2633" Vartype="Byte" Bytesize="1" OffsetHex="00000A49" Description="IsCG" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2634" Vartype="Byte" Bytesize="1" OffsetHex="00000A4A" Description="IsBackHome" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2635" Vartype="Byte" Bytesize="1" OffsetHex="00000A4B" Description="IsCanBackHome?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2640" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A50" Description="Level_BackHome" DisplayMethod="unsigned integer"/>
        <Element Offset="2644" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000A54" DisplayMethod="unsigned integer"/>
        <Element Offset="2656" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A60" Description="Level_BackHomeChangeFog" DisplayMethod="unsigned integer"/>
        <Element Offset="2660" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000A64" DisplayMethod="unsigned integer"/>
        <Element Offset="2672" Vartype="Byte" Bytesize="1" OffsetHex="00000A70" Description="ActiveShopTrace" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2673" Vartype="Byte" Bytesize="1" OffsetHex="00000A71" Description="IsNewPlayerSkill" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2676" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000A74" Description="NowWeaponName" DisplayMethod="unsigned integer"/>
        <Element Offset="2684" Vartype="Byte" Bytesize="1" OffsetHex="00000A7C" Description="IsLightSwordAim" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2685" Vartype="Byte" Bytesize="1" OffsetHex="00000A7D" Description="CloseHookTrace" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2686" Vartype="Byte" Bytesize="1" OffsetHex="00000A7E" Description="HookManyISTure" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2687" Vartype="Byte" Bytesize="1" OffsetHex="00000A7F" Description="IsLightSword_CDTime" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2688" Vartype="Byte" Bytesize="1" OffsetHex="00000A80" Description="IsLightSwordQTE" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2689" Vartype="Byte" Bytesize="1" OffsetHex="00000A81" Description="IsLightSwordQTE2" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2690" Vartype="Byte" Bytesize="1" OffsetHex="00000A82" Description="IsLightSword" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2691" Vartype="Byte" Bytesize="1" OffsetHex="00000A83" Description="IsTeleport" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2692" Vartype="Byte" Bytesize="1" OffsetHex="00000A84" Description="IsTeleportCDTime" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2693" Vartype="Byte" Bytesize="1" OffsetHex="00000A85" Description="IsFlaseTeleport" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2696" Vartype="Pointer" Bytesize="8" OffsetHex="00000A88" Description="TeleportAI" DisplayMethod="unsigned integer"/>
        <Element Offset="2704" Vartype="Pointer" Bytesize="8" OffsetHex="00000A90" Description="DefuTeleportTag" DisplayMethod="unsigned integer">
          <Structure Name="DefuTeleportTag[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000000" Description="[0] DefuTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000008" Description="[1] DefuTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000010" Description="[2] DefuTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000018" Description="[3] DefuTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000020" Description="[4] DefuTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000028" Description="[5] DefuTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="48" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000030" Description="[6] DefuTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="56" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000038" Description="[7] DefuTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="64" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000040" Description="[8] DefuTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="72" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000048" Description="[9] DefuTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="80" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000050" Description="[10] DefuTeleportTag" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="2712" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A98" Description="DefuTeleportTag_size" DisplayMethod="unsigned integer"/>
        <Element Offset="2716" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A9C" Description="DefuTeleportTag_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="2720" Vartype="Pointer" Bytesize="8" OffsetHex="00000AA0" Description="IsLockTeleportTag" DisplayMethod="unsigned integer">
          <Structure Name="IsLockTeleportTag[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000000" Description="[0] IsLockTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000008" Description="[1] IsLockTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000010" Description="[2] IsLockTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000018" Description="[3] IsLockTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000020" Description="[4] IsLockTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000028" Description="[5] IsLockTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="48" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000030" Description="[6] IsLockTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="56" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000038" Description="[7] IsLockTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="64" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000040" Description="[8] IsLockTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="72" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000048" Description="[9] IsLockTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="80" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000050" Description="[10] IsLockTeleportTag" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="2728" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AA8" Description="IsLockTeleportTag_size" DisplayMethod="unsigned integer"/>
        <Element Offset="2732" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AAC" Description="IsLockTeleportTag_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="2736" Vartype="Float" Bytesize="4" OffsetHex="00000AB0" Description="TeleportAILoction.X" DisplayMethod="unsigned integer"/>
        <Element Offset="2740" Vartype="Float" Bytesize="4" OffsetHex="00000AB4" Description="TeleportAILoction.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="2744" Vartype="Float" Bytesize="4" OffsetHex="00000AB8" Description="TeleportAILoction.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="2748" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000ABC" DisplayMethod="unsigned integer"/>
        <Element Offset="2752" Vartype="Pointer" Bytesize="8" OffsetHex="00000AC0" Description="TeleportTouch" DisplayMethod="unsigned integer"/>
        <Element Offset="2760" Vartype="Byte" Bytesize="1" OffsetHex="00000AC8" Description="IsXChange" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2761" Vartype="Byte" Bytesize="1" OffsetHex="00000AC9" Description="IsXChangeCDTime" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2768" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AD0" Description="HitAP" DisplayMethod="unsigned integer"/>
        <Element Offset="2772" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000AD4" DisplayMethod="unsigned integer"/>
        <Element Offset="2784" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000AE0" Description="Weapon1Name" DisplayMethod="unsigned integer"/>
        <Element Offset="2792" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000AE8" Description="Weapon2Name" DisplayMethod="unsigned integer"/>
        <Element Offset="2800" Vartype="Byte" Bytesize="1" OffsetHex="00000AF0" Description="IsXChangeCDTimeAll" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2801" Vartype="Byte" Bytesize="1" OffsetHex="00000AF1" Description="S_AirFire" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2802" Vartype="Byte" Bytesize="1" OffsetHex="00000AF2" Description="LockMouse" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2808" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AF8" Description="Click" DisplayMethod="unsigned integer"/>
        <Element Offset="2812" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000AFC" DisplayMethod="unsigned integer"/>
        <Element Offset="2824" Vartype="Byte" Bytesize="1" OffsetHex="00000B08" Description="IsUIMain?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2825" Vartype="Byte" Bytesize="1" OffsetHex="00000B09" Description="CIsNewPlayer_LightSword?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2826" Vartype="Byte" Bytesize="1" OffsetHex="00000B0A" Description="CIsNewPlayer_EMP?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2827" Vartype="Byte" Bytesize="1" OffsetHex="00000B0B" Description="CIsNewPlayer_Teleport?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2828" Vartype="Byte" Bytesize="1" OffsetHex="00000B0C" Description="CloseMission?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2829" Vartype="Byte" Bytesize="1" OffsetHex="00000B0D" Description="Teleport_TouchFinish" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2832" Vartype="Pointer" Bytesize="8" OffsetHex="00000B10" Description="WeaponHUD" DisplayMethod="unsigned integer"/>
        <Element Offset="2840" Vartype="Byte" Bytesize="1" OffsetHex="00000B18" Description="IsTeleport_Trace" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2844" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B1C" DisplayMethod="unsigned integer"/>
        <Element Offset="2848" Vartype="Pointer" Bytesize="8" OffsetHex="00000B20" Description="Rain_Par" DisplayMethod="unsigned integer"/>
        <Element Offset="2856" Vartype="Pointer" Bytesize="8" OffsetHex="00000B28" Description="Scren_HUD" DisplayMethod="unsigned integer"/>
        <Element Offset="2864" Vartype="Pointer" Bytesize="8" OffsetHex="00000B30" Description="LowHealthAudio" DisplayMethod="unsigned integer"/>
        <Element Offset="2872" Vartype="Pointer" Bytesize="8" OffsetHex="00000B38" Description="AddCameraBP" DisplayMethod="unsigned integer"/>
        <Element Offset="2880" Vartype="Byte" Bytesize="1" OffsetHex="00000B40" Description="IsAdd_Reloading?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2881" Vartype="Byte" Bytesize="1" OffsetHex="00000B41" Description="IsAdd_SelcetWeapon" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2888" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B48" DisplayMethod="unsigned integer"/>
        <Element Offset="2896" Vartype="Float" Bytesize="4" OffsetHex="00000B50" Description="WeaponAddTransform.Rotation.X" DisplayMethod="unsigned integer"/>
        <Element Offset="2900" Vartype="Float" Bytesize="4" OffsetHex="00000B54" Description="WeaponAddTransform.Rotation.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="2904" Vartype="Float" Bytesize="4" OffsetHex="00000B58" Description="WeaponAddTransform.Rotation.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="2908" Vartype="Float" Bytesize="4" OffsetHex="00000B5C" Description="WeaponAddTransform.Rotation.W" DisplayMethod="unsigned integer"/>
        <Element Offset="2912" Vartype="Float" Bytesize="4" OffsetHex="00000B60" Description="WeaponAddTransform.Translation.X" DisplayMethod="unsigned integer"/>
        <Element Offset="2916" Vartype="Float" Bytesize="4" OffsetHex="00000B64" Description="WeaponAddTransform.Translation.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="2920" Vartype="Float" Bytesize="4" OffsetHex="00000B68" Description="WeaponAddTransform.Translation.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="2924" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B6C" DisplayMethod="unsigned integer"/>
        <Element Offset="2928" Vartype="Float" Bytesize="4" OffsetHex="00000B70" Description="WeaponAddTransform.Scale3D.X" DisplayMethod="unsigned integer"/>
        <Element Offset="2932" Vartype="Float" Bytesize="4" OffsetHex="00000B74" Description="WeaponAddTransform.Scale3D.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="2936" Vartype="Float" Bytesize="4" OffsetHex="00000B78" Description="WeaponAddTransform.Scale3D.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="2940" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B7C" DisplayMethod="unsigned integer"/>
        <Element Offset="2944" Vartype="Float" Bytesize="4" OffsetHex="00000B80" Description="HandLocction.X" DisplayMethod="unsigned integer"/>
        <Element Offset="2948" Vartype="Float" Bytesize="4" OffsetHex="00000B84" Description="HandLocction.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="2952" Vartype="Float" Bytesize="4" OffsetHex="00000B88" Description="HandLocction.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="2956" Vartype="Float" Bytesize="4" OffsetHex="00000B8C" Description="HandRotator.Pitch" DisplayMethod="unsigned integer"/>
        <Element Offset="2960" Vartype="Float" Bytesize="4" OffsetHex="00000B90" Description="HandRotator.Yaw" DisplayMethod="unsigned integer"/>
        <Element Offset="2964" Vartype="Float" Bytesize="4" OffsetHex="00000B94" Description="HandRotator.Roll" DisplayMethod="unsigned integer"/>
        <Element Offset="2968" Vartype="Byte" Bytesize="1" OffsetHex="00000B98" Description="GER_TraceIsOK?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="2972" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B9C" DisplayMethod="unsigned integer"/>
        <Element Offset="2976" Vartype="Pointer" Bytesize="8" OffsetHex="00000BA0" Description="Weapon_FireUp" DisplayMethod="unsigned integer">
          <Structure Name="Weapon_FireUp[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="Float" Bytesize="4" OffsetHex="00000000" Description="[0] Weapon_FireUp" DisplayMethod="unsigned integer"/>
              <Element Offset="4" Vartype="Float" Bytesize="4" OffsetHex="00000004" Description="[1] Weapon_FireUp" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="Float" Bytesize="4" OffsetHex="00000008" Description="[2] Weapon_FireUp" DisplayMethod="unsigned integer"/>
              <Element Offset="12" Vartype="Float" Bytesize="4" OffsetHex="0000000C" Description="[3] Weapon_FireUp" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="Float" Bytesize="4" OffsetHex="00000010" Description="[4] Weapon_FireUp" DisplayMethod="unsigned integer"/>
              <Element Offset="20" Vartype="Float" Bytesize="4" OffsetHex="00000014" Description="[5] Weapon_FireUp" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="Float" Bytesize="4" OffsetHex="00000018" Description="[6] Weapon_FireUp" DisplayMethod="unsigned integer"/>
              <Element Offset="28" Vartype="Float" Bytesize="4" OffsetHex="0000001C" Description="[7] Weapon_FireUp" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="Float" Bytesize="4" OffsetHex="00000020" Description="[8] Weapon_FireUp" DisplayMethod="unsigned integer"/>
              <Element Offset="36" Vartype="Float" Bytesize="4" OffsetHex="00000024" Description="[9] Weapon_FireUp" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="Float" Bytesize="4" OffsetHex="00000028" Description="[10] Weapon_FireUp" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="2984" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000BA8" Description="Weapon_FireUp_size" DisplayMethod="unsigned integer"/>
        <Element Offset="2988" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000BAC" Description="Weapon_FireUp_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="2992" Vartype="Pointer" Bytesize="8" OffsetHex="00000BB0" Description="Weapon_FireDown" DisplayMethod="unsigned integer">
          <Structure Name="Weapon_FireDown[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="Float" Bytesize="4" OffsetHex="00000000" Description="[0] Weapon_FireDown" DisplayMethod="unsigned integer"/>
              <Element Offset="4" Vartype="Float" Bytesize="4" OffsetHex="00000004" Description="[1] Weapon_FireDown" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="Float" Bytesize="4" OffsetHex="00000008" Description="[2] Weapon_FireDown" DisplayMethod="unsigned integer"/>
              <Element Offset="12" Vartype="Float" Bytesize="4" OffsetHex="0000000C" Description="[3] Weapon_FireDown" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="Float" Bytesize="4" OffsetHex="00000010" Description="[4] Weapon_FireDown" DisplayMethod="unsigned integer"/>
              <Element Offset="20" Vartype="Float" Bytesize="4" OffsetHex="00000014" Description="[5] Weapon_FireDown" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="Float" Bytesize="4" OffsetHex="00000018" Description="[6] Weapon_FireDown" DisplayMethod="unsigned integer"/>
              <Element Offset="28" Vartype="Float" Bytesize="4" OffsetHex="0000001C" Description="[7] Weapon_FireDown" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="Float" Bytesize="4" OffsetHex="00000020" Description="[8] Weapon_FireDown" DisplayMethod="unsigned integer"/>
              <Element Offset="36" Vartype="Float" Bytesize="4" OffsetHex="00000024" Description="[9] Weapon_FireDown" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="Float" Bytesize="4" OffsetHex="00000028" Description="[10] Weapon_FireDown" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="3000" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000BB8" Description="Weapon_FireDown_size" DisplayMethod="unsigned integer"/>
        <Element Offset="3004" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000BBC" Description="Weapon_FireDown_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="3008" Vartype="Pointer" Bytesize="8" OffsetHex="00000BC0" Description="Weapon_FireLeft" DisplayMethod="unsigned integer">
          <Structure Name="Weapon_FireLeft[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="Float" Bytesize="4" OffsetHex="00000000" Description="[0] Weapon_FireLeft" DisplayMethod="unsigned integer"/>
              <Element Offset="4" Vartype="Float" Bytesize="4" OffsetHex="00000004" Description="[1] Weapon_FireLeft" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="Float" Bytesize="4" OffsetHex="00000008" Description="[2] Weapon_FireLeft" DisplayMethod="unsigned integer"/>
              <Element Offset="12" Vartype="Float" Bytesize="4" OffsetHex="0000000C" Description="[3] Weapon_FireLeft" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="Float" Bytesize="4" OffsetHex="00000010" Description="[4] Weapon_FireLeft" DisplayMethod="unsigned integer"/>
              <Element Offset="20" Vartype="Float" Bytesize="4" OffsetHex="00000014" Description="[5] Weapon_FireLeft" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="Float" Bytesize="4" OffsetHex="00000018" Description="[6] Weapon_FireLeft" DisplayMethod="unsigned integer"/>
              <Element Offset="28" Vartype="Float" Bytesize="4" OffsetHex="0000001C" Description="[7] Weapon_FireLeft" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="Float" Bytesize="4" OffsetHex="00000020" Description="[8] Weapon_FireLeft" DisplayMethod="unsigned integer"/>
              <Element Offset="36" Vartype="Float" Bytesize="4" OffsetHex="00000024" Description="[9] Weapon_FireLeft" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="Float" Bytesize="4" OffsetHex="00000028" Description="[10] Weapon_FireLeft" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="3016" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000BC8" Description="Weapon_FireLeft_size" DisplayMethod="unsigned integer"/>
        <Element Offset="3020" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000BCC" Description="Weapon_FireLeft_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="3024" Vartype="Pointer" Bytesize="8" OffsetHex="00000BD0" Description="Weapon_FireRight" DisplayMethod="unsigned integer">
          <Structure Name="Weapon_FireRight[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="Float" Bytesize="4" OffsetHex="00000000" Description="[0] Weapon_FireRight" DisplayMethod="unsigned integer"/>
              <Element Offset="4" Vartype="Float" Bytesize="4" OffsetHex="00000004" Description="[1] Weapon_FireRight" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="Float" Bytesize="4" OffsetHex="00000008" Description="[2] Weapon_FireRight" DisplayMethod="unsigned integer"/>
              <Element Offset="12" Vartype="Float" Bytesize="4" OffsetHex="0000000C" Description="[3] Weapon_FireRight" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="Float" Bytesize="4" OffsetHex="00000010" Description="[4] Weapon_FireRight" DisplayMethod="unsigned integer"/>
              <Element Offset="20" Vartype="Float" Bytesize="4" OffsetHex="00000014" Description="[5] Weapon_FireRight" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="Float" Bytesize="4" OffsetHex="00000018" Description="[6] Weapon_FireRight" DisplayMethod="unsigned integer"/>
              <Element Offset="28" Vartype="Float" Bytesize="4" OffsetHex="0000001C" Description="[7] Weapon_FireRight" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="Float" Bytesize="4" OffsetHex="00000020" Description="[8] Weapon_FireRight" DisplayMethod="unsigned integer"/>
              <Element Offset="36" Vartype="Float" Bytesize="4" OffsetHex="00000024" Description="[9] Weapon_FireRight" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="Float" Bytesize="4" OffsetHex="00000028" Description="[10] Weapon_FireRight" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="3032" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000BD8" Description="Weapon_FireRight_size" DisplayMethod="unsigned integer"/>
        <Element Offset="3036" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000BDC" Description="Weapon_FireRight_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="3040" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000BE0" Description="WeaponFire_Get" DisplayMethod="unsigned integer"/>
        <Element Offset="3044" Vartype="Float" Bytesize="4" OffsetHex="00000BE4" Description="AddFov" DisplayMethod="unsigned integer"/>
        <Element Offset="3048" Vartype="Byte" Bytesize="1" OffsetHex="00000BE8" Description="UnAddLightSword" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3049" Vartype="Byte" Bytesize="1" OffsetHex="00000BE9" Description="IsPressShift_Add" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3052" Vartype="Float" Bytesize="4" OffsetHex="00000BEC" Description="WeaponUD_Recoil_Min" DisplayMethod="unsigned integer"/>
        <Element Offset="3056" Vartype="Float" Bytesize="4" OffsetHex="00000BF0" Description="WeaponUD_Recoil_Max" DisplayMethod="unsigned integer"/>
        <Element Offset="3060" Vartype="Float" Bytesize="4" OffsetHex="00000BF4" Description="WeaponLR_Recoil_Min" DisplayMethod="unsigned integer"/>
        <Element Offset="3064" Vartype="Float" Bytesize="4" OffsetHex="00000BF8" Description="WeaponLR_Recoil_Max" DisplayMethod="unsigned integer"/>
        <Element Offset="3068" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000BFC" DisplayMethod="unsigned integer"/>
        <Element Offset="3072" Vartype="Pointer" Bytesize="8" OffsetHex="00000C00" Description="WeaponFire_Shake" DisplayMethod="unsigned integer">
          <Structure Name="WeaponFire_Shake[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="Pointer" Bytesize="8" OffsetHex="00000000" Description="[0] WeaponFire_Shake" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="Pointer" Bytesize="8" OffsetHex="00000008" Description="[1] WeaponFire_Shake" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="Pointer" Bytesize="8" OffsetHex="00000010" Description="[2] WeaponFire_Shake" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="Pointer" Bytesize="8" OffsetHex="00000018" Description="[3] WeaponFire_Shake" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="Pointer" Bytesize="8" OffsetHex="00000020" Description="[4] WeaponFire_Shake" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="Pointer" Bytesize="8" OffsetHex="00000028" Description="[5] WeaponFire_Shake" DisplayMethod="unsigned integer"/>
              <Element Offset="48" Vartype="Pointer" Bytesize="8" OffsetHex="00000030" Description="[6] WeaponFire_Shake" DisplayMethod="unsigned integer"/>
              <Element Offset="56" Vartype="Pointer" Bytesize="8" OffsetHex="00000038" Description="[7] WeaponFire_Shake" DisplayMethod="unsigned integer"/>
              <Element Offset="64" Vartype="Pointer" Bytesize="8" OffsetHex="00000040" Description="[8] WeaponFire_Shake" DisplayMethod="unsigned integer"/>
              <Element Offset="72" Vartype="Pointer" Bytesize="8" OffsetHex="00000048" Description="[9] WeaponFire_Shake" DisplayMethod="unsigned integer"/>
              <Element Offset="80" Vartype="Pointer" Bytesize="8" OffsetHex="00000050" Description="[10] WeaponFire_Shake" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="3080" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C08" Description="WeaponFire_Shake_size" DisplayMethod="unsigned integer"/>
        <Element Offset="3084" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C0C" Description="WeaponFire_Shake_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="3088" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C10" Description="WeaponFire_Type" DisplayMethod="unsigned integer"/>
        <Element Offset="3092" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C14" Description="WeaponFireCount" DisplayMethod="unsigned integer"/>
        <Element Offset="3096" Vartype="Float" Bytesize="4" OffsetHex="00000C18" Description="Climb_WallHeight.X" DisplayMethod="unsigned integer"/>
        <Element Offset="3100" Vartype="Float" Bytesize="4" OffsetHex="00000C1C" Description="Climb_WallHeight.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="3104" Vartype="Float" Bytesize="4" OffsetHex="00000C20" Description="Climb_WallHeight.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="3108" Vartype="Float" Bytesize="4" OffsetHex="00000C24" Description="Climb_WallNormal.X" DisplayMethod="unsigned integer"/>
        <Element Offset="3112" Vartype="Float" Bytesize="4" OffsetHex="00000C28" Description="Climb_WallNormal.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="3116" Vartype="Float" Bytesize="4" OffsetHex="00000C2C" Description="Climb_WallNormal.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="3120" Vartype="Float" Bytesize="4" OffsetHex="00000C30" Description="Climb_WallPoint.X" DisplayMethod="unsigned integer"/>
        <Element Offset="3124" Vartype="Float" Bytesize="4" OffsetHex="00000C34" Description="Climb_WallPoint.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="3128" Vartype="Float" Bytesize="4" OffsetHex="00000C38" Description="Climb_WallPoint.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="3132" Vartype="Byte" Bytesize="1" OffsetHex="00000C3C" Description="CanClimbTrace?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3133" Vartype="Byte" Bytesize="1" OffsetHex="00000C3D" Description="IsClimb" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3134" Vartype="Byte" Bytesize="1" OffsetHex="00000C3E" Description="CanPressClimb" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3135" Vartype="Byte" Bytesize="1" OffsetHex="00000C3F" Description="IsBoom" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3136" Vartype="Byte" Bytesize="1" OffsetHex="00000C40" Description="IsBoomCDTime" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3137" Vartype="Byte" Bytesize="1" OffsetHex="00000C41" Description="Is_Press_SkillBoomP1" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3138" Vartype="Byte" Bytesize="1" OffsetHex="00000C42" Description="Is_Press_SkillBoomP2" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3139" Vartype="Byte" Bytesize="1" OffsetHex="00000C43" Description="IsBoom_AddDamgeTime" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3144" Vartype="Pointer" Bytesize="8" OffsetHex="00000C48" Description="DefuBossTeleportTag" DisplayMethod="unsigned integer">
          <Structure Name="DefuBossTeleportTag[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000000" Description="[0] DefuBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000008" Description="[1] DefuBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000010" Description="[2] DefuBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000018" Description="[3] DefuBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000020" Description="[4] DefuBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000028" Description="[5] DefuBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="48" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000030" Description="[6] DefuBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="56" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000038" Description="[7] DefuBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="64" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000040" Description="[8] DefuBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="72" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000048" Description="[9] DefuBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="80" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000050" Description="[10] DefuBossTeleportTag" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="3152" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C50" Description="DefuBossTeleportTag_size" DisplayMethod="unsigned integer"/>
        <Element Offset="3156" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C54" Description="DefuBossTeleportTag_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="3160" Vartype="Pointer" Bytesize="8" OffsetHex="00000C58" Description="IsLockBossTeleportTag" DisplayMethod="unsigned integer">
          <Structure Name="IsLockBossTeleportTag[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000000" Description="[0] IsLockBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000008" Description="[1] IsLockBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000010" Description="[2] IsLockBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000018" Description="[3] IsLockBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000020" Description="[4] IsLockBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000028" Description="[5] IsLockBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="48" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000030" Description="[6] IsLockBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="56" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000038" Description="[7] IsLockBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="64" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000040" Description="[8] IsLockBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="72" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000048" Description="[9] IsLockBossTeleportTag" DisplayMethod="unsigned integer"/>
              <Element Offset="80" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000050" Description="[10] IsLockBossTeleportTag" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="3168" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C60" Description="IsLockBossTeleportTag_size" DisplayMethod="unsigned integer"/>
        <Element Offset="3172" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C64" Description="IsLockBossTeleportTag_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="3176" Vartype="Byte" Bytesize="1" OffsetHex="00000C68" Description="IsBoom_HandAnim" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3177" Vartype="Byte" Bytesize="1" OffsetHex="00000C69" Description="CanLightSwordQTE?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3178" Vartype="Byte" Bytesize="1" OffsetHex="00000C6A" Description="IsCheckSwing" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3179" Vartype="Byte" Bytesize="1" OffsetHex="00000C6B" Description="IsVR" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3180" Vartype="Float" Bytesize="4" OffsetHex="00000C6C" Description="WeaponShakeScale" DisplayMethod="unsigned integer"/>
        <Element Offset="3184" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C70" Description="WeaponID_Pre" DisplayMethod="unsigned integer"/>
        <Element Offset="3188" Vartype="Byte" Bytesize="1" OffsetHex="00000C74" Description="First_Boom" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3192" Vartype="Float" Bytesize="4" OffsetHex="00000C78" Description="+shun_Velocity" DisplayMethod="unsigned integer"/>
        <Element Offset="3196" Vartype="Float" Bytesize="4" OffsetHex="00000C7C" Description="-shun_Velocity" DisplayMethod="unsigned integer"/>
        <Element Offset="3200" Vartype="Byte" Bytesize="1" OffsetHex="00000C80" Description="IsShun" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3201" Vartype="Byte" Bytesize="1" OffsetHex="00000C81" Description="IsShun_CDTime" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3202" Vartype="Byte" Bytesize="1" OffsetHex="00000C82" Description="NeedInSeclectWeapon_Active" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3203" Vartype="Byte" Bytesize="1" OffsetHex="00000C83" Description="NeedClimbOverSeclectWeapon" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3204" Vartype="Byte" Bytesize="1" OffsetHex="00000C84" Description="HookRot" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3208" Vartype="Pointer" Bytesize="8" OffsetHex="00000C88" Description="Hook_PlayerFoot" DisplayMethod="unsigned integer"/>
        <Element Offset="3216" Vartype="Byte" Bytesize="1" OffsetHex="00000C90" Description="OneInSwing" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3217" Vartype="Byte" Bytesize="1" OffsetHex="00000C91" Description="InSwingArea?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3220" Vartype="Float" Bytesize="4" OffsetHex="00000C94" Description="Swing_HandHide_Distance" DisplayMethod="unsigned integer"/>
        <Element Offset="3224" Vartype="Float" Bytesize="4" OffsetHex="00000C98" Description="Swing_HandVis_Distance" DisplayMethod="unsigned integer"/>
        <Element Offset="3228" Vartype="Byte" Bytesize="1" OffsetHex="00000C9C" Description="InPickUpArea?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3229" Vartype="Byte" Bytesize="1" OffsetHex="00000C9D" Description="PickUpHUD_IsDisplay?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3230" Vartype="Byte" Bytesize="1" OffsetHex="00000C9E" Description="IsTracePickUpPress" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3232" Vartype="Pointer" Bytesize="8" OffsetHex="00000CA0" Description="PickUp_BP" DisplayMethod="unsigned integer"/>
        <Element Offset="3240" Vartype="Byte" Bytesize="1" OffsetHex="00000CA8" Description="IsPickUpPreview?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3244" Vartype="Float" Bytesize="4" OffsetHex="00000CAC" Description="NowMouseLoc" DisplayMethod="unsigned integer"/>
        <Element Offset="3248" Vartype="Byte" Bytesize="1" OffsetHex="00000CB0" Description="PreviewModeLMouse?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3249" Vartype="Byte" Bytesize="1" OffsetHex="00000CB1" Description="CanBackPreview?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3250" Vartype="Byte" Bytesize="1" OffsetHex="00000CB2" Description="NoCDMode?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3251" Vartype="Byte" Bytesize="1" OffsetHex="00000CB3" Description="CanVisRain?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3252" Vartype="Byte" Bytesize="1" OffsetHex="00000CB4" Description="PlayerInSpawn?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3253" Vartype="Byte" Bytesize="1" OffsetHex="00000CB5" Description="IsCanClick?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3256" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000CB8" Description="OverClick" DisplayMethod="unsigned integer"/>
        <Element Offset="3260" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000CBC" DisplayMethod="unsigned integer"/>
        <Element Offset="3272" Vartype="Byte" Bytesize="1" OffsetHex="00000CC8" Description="GM_CanUseLightSword?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3273" Vartype="Byte" Bytesize="1" OffsetHex="00000CC9" Description="GM_CanUseTeleport" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3274" Vartype="Byte" Bytesize="1" OffsetHex="00000CCA" Description="GM_CanUseXChange" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3275" Vartype="Byte" Bytesize="1" OffsetHex="00000CCB" Description="GM_CanUseBoom" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3276" Vartype="Byte" Bytesize="1" OffsetHex="00000CCC" Description="CIsNewPlayer_AllSkill?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3280" Vartype="Pointer" Bytesize="8" OffsetHex="00000CD0" Description="LightSwordMesh" DisplayMethod="unsigned integer"/>
        <Element Offset="3288" Vartype="Byte" Bytesize="1" OffsetHex="00000CD8" Description="IsAmmoHit?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3289" Vartype="Byte" Bytesize="1" OffsetHex="00000CD9" Description="NoSelectWeapon" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3290" Vartype="Byte" Bytesize="1" OffsetHex="00000CDA" Description="InUseArea" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3296" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000CE0" Description="Level_Use" DisplayMethod="unsigned integer"/>
        <Element Offset="3300" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000CE4" DisplayMethod="unsigned integer"/>
        <Element Offset="3312" Vartype="Byte" Bytesize="1" OffsetHex="00000CF0" Description="IsHandAnimTime" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3313" Vartype="Byte" Bytesize="1" OffsetHex="00000CF1" Description="IsHuaDown" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3320" Vartype="Pointer" Bytesize="8" OffsetHex="00000CF8" Description="HitBlood" DisplayMethod="unsigned integer"/>
        <Element Offset="3328" Vartype="Float" Bytesize="4" OffsetHex="00000D00" Description="TelePortSpeed" DisplayMethod="unsigned integer"/>
        <Element Offset="3332" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D04" DisplayMethod="unsigned integer"/>
        <Element Offset="3336" Vartype="Pointer" Bytesize="8" OffsetHex="00000D08" Description="RainPostProcess_Open.Array" DisplayMethod="unsigned integer">
          <Structure Name="WeightedBlendable[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="Float" Bytesize="4" OffsetHex="00000000" Description="[0] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="4" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000004" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="Pointer" Bytesize="8" OffsetHex="00000008" Description="[0] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="Float" Bytesize="4" OffsetHex="00000010" Description="[1] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="20" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000014" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="Pointer" Bytesize="8" OffsetHex="00000018" Description="[1] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="Float" Bytesize="4" OffsetHex="00000020" Description="[2] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="36" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000024" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="Pointer" Bytesize="8" OffsetHex="00000028" Description="[2] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="48" Vartype="Float" Bytesize="4" OffsetHex="00000030" Description="[3] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="52" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000034" DisplayMethod="unsigned integer"/>
              <Element Offset="56" Vartype="Pointer" Bytesize="8" OffsetHex="00000038" Description="[3] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="64" Vartype="Float" Bytesize="4" OffsetHex="00000040" Description="[4] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="68" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000044" DisplayMethod="unsigned integer"/>
              <Element Offset="72" Vartype="Pointer" Bytesize="8" OffsetHex="00000048" Description="[4] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="80" Vartype="Float" Bytesize="4" OffsetHex="00000050" Description="[5] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="84" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000054" DisplayMethod="unsigned integer"/>
              <Element Offset="88" Vartype="Pointer" Bytesize="8" OffsetHex="00000058" Description="[5] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="96" Vartype="Float" Bytesize="4" OffsetHex="00000060" Description="[6] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="100" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000064" DisplayMethod="unsigned integer"/>
              <Element Offset="104" Vartype="Pointer" Bytesize="8" OffsetHex="00000068" Description="[6] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="112" Vartype="Float" Bytesize="4" OffsetHex="00000070" Description="[7] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="116" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000074" DisplayMethod="unsigned integer"/>
              <Element Offset="120" Vartype="Pointer" Bytesize="8" OffsetHex="00000078" Description="[7] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="128" Vartype="Float" Bytesize="4" OffsetHex="00000080" Description="[8] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="132" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000084" DisplayMethod="unsigned integer"/>
              <Element Offset="136" Vartype="Pointer" Bytesize="8" OffsetHex="00000088" Description="[8] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="144" Vartype="Float" Bytesize="4" OffsetHex="00000090" Description="[9] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="148" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000094" DisplayMethod="unsigned integer"/>
              <Element Offset="152" Vartype="Pointer" Bytesize="8" OffsetHex="00000098" Description="[9] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="160" Vartype="Float" Bytesize="4" OffsetHex="000000A0" Description="[10] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="164" Vartype="4 Bytes" Bytesize="4" OffsetHex="000000A4" DisplayMethod="unsigned integer"/>
              <Element Offset="168" Vartype="Pointer" Bytesize="8" OffsetHex="000000A8" Description="[10] Object" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="3344" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D10" Description="RainPostProcess_Open.Array_size" DisplayMethod="unsigned integer"/>
        <Element Offset="3348" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D14" Description="RainPostProcess_Open.Array_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="3352" Vartype="Pointer" Bytesize="8" OffsetHex="00000D18" Description="RainPostProcess_Close.Array" DisplayMethod="unsigned integer">
          <Structure Name="WeightedBlendable[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="Float" Bytesize="4" OffsetHex="00000000" Description="[0] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="4" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000004" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="Pointer" Bytesize="8" OffsetHex="00000008" Description="[0] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="Float" Bytesize="4" OffsetHex="00000010" Description="[1] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="20" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000014" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="Pointer" Bytesize="8" OffsetHex="00000018" Description="[1] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="Float" Bytesize="4" OffsetHex="00000020" Description="[2] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="36" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000024" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="Pointer" Bytesize="8" OffsetHex="00000028" Description="[2] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="48" Vartype="Float" Bytesize="4" OffsetHex="00000030" Description="[3] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="52" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000034" DisplayMethod="unsigned integer"/>
              <Element Offset="56" Vartype="Pointer" Bytesize="8" OffsetHex="00000038" Description="[3] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="64" Vartype="Float" Bytesize="4" OffsetHex="00000040" Description="[4] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="68" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000044" DisplayMethod="unsigned integer"/>
              <Element Offset="72" Vartype="Pointer" Bytesize="8" OffsetHex="00000048" Description="[4] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="80" Vartype="Float" Bytesize="4" OffsetHex="00000050" Description="[5] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="84" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000054" DisplayMethod="unsigned integer"/>
              <Element Offset="88" Vartype="Pointer" Bytesize="8" OffsetHex="00000058" Description="[5] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="96" Vartype="Float" Bytesize="4" OffsetHex="00000060" Description="[6] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="100" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000064" DisplayMethod="unsigned integer"/>
              <Element Offset="104" Vartype="Pointer" Bytesize="8" OffsetHex="00000068" Description="[6] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="112" Vartype="Float" Bytesize="4" OffsetHex="00000070" Description="[7] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="116" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000074" DisplayMethod="unsigned integer"/>
              <Element Offset="120" Vartype="Pointer" Bytesize="8" OffsetHex="00000078" Description="[7] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="128" Vartype="Float" Bytesize="4" OffsetHex="00000080" Description="[8] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="132" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000084" DisplayMethod="unsigned integer"/>
              <Element Offset="136" Vartype="Pointer" Bytesize="8" OffsetHex="00000088" Description="[8] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="144" Vartype="Float" Bytesize="4" OffsetHex="00000090" Description="[9] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="148" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000094" DisplayMethod="unsigned integer"/>
              <Element Offset="152" Vartype="Pointer" Bytesize="8" OffsetHex="00000098" Description="[9] Object" DisplayMethod="unsigned integer"/>
              <Element Offset="160" Vartype="Float" Bytesize="4" OffsetHex="000000A0" Description="[10] Weight" DisplayMethod="unsigned integer"/>
              <Element Offset="164" Vartype="4 Bytes" Bytesize="4" OffsetHex="000000A4" DisplayMethod="unsigned integer"/>
              <Element Offset="168" Vartype="Pointer" Bytesize="8" OffsetHex="000000A8" Description="[10] Object" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="3360" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D20" Description="RainPostProcess_Close.Array_size" DisplayMethod="unsigned integer"/>
        <Element Offset="3364" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D24" Description="RainPostProcess_Close.Array_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="3368" Vartype="Pointer" Bytesize="8" OffsetHex="00000D28" Description="TelePort_TA_Cache" DisplayMethod="unsigned integer"/>
        <Element Offset="3376" Vartype="Float" Bytesize="4" OffsetHex="00000D30" Description="TeleportAI_Z.X" DisplayMethod="unsigned integer"/>
        <Element Offset="3380" Vartype="Float" Bytesize="4" OffsetHex="00000D34" Description="TeleportAI_Z.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="3384" Vartype="Float" Bytesize="4" OffsetHex="00000D38" Description="TeleportAI_Z.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="3388" Vartype="Byte" Bytesize="1" OffsetHex="00000D3C" Description="CIsNewPlayer_LightSwordQTE?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3389" Vartype="Byte" Bytesize="1" OffsetHex="00000D3D" Description="CIsNewPlayer_LightSword_IsFinish?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3390" Vartype="Byte" Bytesize="1" OffsetHex="00000D3E" Description="IsNewPlayer_Shun" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3391" Vartype="Byte" Bytesize="1" OffsetHex="00000D3F" Description="IsCanAdd" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3392" Vartype="Byte" Bytesize="1" OffsetHex="00000D40" Description="PlayerIsAirFire" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3393" Vartype="Byte" Bytesize="1" OffsetHex="00000D41" Description="SettingPressAdd?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3400" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D48" Description="PickUpSendLevelEvent" DisplayMethod="unsigned integer"/>
        <Element Offset="3404" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000D4C" DisplayMethod="unsigned integer"/>
        <Element Offset="3416" Vartype="Pointer" Bytesize="8" OffsetHex="00000D58" Description="SkillShopBP" DisplayMethod="unsigned integer"/>
        <Element Offset="3424" Vartype="Byte" Bytesize="1" OffsetHex="00000D60" Description="IsSkillShop?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3428" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D64" DisplayMethod="unsigned integer"/>
        <Element Offset="3432" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D68" Description="CloseNewPlayerXPHUD" DisplayMethod="unsigned integer"/>
        <Element Offset="3436" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000D6C" DisplayMethod="unsigned integer"/>
        <Element Offset="3448" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000D78" Description="Weapon3Name" DisplayMethod="unsigned integer"/>
        <Element Offset="3456" Vartype="Byte" Bytesize="1" OffsetHex="00000D80" Description="WeaponID3_NoAmmo" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3457" Vartype="Byte" Bytesize="1" OffsetHex="00000D81" Description="IsUpDateSkinFinish?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3460" Vartype="Float" Bytesize="4" OffsetHex="00000D84" Description="Mouse_XY_Rate" DisplayMethod="unsigned integer"/>
        <Element Offset="3464" Vartype="Float" Bytesize="4" OffsetHex="00000D88" Description="GamePad_X_Rate" DisplayMethod="unsigned integer"/>
        <Element Offset="3468" Vartype="Byte" Bytesize="1" OffsetHex="00000D8C" Description="MouseX_Reversal?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3469" Vartype="Byte" Bytesize="1" OffsetHex="00000D8D" Description="MouseY_Reversal?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3470" Vartype="Byte" Bytesize="1" OffsetHex="00000D8E" Description="PressCrouch?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3471" Vartype="Byte" Bytesize="1" OffsetHex="00000D8F" Description="Subtitle?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3472" Vartype="Byte" Bytesize="1" OffsetHex="00000D90" Description="WeaponHUD?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3473" Vartype="Byte" Bytesize="1" OffsetHex="00000D91" Description="Score?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3476" Vartype="Float" Bytesize="4" OffsetHex="00000D94" Description="TelePortSpeedFrame" DisplayMethod="unsigned integer"/>
        <Element Offset="3480" Vartype="Byte" Bytesize="1" OffsetHex="00000D98" Description="IsOpenLightSwordQTE2_NewPlayer?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3481" Vartype="Byte" Bytesize="1" OffsetHex="00000D99" Description="CIsNewPlayer_LightSwordQTE2?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3482" Vartype="Byte" Bytesize="1" OffsetHex="00000D9A" Description="IsLeaveGround?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3484" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D9C" Description="Achivment_DoageNumber" DisplayMethod="unsigned integer"/>
        <Element Offset="3488" Vartype="Byte" Bytesize="1" OffsetHex="00000DA0" Description="GM_CanUseLightSwordQTE1?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3489" Vartype="Byte" Bytesize="1" OffsetHex="00000DA1" Description="GM_CanUseLightSwordQTE2?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3490" Vartype="Byte" Bytesize="1" OffsetHex="00000DA2" Description="GM_CanUseDodge?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3491" Vartype="Byte" Bytesize="1" OffsetHex="00000DA3" Description="PlayerInSpawn_Skill?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3492" Vartype="Byte" Bytesize="1" OffsetHex="00000DA4" Description="NewPlayer_LightSword_PlayerNoUse" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3493" Vartype="Byte" Bytesize="1" OffsetHex="00000DA5" Description="Shun_PressA" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3494" Vartype="Byte" Bytesize="1" OffsetHex="00000DA6" Description="Shun_PressS" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3495" Vartype="Byte" Bytesize="1" OffsetHex="00000DA7" Description="Shun_PressD" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3496" Vartype="Byte" Bytesize="1" OffsetHex="00000DA8" Description="IsHoldBack" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3497" Vartype="Byte" Bytesize="1" OffsetHex="00000DA9" Description="IsAutoAnim?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3500" Vartype="Float" Bytesize="4" OffsetHex="00000DAC" Description="TelePortDealyRestCollision" DisplayMethod="unsigned integer"/>
        <Element Offset="3504" Vartype="Byte" Bytesize="1" OffsetHex="00000DB0" Description="SettingPressAddtoReload" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3505" Vartype="Byte" Bytesize="1" OffsetHex="00000DB1" Description="HideAllHUD?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3506" Vartype="Byte" Bytesize="1" OffsetHex="00000DB2" Description="SettingPressRun?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3507" Vartype="Byte" Bytesize="1" OffsetHex="00000DB3" Description="FeedBack?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3508" Vartype="Byte" Bytesize="1" OffsetHex="00000DB4" Description="PlayerMoveSpeed=500" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3512" Vartype="Pointer" Bytesize="8" OffsetHex="00000DB8" Description="ZhunXinVar" DisplayMethod="unsigned integer"/>
        <Element Offset="3520" Vartype="Byte" Bytesize="1" OffsetHex="00000DC0" Description="FighterReady?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3521" Vartype="Byte" Bytesize="1" OffsetHex="00000DC1" Description="MetaLastFire?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3522" Vartype="Byte" Bytesize="1" OffsetHex="00000DC2" Description="NoAutoFireIntervalsFinish?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3523" Vartype="Byte" Bytesize="1" OffsetHex="00000DC3" Description="IsUpLightSwordTime" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3524" Vartype="Byte" Bytesize="1" OffsetHex="00000DC4" Description="JumpAttack_SongKai?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3525" Vartype="Byte" Bytesize="1" OffsetHex="00000DC5" Description="IsJumpAttackTime" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3526" Vartype="Byte" Bytesize="1" OffsetHex="00000DC6" Description="CanDouJump" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3527" Vartype="Byte" Bytesize="1" OffsetHex="00000DC7" Description="DouJumpIsOver" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3528" Vartype="Byte" Bytesize="1" OffsetHex="00000DC8" Description="JumpAttackHeightNo" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3529" Vartype="Byte" Bytesize="1" OffsetHex="00000DC9" Description="IsDefuLightSwordTime" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3530" Vartype="Byte" Bytesize="1" OffsetHex="00000DCA" Description="IsDefuLightSwordAnim" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3531" Vartype="Byte" Bytesize="1" OffsetHex="00000DCB" Description="UpLightSwordSongKai?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3532" Vartype="Float" Bytesize="4" OffsetHex="00000DCC" Description="MaxDefuSpeed" DisplayMethod="unsigned integer"/>
        <Element Offset="3536" Vartype="Byte" Bytesize="1" OffsetHex="00000DD0" Description="IsAirJumpAttack?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3537" Vartype="Byte" Bytesize="1" OffsetHex="00000DD1" Description="IsQYQTime" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3538" Vartype="Byte" Bytesize="1" OffsetHex="00000DD2" Description="IsQYQCrossHairCheck" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3544" Vartype="Pointer" Bytesize="8" OffsetHex="00000DD8" Description="QYQComp" DisplayMethod="unsigned integer"/>
        <Element Offset="3552" Vartype="Pointer" Bytesize="8" OffsetHex="00000DE0" Description="QYQActor" DisplayMethod="unsigned integer"/>
        <Element Offset="3560" Vartype="Byte" Bytesize="1" OffsetHex="00000DE8" Description="IsEMPTime" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3561" Vartype="Byte" Bytesize="1" OffsetHex="00000DE9" Description="MeleeSongKai?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3562" Vartype="Byte" Bytesize="1" OffsetHex="00000DEA" Description="IsMeleePowerAnim" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3564" Vartype="Float" Bytesize="4" OffsetHex="00000DEC" Description="TurnRots" DisplayMethod="unsigned integer"/>
        <Element Offset="3568" Vartype="Byte" Bytesize="1" OffsetHex="00000DF0" Description="IsHuaChanTime" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3572" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000DF4" Description="SSwordFireType" DisplayMethod="unsigned integer"/>
        <Element Offset="3576" Vartype="Float" Bytesize="4" OffsetHex="00000DF8" Description="MeleePowerAIFlyLoc.X" DisplayMethod="unsigned integer"/>
        <Element Offset="3580" Vartype="Float" Bytesize="4" OffsetHex="00000DFC" Description="MeleePowerAIFlyLoc.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="3584" Vartype="Float" Bytesize="4" OffsetHex="00000E00" Description="MeleePowerAIFlyLoc.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="3588" Vartype="Byte" Bytesize="1" OffsetHex="00000E04" Description="CanUseAITelePort" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3589" Vartype="Byte" Bytesize="1" OffsetHex="00000E05" Description="IsQYQAITime" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3592" Vartype="Pointer" Bytesize="8" OffsetHex="00000E08" Description="QYQAI" DisplayMethod="unsigned integer"/>
        <Element Offset="3600" Vartype="Pointer" Bytesize="8" OffsetHex="00000E10" Description="AI_Capsule" DisplayMethod="unsigned integer"/>
        <Element Offset="3608" Vartype="Float" Bytesize="4" OffsetHex="00000E18" Description="ZhaDiSpawnLoc.X" DisplayMethod="unsigned integer"/>
        <Element Offset="3612" Vartype="Float" Bytesize="4" OffsetHex="00000E1C" Description="ZhaDiSpawnLoc.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="3616" Vartype="Float" Bytesize="4" OffsetHex="00000E20" Description="ZhaDiSpawnLoc.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="3620" Vartype="Byte" Bytesize="1" OffsetHex="00000E24" Description="QYQAIIsFly?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3621" Vartype="Byte" Bytesize="1" OffsetHex="00000E25" Description="IsDefuLightSwordKeyTime" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3624" Vartype="Pointer" Bytesize="8" OffsetHex="00000E28" Description="LightDefuBP" DisplayMethod="unsigned integer"/>
        <Element Offset="3632" Vartype="Byte" Bytesize="1" OffsetHex="00000E30" Description="IsDefuLightAnimLoop" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3633" Vartype="Byte" Bytesize="1" OffsetHex="00000E31" Description="IsDefuAll" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3636" Vartype="Float" Bytesize="4" OffsetHex="00000E34" Description="ClimbForwardWallLoc.X" DisplayMethod="unsigned integer"/>
        <Element Offset="3640" Vartype="Float" Bytesize="4" OffsetHex="00000E38" Description="ClimbForwardWallLoc.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="3644" Vartype="Float" Bytesize="4" OffsetHex="00000E3C" Description="ClimbForwardWallLoc.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="3648" Vartype="Float" Bytesize="4" OffsetHex="00000E40" Description="ClimbStart.X" DisplayMethod="unsigned integer"/>
        <Element Offset="3652" Vartype="Float" Bytesize="4" OffsetHex="00000E44" Description="ClimbStart.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="3656" Vartype="Float" Bytesize="4" OffsetHex="00000E48" Description="ClimbStart.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="3660" Vartype="Float" Bytesize="4" OffsetHex="00000E4C" Description="ClimbEnd.X" DisplayMethod="unsigned integer"/>
        <Element Offset="3664" Vartype="Float" Bytesize="4" OffsetHex="00000E50" Description="ClimbEnd.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="3668" Vartype="Float" Bytesize="4" OffsetHex="00000E54" Description="ClimbEnd.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="3672" Vartype="Float" Bytesize="4" OffsetHex="00000E58" Description="ClimbTraceHeight.X" DisplayMethod="unsigned integer"/>
        <Element Offset="3676" Vartype="Float" Bytesize="4" OffsetHex="00000E5C" Description="ClimbTraceHeight.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="3680" Vartype="Float" Bytesize="4" OffsetHex="00000E60" Description="ClimbTraceHeight.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="3684" Vartype="Float" Bytesize="4" OffsetHex="00000E64" Description="FinalTraceClimbPonit.X" DisplayMethod="unsigned integer"/>
        <Element Offset="3688" Vartype="Float" Bytesize="4" OffsetHex="00000E68" Description="FinalTraceClimbPonit.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="3692" Vartype="Float" Bytesize="4" OffsetHex="00000E6C" Description="FinalTraceClimbPonit.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="3696" Vartype="Byte" Bytesize="1" OffsetHex="00000E70" Description="IsTraceClimbWall" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3697" Vartype="Byte" Bytesize="1" OffsetHex="00000E71" Description="IsPlayerUsedClimb" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3698" Vartype="Byte" Bytesize="1" OffsetHex="00000E72" Description="IsPlayerCanClimb" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3700" Vartype="Float" Bytesize="4" OffsetHex="00000E74" Description="ClimbRot.Pitch" DisplayMethod="unsigned integer"/>
        <Element Offset="3704" Vartype="Float" Bytesize="4" OffsetHex="00000E78" Description="ClimbRot.Yaw" DisplayMethod="unsigned integer"/>
        <Element Offset="3708" Vartype="Float" Bytesize="4" OffsetHex="00000E7C" Description="ClimbRot.Roll" DisplayMethod="unsigned integer"/>
        <Element Offset="3712" Vartype="Float" Bytesize="4" OffsetHex="00000E80" Description="ClimbRotZ" DisplayMethod="unsigned integer"/>
        <Element Offset="3716" Vartype="Float" Bytesize="4" OffsetHex="00000E84" Description="ClimbStartZ" DisplayMethod="unsigned integer"/>
        <Element Offset="3720" Vartype="Float" Bytesize="4" OffsetHex="00000E88" Description="ClimbMiddleZ" DisplayMethod="unsigned integer"/>
        <Element Offset="3724" Vartype="Byte" Bytesize="1" OffsetHex="00000E8C" Description="PlayerVSGroundHeightis&gt;200" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3725" Vartype="Byte" Bytesize="1" OffsetHex="00000E8D" Description="IsAirSkillDouJumpTime?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3726" Vartype="Byte" Bytesize="1" OffsetHex="00000E8E" Description="IsAirSkillUpLightSword?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3727" Vartype="Byte" Bytesize="1" OffsetHex="00000E8F" Description="IsSpeedClimb?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3728" Vartype="Byte" Bytesize="1" OffsetHex="00000E90" Description="IsPlayerClimbTime" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3729" Vartype="Byte" Bytesize="1" OffsetHex="00000E91" Description="IsWallRun" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3730" Vartype="Byte" Bytesize="1" OffsetHex="00000E92" Description="IsLeftWallRun" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3736" Vartype="Pointer" Bytesize="8" OffsetHex="00000E98" Description="RunWallLineBp" DisplayMethod="unsigned integer"/>
        <Element Offset="3744" Vartype="Float" Bytesize="4" OffsetHex="00000EA0" Description="RunWallRot.Pitch" DisplayMethod="unsigned integer"/>
        <Element Offset="3748" Vartype="Float" Bytesize="4" OffsetHex="00000EA4" Description="RunWallRot.Yaw" DisplayMethod="unsigned integer"/>
        <Element Offset="3752" Vartype="Float" Bytesize="4" OffsetHex="00000EA8" Description="RunWallRot.Roll" DisplayMethod="unsigned integer"/>
        <Element Offset="3756" Vartype="Float" Bytesize="4" OffsetHex="00000EAC" Description="RunWallLoc.X" DisplayMethod="unsigned integer"/>
        <Element Offset="3760" Vartype="Float" Bytesize="4" OffsetHex="00000EB0" Description="RunWallLoc.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="3764" Vartype="Float" Bytesize="4" OffsetHex="00000EB4" Description="RunWallLoc.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="3768" Vartype="Byte" Bytesize="1" OffsetHex="00000EB8" Description="IsTraceLeftWall" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3769" Vartype="Byte" Bytesize="1" OffsetHex="00000EB9" Description="IsTraceRightWall" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3770" Vartype="Byte" Bytesize="1" OffsetHex="00000EBA" Description="CanTraceForwardWall" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3771" Vartype="Byte" Bytesize="1" OffsetHex="00000EBB" Description="IsRunWallCDTime?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3772" Vartype="Byte" Bytesize="1" OffsetHex="00000EBC" Description="RunWallKeepTimeCanJump" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3776" Vartype="Pointer" Bytesize="8" OffsetHex="00000EC0" Description="RunWallLineBpXSX" DisplayMethod="unsigned integer"/>
        <Element Offset="3784" Vartype="Byte" Bytesize="1" OffsetHex="00000EC8" Description="PlayerInGround?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3788" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000ECC" DisplayMethod="unsigned integer"/>
        <Element Offset="3792" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000ED0" Description="SCWoodEvent" DisplayMethod="unsigned integer"/>
        <Element Offset="3796" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000ED4" DisplayMethod="unsigned integer"/>
        <Element Offset="3808" Vartype="Byte" Bytesize="1" OffsetHex="00000EE0" Description="InUseEventTouch?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3809" Vartype="Byte" Bytesize="1" OffsetHex="00000EE1" Description="IsNewPlayerDeFu" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3810" Vartype="Byte" Bytesize="1" OffsetHex="00000EE2" Description="IsNewPlayerLightSword" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3811" Vartype="Byte" Bytesize="1" OffsetHex="00000EE3" Description="IsNewPlayerUpLightSword" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3812" Vartype="Byte" Bytesize="1" OffsetHex="00000EE4" Description="IsNewPlayerIronArmy?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3813" Vartype="Byte" Bytesize="1" OffsetHex="00000EE5" Description="IsJumpAirToRunWall" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3816" Vartype="Float" Bytesize="4" OffsetHex="00000EE8" Description="SkillMoveForward" DisplayMethod="unsigned integer"/>
        <Element Offset="3820" Vartype="Byte" Bytesize="1" OffsetHex="00000EEC" Description="IsPlayerForcePlayCameraAnim" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3821" Vartype="Byte" Bytesize="1" OffsetHex="00000EED" Description="AIBrachPlayerUpLight" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3822" Vartype="Byte" Bytesize="1" OffsetHex="00000EEE" Description="IsQYQAINoUse?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3824" Vartype="Pointer" Bytesize="8" OffsetHex="00000EF0" Description="HealthUI_AI" DisplayMethod="unsigned integer"/>
        <Element Offset="3832" Vartype="Float" Bytesize="4" OffsetHex="00000EF8" Description="EMPAIFlyLoc.X" DisplayMethod="unsigned integer"/>
        <Element Offset="3836" Vartype="Float" Bytesize="4" OffsetHex="00000EFC" Description="EMPAIFlyLoc.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="3840" Vartype="Float" Bytesize="4" OffsetHex="00000F00" Description="EMPAIFlyLoc.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="3844" Vartype="Byte" Bytesize="1" OffsetHex="00000F04" Description="OtherEvent?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3845" Vartype="Byte" Bytesize="1" OffsetHex="00000F05" Description="IsNewPlayerEMP" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3848" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F08" Description="CloseEMPNewPlayerUI" DisplayMethod="unsigned integer"/>
        <Element Offset="3852" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000F0C" DisplayMethod="unsigned integer"/>
        <Element Offset="3864" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F18" Description="FireTypeShake" DisplayMethod="unsigned integer"/>
        <Element Offset="3868" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F1C" DisplayMethod="unsigned integer"/>
        <Element Offset="3872" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F20" Description="NewPlayerShunFinish" DisplayMethod="unsigned integer"/>
        <Element Offset="3876" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000F24" DisplayMethod="unsigned integer"/>
        <Element Offset="3888" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F30" Description="PutFire" DisplayMethod="unsigned integer"/>
        <Element Offset="3892" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000F34" DisplayMethod="unsigned integer"/>
        <Element Offset="3904" Vartype="Byte" Bytesize="1" OffsetHex="00000F40" Description="UpLightBlockWAll?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3908" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F44" DisplayMethod="unsigned integer"/>
        <Element Offset="3912" Vartype="Pointer" Bytesize="8" OffsetHex="00000F48" Description="NoUseUpLightTipUI" DisplayMethod="unsigned integer"/>
        <Element Offset="3920" Vartype="Byte" Bytesize="1" OffsetHex="00000F50" Description="INWaterVolume?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3921" Vartype="Byte" Bytesize="1" OffsetHex="00000F51" Description="IsHitBlood70?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3922" Vartype="Byte" Bytesize="1" OffsetHex="00000F52" Description="IsHitBlood55?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3923" Vartype="Byte" Bytesize="1" OffsetHex="00000F53" Description="IsHitBlood33?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3924" Vartype="Byte" Bytesize="1" OffsetHex="00000F54" Description="IsDeFuAnimIsPlay?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3925" Vartype="Byte" Bytesize="1" OffsetHex="00000F55" Description="IsPressDEFULightSword" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3926" Vartype="Byte" Bytesize="1" OffsetHex="00000F56" Description="IsDEFULightSwordPressAdd?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3928" Vartype="Pointer" Bytesize="8" OffsetHex="00000F58" Description="PlayerUI_UMG" DisplayMethod="unsigned integer"/>
        <Element Offset="3936" Vartype="Float" Bytesize="4" OffsetHex="00000F60" Description="PlayerPower" DisplayMethod="unsigned integer"/>
        <Element Offset="3940" Vartype="Byte" Bytesize="1" OffsetHex="00000F64" Description="IsDefuLightSword-Power?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3944" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F68" Description="PlayerFOV" DisplayMethod="unsigned integer"/>
        <Element Offset="3948" Vartype="Byte" Bytesize="1" OffsetHex="00000F6C" Description="IsNewPlayer_TelePortAI" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3952" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F70" Description="CloseTelePortNewPlayerUI" DisplayMethod="unsigned integer"/>
        <Element Offset="3956" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000F74" DisplayMethod="unsigned integer"/>
        <Element Offset="3968" Vartype="Byte" Bytesize="1" OffsetHex="00000F80" Description="WeaponIsmuffler?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="3972" Vartype="Float" Bytesize="4" OffsetHex="00000F84" Description="WeaponNoiseLoc.X" DisplayMethod="unsigned integer"/>
        <Element Offset="3976" Vartype="Float" Bytesize="4" OffsetHex="00000F88" Description="WeaponNoiseLoc.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="3980" Vartype="Float" Bytesize="4" OffsetHex="00000F8C" Description="WeaponNoiseLoc.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="3984" Vartype="Pointer" Bytesize="8" OffsetHex="00000F90" Description="NearHearAI" DisplayMethod="unsigned integer">
          <Structure Name="NearHearAI[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="Pointer" Bytesize="8" OffsetHex="00000000" Description="[0] NearHearAI" DisplayMethod="unsigned integer"/>
              <Element Offset="8" Vartype="Pointer" Bytesize="8" OffsetHex="00000008" Description="[1] NearHearAI" DisplayMethod="unsigned integer"/>
              <Element Offset="16" Vartype="Pointer" Bytesize="8" OffsetHex="00000010" Description="[2] NearHearAI" DisplayMethod="unsigned integer"/>
              <Element Offset="24" Vartype="Pointer" Bytesize="8" OffsetHex="00000018" Description="[3] NearHearAI" DisplayMethod="unsigned integer"/>
              <Element Offset="32" Vartype="Pointer" Bytesize="8" OffsetHex="00000020" Description="[4] NearHearAI" DisplayMethod="unsigned integer"/>
              <Element Offset="40" Vartype="Pointer" Bytesize="8" OffsetHex="00000028" Description="[5] NearHearAI" DisplayMethod="unsigned integer"/>
              <Element Offset="48" Vartype="Pointer" Bytesize="8" OffsetHex="00000030" Description="[6] NearHearAI" DisplayMethod="unsigned integer"/>
              <Element Offset="56" Vartype="Pointer" Bytesize="8" OffsetHex="00000038" Description="[7] NearHearAI" DisplayMethod="unsigned integer"/>
              <Element Offset="64" Vartype="Pointer" Bytesize="8" OffsetHex="00000040" Description="[8] NearHearAI" DisplayMethod="unsigned integer"/>
              <Element Offset="72" Vartype="Pointer" Bytesize="8" OffsetHex="00000048" Description="[9] NearHearAI" DisplayMethod="unsigned integer"/>
              <Element Offset="80" Vartype="Pointer" Bytesize="8" OffsetHex="00000050" Description="[10] NearHearAI" DisplayMethod="unsigned integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="3992" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F98" Description="NearHearAI_size" DisplayMethod="unsigned integer"/>
        <Element Offset="3996" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F9C" Description="NearHearAI_sizes" DisplayMethod="unsigned integer"/>
        <Element Offset="4000" Vartype="8 Bytes" Bytesize="8" OffsetHex="00000FA0" Description="Weapon9Name" DisplayMethod="unsigned integer"/>
        <Element Offset="4008" Vartype="Byte" Bytesize="1" OffsetHex="00000FA8" Description="IsStealthKill?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4009" Vartype="Byte" Bytesize="1" OffsetHex="00000FA9" Description="NoWeaponCG" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4010" Vartype="Byte" Bytesize="1" OffsetHex="00000FAA" Description="IsCaiDaoWeapon?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4011" Vartype="Byte" Bytesize="1" OffsetHex="00000FAB" Description="IsArmyEye" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4012" Vartype="Byte" Bytesize="1" OffsetHex="00000FAC" Description="FatOrHaveDefuAI?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4013" Vartype="Byte" Bytesize="1" OffsetHex="00000FAD" Description="IsSprintAttackTime" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4014" Vartype="Byte" Bytesize="1" OffsetHex="00000FAE" Description="IsDoubleJump?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4015" Vartype="Byte" Bytesize="1" OffsetHex="00000FAF" Description="HuaChanCG" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4016" Vartype="Byte" Bytesize="1" OffsetHex="00000FB0" Description="SprintAttackCanUse" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4017" Vartype="Byte" Bytesize="1" OffsetHex="00000FB1" Description="INWaterVolume_CanDown?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4024" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000FB8" Description="OutWater" DisplayMethod="unsigned integer"/>
        <Element Offset="4028" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000FBC" DisplayMethod="unsigned integer"/>
        <Element Offset="4040" Vartype="Byte" Bytesize="1" OffsetHex="00000FC8" Description="IsCrouchToJump?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4044" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000FCC" DisplayMethod="unsigned integer"/>
        <Element Offset="4048" Vartype="Pointer" Bytesize="8" OffsetHex="00000FD0" Description="W Fire Sound" DisplayMethod="unsigned integer"/>
        <Element Offset="4056" Vartype="Byte" Bytesize="1" OffsetHex="00000FD8" Description="IsFinalAIDeadSlow" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4057" Vartype="Byte" Bytesize="1" OffsetHex="00000FD9" Description="Level03LoadCheckPonit" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4058" Vartype="Byte" Bytesize="1" OffsetHex="00000FDA" Description="QYQ_FightingLoc?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4064" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000FE0" Description="CloseDefuAmmoNewPlayerUI" DisplayMethod="unsigned integer"/>
        <Element Offset="4068" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000FE4" DisplayMethod="unsigned integer"/>
        <Element Offset="4080" Vartype="Float" Bytesize="4" OffsetHex="00000FF0" Description="MeleePower_UsePower" DisplayMethod="unsigned integer"/>
        <Element Offset="4084" Vartype="Float" Bytesize="4" OffsetHex="00000FF4" Description="Melee_UsePower" DisplayMethod="unsigned integer"/>
        <Element Offset="4088" Vartype="Float" Bytesize="4" OffsetHex="00000FF8" Description="Defu_UsePower" DisplayMethod="unsigned integer"/>
        <Element Offset="4092" Vartype="Float" Bytesize="4" OffsetHex="00000FFC" Description="LightSword_UsePower" DisplayMethod="unsigned integer"/>
        <Element Offset="4096" Vartype="Float" Bytesize="4" OffsetHex="00001000" Description="QYQ_UsePower" DisplayMethod="unsigned integer"/>
        <Element Offset="4100" Vartype="Float" Bytesize="4" OffsetHex="00001004" Description="UpLightSword_UsePower" DisplayMethod="unsigned integer"/>
        <Element Offset="4104" Vartype="Float" Bytesize="4" OffsetHex="00001008" Description="ZhaDi_UsePower" DisplayMethod="unsigned integer"/>
        <Element Offset="4108" Vartype="Float" Bytesize="4" OffsetHex="0000100C" Description="Shun_UsePower" DisplayMethod="unsigned integer"/>
        <Element Offset="4112" Vartype="Float" Bytesize="4" OffsetHex="00001010" Description="Sprint_UsePower" DisplayMethod="unsigned integer"/>
        <Element Offset="4116" Vartype="Byte" Bytesize="1" OffsetHex="00001014" Description="Is Game Pad?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4120" Vartype="Float" Bytesize="4" OffsetHex="00001018" Description="MouseXY_AddRate" DisplayMethod="unsigned integer"/>
        <Element Offset="4124" Vartype="Byte" Bytesize="1" OffsetHex="0000101C" Description="Add_AutoAnimFinish" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4128" Vartype="Float" Bytesize="4" OffsetHex="00001020" Description="GamePad_Y_Rate" DisplayMethod="unsigned integer"/>
        <Element Offset="4132" Vartype="Float" Bytesize="4" OffsetHex="00001024" Description="GamePadXY_AddRate" DisplayMethod="unsigned integer"/>
        <Element Offset="4136" Vartype="Byte" Bytesize="1" OffsetHex="00001028" Description="GamePadX_Reversal?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4137" Vartype="Byte" Bytesize="1" OffsetHex="00001029" Description="GamePadY_Reversal?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4138" Vartype="Byte" Bytesize="1" OffsetHex="0000102A" Description="MeleePowerCanUse" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4144" Vartype="4 Bytes" Bytesize="4" OffsetHex="00001030" Description="LevelQYQ" DisplayMethod="unsigned integer"/>
        <Element Offset="4148" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00001034" DisplayMethod="unsigned integer"/>
        <Element Offset="4160" Vartype="Pointer" Bytesize="8" OffsetHex="00001040" Description="BoatSpawnAI" DisplayMethod="unsigned integer"/>
        <Element Offset="4168" Vartype="Byte" Bytesize="1" OffsetHex="00001048" Description="IsTraceBoatAI" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4172" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000104C" DisplayMethod="unsigned integer"/>
        <Element Offset="4176" Vartype="Pointer" Bytesize="8" OffsetHex="00001050" Description="BoatAI" DisplayMethod="unsigned integer"/>
        <Element Offset="4184" Vartype="Pointer" Bytesize="8" OffsetHex="00001058" Description="BoatAICapsule" DisplayMethod="unsigned integer"/>
        <Element Offset="4192" Vartype="Pointer" Bytesize="8" OffsetHex="00001060" Description="BoatAI_Trace" DisplayMethod="unsigned integer"/>
        <Element Offset="4200" Vartype="4 Bytes" Bytesize="4" OffsetHex="00001068" Description="BoatAI_Number" DisplayMethod="unsigned integer"/>
        <Element Offset="4204" Vartype="Float" Bytesize="4" OffsetHex="0000106C" Description="MeleePowerAirTraceLoc.X" DisplayMethod="unsigned integer"/>
        <Element Offset="4208" Vartype="Float" Bytesize="4" OffsetHex="00001070" Description="MeleePowerAirTraceLoc.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="4212" Vartype="Float" Bytesize="4" OffsetHex="00001074" Description="MeleePowerAirTraceLoc.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="4216" Vartype="Pointer" Bytesize="8" OffsetHex="00001078" Description="TraceAIComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="4224" Vartype="Byte" Bytesize="1" OffsetHex="00001080" Description="WeaponFiting_VEPR?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4225" Vartype="Byte" Bytesize="1" OffsetHex="00001081" Description="WeaponFiting_GER?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4226" Vartype="Byte" Bytesize="1" OffsetHex="00001082" Description="WeaponFiting_Meta?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4227" Vartype="Byte" Bytesize="1" OffsetHex="00001083" Description="PlayerPower=0" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4228" Vartype="Byte" Bytesize="1" OffsetHex="00001084" Description="PowerLowTipIsVail?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4232" Vartype="Pointer" Bytesize="8" OffsetHex="00001088" Description="Weapon4" DisplayMethod="unsigned integer"/>
        <Element Offset="4240" Vartype="8 Bytes" Bytesize="8" OffsetHex="00001090" Description="Weapon4Name" DisplayMethod="unsigned integer"/>
        <Element Offset="4248" Vartype="Float" Bytesize="4" OffsetHex="00001098" Description="GamePadXY_SniperAddRate" DisplayMethod="unsigned integer"/>
        <Element Offset="4252" Vartype="Float" Bytesize="4" OffsetHex="0000109C" Description="MouseXY_SniperAddRate" DisplayMethod="unsigned integer"/>
        <Element Offset="4256" Vartype="Byte" Bytesize="1" OffsetHex="000010A0" Description="WeaponFiting_IOPR?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4257" Vartype="Byte" Bytesize="1" OffsetHex="000010A1" Description="WeaponID4_NoAmmo" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4264" Vartype="Pointer" Bytesize="8" OffsetHex="000010A8" Description="PressItemUMG" DisplayMethod="unsigned integer"/>
        <Element Offset="4272" Vartype="Byte" Bytesize="1" OffsetHex="000010B0" Description="TraceIteam?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4276" Vartype="4 Bytes" Bytesize="4" OffsetHex="000010B4" Description="PickUp_AmmoCache_VEPR_Number" DisplayMethod="unsigned integer"/>
        <Element Offset="4280" Vartype="4 Bytes" Bytesize="4" OffsetHex="000010B8" Description="PickUp_AmmoCache_GER_Number" DisplayMethod="unsigned integer"/>
        <Element Offset="4284" Vartype="4 Bytes" Bytesize="4" OffsetHex="000010BC" Description="PickUp_AmmoCache_META_Number" DisplayMethod="unsigned integer"/>
        <Element Offset="4288" Vartype="4 Bytes" Bytesize="4" OffsetHex="000010C0" Description="PickUp_AmmoCache_IOPR_Number" DisplayMethod="unsigned integer"/>
        <Element Offset="4292" Vartype="4 Bytes" Bytesize="4" OffsetHex="000010C4" Description="NowSPAmmo" DisplayMethod="unsigned integer"/>
        <Element Offset="4296" Vartype="4 Bytes" Bytesize="4" OffsetHex="000010C8" Description="PickUp_SPAmmoCache_GER_Number" DisplayMethod="unsigned integer"/>
        <Element Offset="4300" Vartype="4 Bytes" Bytesize="4" OffsetHex="000010CC" Description="PickUp_SPAmmoCache_VEPR_Number" DisplayMethod="unsigned integer"/>
        <Element Offset="4304" Vartype="4 Bytes" Bytesize="4" OffsetHex="000010D0" Description="PickUp_SPAmmoCache_Meta_Number" DisplayMethod="unsigned integer"/>
        <Element Offset="4308" Vartype="4 Bytes" Bytesize="4" OffsetHex="000010D4" Description="PickUp_SPAmmoCache_IOPR_Number" DisplayMethod="unsigned integer"/>
        <Element Offset="4312" Vartype="Pointer" Bytesize="8" OffsetHex="000010D8" Description="VEPR_AmmoName" DisplayMethod="unsigned integer"/>
        <Element Offset="4320" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000010E0" DisplayMethod="unsigned integer"/>
        <Element Offset="4336" Vartype="Pointer" Bytesize="8" OffsetHex="000010F0" Description="GER_AmmoName" DisplayMethod="unsigned integer"/>
        <Element Offset="4344" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000010F8" DisplayMethod="unsigned integer"/>
        <Element Offset="4360" Vartype="Pointer" Bytesize="8" OffsetHex="00001108" Description="IOPR_AmmoName" DisplayMethod="unsigned integer"/>
        <Element Offset="4368" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00001110" DisplayMethod="unsigned integer"/>
        <Element Offset="4384" Vartype="Pointer" Bytesize="8" OffsetHex="00001120" Description="Meta_AmmoName" DisplayMethod="unsigned integer"/>
        <Element Offset="4392" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00001128" DisplayMethod="unsigned integer"/>
        <Element Offset="4408" Vartype="Pointer" Bytesize="8" OffsetHex="00001138" Description="VEPR_SPAmmoName" DisplayMethod="unsigned integer"/>
        <Element Offset="4416" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00001140" DisplayMethod="unsigned integer"/>
        <Element Offset="4432" Vartype="Pointer" Bytesize="8" OffsetHex="00001150" Description="GER_SPAmmoName" DisplayMethod="unsigned integer"/>
        <Element Offset="4440" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00001158" DisplayMethod="unsigned integer"/>
        <Element Offset="4456" Vartype="Pointer" Bytesize="8" OffsetHex="00001168" Description="Meta_SPAmmoName" DisplayMethod="unsigned integer"/>
        <Element Offset="4464" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00001170" DisplayMethod="unsigned integer"/>
        <Element Offset="4480" Vartype="Pointer" Bytesize="8" OffsetHex="00001180" Description="IOPR_SPAmmoName" DisplayMethod="unsigned integer"/>
        <Element Offset="4488" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00001188" DisplayMethod="unsigned integer"/>
        <Element Offset="4504" Vartype="Byte" Bytesize="1" OffsetHex="00001198" Description="PickUp_GER?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4505" Vartype="Byte" Bytesize="1" OffsetHex="00001199" Description="PickUp_Meta?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4506" Vartype="Byte" Bytesize="1" OffsetHex="0000119A" Description="PickUp_IOPR?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4507" Vartype="Byte" Bytesize="1" OffsetHex="0000119B" Description="PickUpSomething?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4508" Vartype="Byte" Bytesize="1" OffsetHex="0000119C" Description="IsMoveForward?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4509" Vartype="Byte" Bytesize="1" OffsetHex="0000119D" Description="VisSkillList?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4510" Vartype="Byte" Bytesize="1" OffsetHex="0000119E" Description="VisPlayerHealth?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4511" Vartype="Byte" Bytesize="1" OffsetHex="0000119F" Description="VisCrossHair?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4512" Vartype="Float" Bytesize="4" OffsetHex="000011A0" Description="AddFov_PlayerDIY" DisplayMethod="unsigned integer"/>
        <Element Offset="4516" Vartype="Byte" Bytesize="1" OffsetHex="000011A4" Description="UnLockLightSwrodA?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4517" Vartype="Byte" Bytesize="1" OffsetHex="000011A5" Description="UnLockAirMelee?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4518" Vartype="Byte" Bytesize="1" OffsetHex="000011A6" Description="UnLockJumpAttack?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4519" Vartype="Byte" Bytesize="1" OffsetHex="000011A7" Description="UnLockSprintAttack?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4520" Vartype="Byte" Bytesize="1" OffsetHex="000011A8" Description="UnLockMeleePower?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4524" Vartype="4 Bytes" Bytesize="4" OffsetHex="000011AC" DisplayMethod="unsigned integer"/>
        <Element Offset="4528" Vartype="Pointer" Bytesize="8" OffsetHex="000011B0" Description="BMISave" DisplayMethod="unsigned integer"/>
        <Element Offset="4536" Vartype="Float" Bytesize="4" OffsetHex="000011B8" Description="EMP_HitDistance" DisplayMethod="unsigned integer"/>
        <Element Offset="4540" Vartype="Float" Bytesize="4" OffsetHex="000011BC" Description="MeleePower_Hit" DisplayMethod="unsigned integer"/>
        <Element Offset="4544" Vartype="Float" Bytesize="4" OffsetHex="000011C0" Description="UpLight_Hit" DisplayMethod="unsigned integer"/>
        <Element Offset="4548" Vartype="Float" Bytesize="4" OffsetHex="000011C4" Description="GER_LastFire_DownSS" DisplayMethod="unsigned integer"/>
        <Element Offset="4552" Vartype="Float" Bytesize="4" OffsetHex="000011C8" Description="GER_LastFireLeft_SS" DisplayMethod="unsigned integer"/>
        <Element Offset="4556" Vartype="Float" Bytesize="4" OffsetHex="000011CC" Description="GER_LastFireRight_SS" DisplayMethod="unsigned integer"/>
        <Element Offset="4560" Vartype="Byte" Bytesize="1" OffsetHex="000011D0" Description="MeleeXULI_Brach01?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4561" Vartype="Byte" Bytesize="1" OffsetHex="000011D1" Description="MeleeXULI_Brach02?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4564" Vartype="Float" Bytesize="4" OffsetHex="000011D4" Description="MeleeXuLiBrach02Time" DisplayMethod="unsigned integer"/>
        <Element Offset="4568" Vartype="Float" Bytesize="4" OffsetHex="000011D8" Description="MeleeXuLiBrachFireTime" DisplayMethod="unsigned integer"/>
        <Element Offset="4572" Vartype="Byte" Bytesize="1" OffsetHex="000011DC" Description="SprintXULI_Brach01?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4573" Vartype="Byte" Bytesize="1" OffsetHex="000011DD" Description="SprintXULI_Brach02?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4576" Vartype="Float" Bytesize="4" OffsetHex="000011E0" Description="SprintXuLiBrach02Time" DisplayMethod="unsigned integer"/>
        <Element Offset="4580" Vartype="Float" Bytesize="4" OffsetHex="000011E4" Description="SprintXuLiBrachFireTime" DisplayMethod="unsigned integer"/>
        <Element Offset="4584" Vartype="Byte" Bytesize="1" OffsetHex="000011E8" Description="UnLockSprintAttackA?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4585" Vartype="Byte" Bytesize="1" OffsetHex="000011E9" Description="UnLockSprintAttackB?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4586" Vartype="Byte" Bytesize="1" OffsetHex="000011EA" Description="UnLockSprintAttackC?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4587" Vartype="Byte" Bytesize="1" OffsetHex="000011EB" Description="UnLockMeleePowerA?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4588" Vartype="Byte" Bytesize="1" OffsetHex="000011EC" Description="UnLockMeleePowerB?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4589" Vartype="Byte" Bytesize="1" OffsetHex="000011ED" Description="UnLockMeleePowerC?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4592" Vartype="Pointer" Bytesize="8" OffsetHex="000011F0" Description="XuLi_Sound" DisplayMethod="unsigned integer"/>
        <Element Offset="4600" Vartype="Byte" Bytesize="1" OffsetHex="000011F8" Description="SprintAttackXuLi_ing?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4601" Vartype="Byte" Bytesize="1" OffsetHex="000011F9" Description="MeleePowerXuLi_ing?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4608" Vartype="Pointer" Bytesize="8" OffsetHex="00001200" Description="SprintAttackXuLiLoopFeedBack" DisplayMethod="unsigned integer"/>
        <Element Offset="4616" Vartype="Pointer" Bytesize="8" OffsetHex="00001208" Description="MeleeXuLiLoopFeedBack" DisplayMethod="unsigned integer"/>
        <Element Offset="4624" Vartype="Byte" Bytesize="1" OffsetHex="00001210" Description="UnLockAirMeleePowerA?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4625" Vartype="Byte" Bytesize="1" OffsetHex="00001211" Description="UnLockAirMeleePowerB?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4626" Vartype="Byte" Bytesize="1" OffsetHex="00001212" Description="UnLockAirMeleePowerC?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4628" Vartype="Float" Bytesize="4" OffsetHex="00001214" Description="AutoAnimSpeed" DisplayMethod="unsigned integer"/>
        <Element Offset="4632" Vartype="Float" Bytesize="4" OffsetHex="00001218" Description="QYQAI_Distance" DisplayMethod="unsigned integer"/>
        <Element Offset="4636" Vartype="Byte" Bytesize="1" OffsetHex="0000121C" Description="UnLockQYQAIC?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4637" Vartype="Byte" Bytesize="1" OffsetHex="0000121D" Description="UnLockQYQAIB?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4638" Vartype="Byte" Bytesize="1" OffsetHex="0000121E" Description="UnLockQYQAIA?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4640" Vartype="Pointer" Bytesize="8" OffsetHex="00001220" Description="WeaponFire_Par" DisplayMethod="unsigned integer"/>
        <Element Offset="4648" Vartype="Byte" Bytesize="1" OffsetHex="00001228" Description="IsJXB_Hand?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4652" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000122C" DisplayMethod="unsigned integer"/>
        <Element Offset="4656" Vartype="Pointer" Bytesize="8" OffsetHex="00001230" Description="ClimbHandMod" DisplayMethod="unsigned integer"/>
        <Element Offset="4664" Vartype="Pointer" Bytesize="8" OffsetHex="00001238" Description="SkinSave" DisplayMethod="unsigned integer"/>
        <Element Offset="4672" Vartype="Byte" Bytesize="1" OffsetHex="00001240" Description="AirPlaneDrop?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4676" Vartype="4 Bytes" Bytesize="4" OffsetHex="00001244" Description="NowVioceLanguages" DisplayMethod="unsigned integer"/>
        <Element Offset="4680" Vartype="Pointer" Bytesize="8" OffsetHex="00001248" Description="TraceAIActor" DisplayMethod="unsigned integer"/>
        <Element Offset="4688" Vartype="Byte" Bytesize="1" OffsetHex="00001250" Description="CarSwithchPlayer?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4692" Vartype="4 Bytes" Bytesize="4" OffsetHex="00001254" Description="UpLightMoveType" DisplayMethod="unsigned integer"/>
        <Element Offset="4696" Vartype="Byte" Bytesize="1" OffsetHex="00001258" Description="IsWeaponView?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4697" Vartype="Byte" Bytesize="1" OffsetHex="00001259" Description="IsCaiDaoChuJue?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4698" Vartype="Byte" Bytesize="1" OffsetHex="0000125A" Description="IsCanUserQYQAINewPlayer" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4699" Vartype="Byte" Bytesize="1" OffsetHex="0000125B" Description="StopMove?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4700" Vartype="Byte" Bytesize="1" OffsetHex="0000125C" Description="IsCheckTouchTime?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4701" Vartype="Byte" Bytesize="1" OffsetHex="0000125D" Description="IsFireHit?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4702" Vartype="Byte" Bytesize="1" OffsetHex="0000125E" Description="QianXingLevel?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4703" Vartype="Byte" Bytesize="1" OffsetHex="0000125F" Description="IsFanZhuangHuaChan?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4704" Vartype="Byte" Bytesize="1" OffsetHex="00001260" Description="IsDefuPerfact?" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4705" Vartype="Byte" Bytesize="1" OffsetHex="00001261" Description="IsPressAdd" DisplayMethod="unsigned integer" ChildStructStart="1"/>
        <Element Offset="4708" Vartype="Float" Bytesize="4" OffsetHex="00001264" Description="Origin.X" DisplayMethod="unsigned integer"/>
        <Element Offset="4712" Vartype="Float" Bytesize="4" OffsetHex="00001268" Description="Origin.Y" DisplayMethod="unsigned integer"/>
        <Element Offset="4716" Vartype="Float" Bytesize="4" OffsetHex="0000126C" Description="Origin.Z" DisplayMethod="unsigned integer"/>
        <Element Offset="4720" Vartype="Pointer" Bytesize="8" OffsetHex="00001270" Description="AI" DisplayMethod="unsigned integer"/>
      </Elements>
    </Structure>
  </Structures>
</CheatTable>
